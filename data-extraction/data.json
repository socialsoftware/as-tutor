[
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2010/primeiro/exame-20110113-companion-pt-a.tex",
        "quizTitle": "..-data-2010-primeiro-exame-20110113-companion-pt-a",
        "questions": [
            {
                "questionId": "VistasDesempenho",
                "content": "\n  Suponha que existem determinados requisitos de desempenho para um\n  sistema, e que pretende mostrar aos stakeholders desse sistema que a\n  arquitectura de software que concebeu satisfaz esses requisitos.\n  Para isso\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o faz sentido usar vistas do tipo de vista m\u00f3dulo, uma\n    vez que estas apenas descrevem o sistema do ponto de vista est\u00e1tico",
                    "Deve-se usar exclusivamente vistas do tipo de vista\n    componente-e-conector, que descrevem os aspectos din\u00e2micos do sistema",
                    "Pode ser necess\u00e1rio usar vistas dos tr\u00eas tipos de vistas",
                    "As \u00fanicas vistas que s\u00e3o relevantes para aspectos de\n    desempenho s\u00e3o vistas do estilo instala\u00e7\u00e3o (\\emph{deployment})"
                ]
            },
            {
                "questionId": "AtrQualNegocio",
                "content": "\n  Existem outros factores que afectam o desenvolvimento de um sistema\n  de software, para al\u00e9m dos seus requisitos funcionais e de atributos\n  de qualidade.  Por exemplo, factores como o or\u00e7amento ou o tempo\n  dispon\u00edvel.  Estes factores\n\n    ",
                "image": [],
                "options": [
                    "Influenciam o processo de desenvolvimento de software e a\n    gest\u00e3o do mesmo, mas n\u00e3o a arquitectura de software do sistema a\n    desenvolver",
                    "Devem ser capturados atrav\u00e9s de cen\u00e1rios, tais como os\n    requisitos de atributos de qualidade, e ser tidos em conta no\n    desenho da arquitectura de software",
                    "S\u00e3o importantes para determinar a viabilidade do sistema,\n    mas uma vez que se chegue \u00e0 conclus\u00e3o de que o sistema pode ser\n    desenvolvido com essas restri\u00e7\u00f5es, a arquitectura de software j\u00e1\n    n\u00e3o depende destes factores",
                    "N\u00e3o s\u00e3o uma das influ\u00eancias da arquitectura de software no\n    ciclo de neg\u00f3cio da arquitectura"
                ]
            },
            {
                "questionId": "Reutilizar",
                "content": "\n  Suponha que vai desenvolver um novo sistema de software e que\n  pretende que uma parte da funcionalidade deste novo sistema possa\n  ser facilmente reutilizada em sistemas a desenvolver no futuro.\n  Quais dos seguintes estilos arquitecturais s\u00e3o mais adequados para\n  mostrar que a arquitectura do sistema satisfaz este requisito.\n\n    ",
                "image": [],
                "options": [
                    "Os estilos decomposi\u00e7\u00e3o (\\emph{decomposition}) e\n    utiliza\u00e7\u00e3o (\\emph{uses}), que nos permitem mostrar at\u00e9 que ponto\n    um determinado m\u00f3dulo depende de outras partes do sistema",
                    "O estilo implementa\u00e7\u00e3o (\\emph{implementation}), que nos\n    permite saber onde est\u00e3o os artefactos que implementam um\n    determinado m\u00f3dulo",
                    "O estilo camadas (\\emph{layers}), que nos permite mostrar\n    que a estrutura do nosso sistema \u00e9 composta por v\u00e1rios m\u00f3dulos que\n    podem ser facilmente reutilizados noutros sistemas",
                    "Os estilos cliente-servidor (\\emph{client-server}) e\n    instala\u00e7\u00e3o (\\emph{deployment}), que nos permitem isolar a\n    funcionalidade pretendida num componente que executa autonomamente\n    e, portanto, reutiliz\u00e1vel noutros sistemas"
                ]
            },
            {
                "questionId": "AumentarDesempenhoClienteServidor",
                "content": "\n  Suponha que tem um sistema com uma arquitectura cliente-servidor que\n  foi concebido para suportar a exist\u00eancia simult\u00e2nea de no m\u00e1ximo 100\n  clientes, sem requisitos especiais de disponibilidade.  A solu\u00e7\u00e3o\n  adoptada e posta em funcionamento h\u00e1 4 anos consiste num \u00fanico\n  componente do tipo servidor ao qual se ligam todos os clientes.\n  Esta solu\u00e7\u00e3o satisfazia os requisitos iniciais mas com o aumento\n  recente do n\u00famero m\u00e1ximo de clientes para 200, o sistema deixou de\n  ter um desempenho aceit\u00e1vel.  N\u00e3o sabendo mais nada sobre a\n  arquitectura do sistema, que solu\u00e7\u00e3o prop\u00f5e para resolver os\n  problemas de desempenho do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Manter a arquitectura actual do sistema e optimizar o\n    c\u00f3digo de modo a alcan\u00e7ar os n\u00edveis de desempenho necess\u00e1rios actualmente",
                    "Alterar a vista de instala\u00e7\u00e3o do sistema, replicando o servidor por\n    mais m\u00e1quinas",
                    "Rever a arquitectura do sistema de forma a passar parte da\n    computa\u00e7\u00e3o actualmente feita no servidor para os clientes",
                    "Substituir a m\u00e1quina usada pelo servidor por uma m\u00e1quina\n    mais poderosa que satisfa\u00e7a os novos requisitos de desempenho,\n    mantendo apenas um componente servidor em funcionamento"
                ]
            },
            {
                "questionId": "TresTiposVista",
                "content": "\n  De acordo com o modelo do SEI, existem tr\u00eas tipos diferentes de\n  vistas arquitecturais que s\u00e3o normalmente necess\u00e1rias para descrever\n  completamente uma arquitectura de software.\n\n    ",
                "image": [],
                "options": [
                    "Estes tr\u00eas tipos de vistas complementam-se, mas s\u00e3o\n    completamente independentes entre si, mostrando aspectos\n    diferentes de um sistema que n\u00e3o se relacionam de nenhuma forma",
                    "Os tipos de vista m\u00f3dulo e componente-e-conector\n    s\u00e3o independentes entre si, mas o tipo de vista afecta\u00e7\u00e3o depende\n    dos dois primeiros",
                    "Cada tipo de vista utiliza elementos de software\n    diferentes, como m\u00f3dulos ou componentes, pelo que n\u00e3o faz sentido\n    falar em rela\u00e7\u00f5es entre estes tipos de vistas",
                    "Apesar de cada tipo de vista apresentar aspectos\n    diferentes de um sistema, existem rela\u00e7\u00f5es entre todos eles"
                ]
            },
            {
                "questionId": "ModificabilidadeCamadas",
                "content": "\n  Numa arquitectura de camadas composta por quatro camadas, em que a\n  camada mais de cima \u00e9 a camada n\u00famero 1 e a de mais de baixo \u00e9 a\n  camada n\u00famero 4, qual das camadas \u00e9 mais facilmente modific\u00e1vel?\n\n    ",
                "image": [],
                "options": [
                    "A camada 1",
                    "A camada 4",
                    "Numa arquitectura de camadas, qualquer camada \u00e9 igualmente\n    modific\u00e1vel",
                    "A facilidade de modifica\u00e7\u00e3o n\u00e3o \u00e9 particularmente\n    facilitada por uma arquitectura de camadas"
                ]
            },
            {
                "questionId": "UtilidadeArquitectura",
                "content": "\n  O desenho da arquitectura de software de um sistema complexo\n\n    ",
                "image": [],
                "options": [
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de a implementa\u00e7\u00e3o do sistema ter sido conclu\u00edda, visto que\n    a arquitectura serve para restringir a implementa\u00e7\u00e3o",
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de a implementa\u00e7\u00e3o do sistema ter sido conclu\u00edda, porque\n    se o sistema j\u00e1 est\u00e1 implementado, a sua implementa\u00e7\u00e3o determina\n    univocamente a arquitectura do sistema",
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de o sistema passar todos os testes de aceita\u00e7\u00e3o por parte\n    do cliente, altura a partir da qual n\u00e3o v\u00e3o existir mais\n    altera\u00e7\u00f5es de requisitos",
                    "\u00c9 \u00fatil mesmo que a implementa\u00e7\u00e3o j\u00e1 tenha sido conclu\u00edda e\n    o sistema tenha entrado na fase de manuten\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "ArchitecturalDrivers",
                "content": "\n  Os requisitos para sistemas complexos s\u00e3o normalmente muito\n  numerosos e conflituosos entre si, tornando imposs\u00edvel satisfazer\n  todos os requisitos completamente numa implementa\u00e7\u00e3o do sistema.\n  Por isso, o processo recomendado para se fazer o desenho da\n  arquitectura de software de um sistema passa pela identifica\u00e7\u00e3o dos\n  \\emph{architectural drivers}, que ir\u00e3o moldar o desenho da\n  arquitectura.  Estes \\emph{architectural drivers} devem ser\n  escolhidos de forma a que sejam\n\n    ",
                "image": [],
                "options": [
                    "Um subconjunto dos requisitos que n\u00e3o entram em conflito\n    entre si e que correspondam aos objectivos de neg\u00f3cio mais importantes",
                    "Um subconjunto dos requisitos que mais entram em conflito e\n    para os quais \u00e9 preciso encontrar compromissos cedo no processo de desenho",
                    "Um subconjunto dos requisitos que correspondam aos\n    objectivos de neg\u00f3cio mais importantes, independentemente de\n    entrarem em conflito entre si",
                    "Um subconjunto dos requisitos que \u00e9 escolhido\n    exclusivamente pelo arquitecto tendo em conta a sua influ\u00eancia na\n    arquitectura do sistema"
                ]
            },
            {
                "questionId": "ArqEmailMTA",
                "content": "\n  O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes\n que desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para\n  enviar um email, um utilizador pode utilizar um programa como o\n  Microsoft Outlook ou o Mozilla Thunderbird, genericamente designado\n  por \\emph{mail user agent} (MUA), para compor a sua mensagem e\n  envi\u00e1-la.  Para enviar a mensagem, tipicamente o MUA liga-se a um\n  \\emph{mail transfer agent} (MTA), que recebe a mensagem, analisa os\n  cabe\u00e7alhos da mesma para determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s\n  consulta do sistema DNS para determinar quais os MTA respons\u00e1veis\n  por cada um dos destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos\n  endere\u00e7os de destino para entregar a mensagem.  Cada um desses MTAs\n  recebe a mensagem e armazena-a localmente ou reenvia-a para outros\n  MTAs (por exemplo, quando existem \\emph{forwards} ou \\emph{aliases}\n  configurados, ou quando o MTA que recebe a mensagem n\u00e3o \u00e9 o\n  respons\u00e1vel final pelo endere\u00e7o de email do destinat\u00e1rio).\n\n Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n  sistema de email, qual dos seguintes estilos arquitecturais lhe\n  parece mais adequado para representar o padr\u00e3o de interac\u00e7\u00e3o\n  existente entre os MTAs?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            },
            {
                "questionId": "ArqEmailIMAP",
                "content": "\n  Considerando ainda o exemplo do sistema de email, os MUAs servem n\u00e3o\n  s\u00f3 para compor e enviar mensagens, mas tamb\u00e9m para os utilizadores\n  lerem as mensagens de email que lhe foram enviadas.  Para isso os\n  MUAs t\u00eam que obter essas mensagens do componente que as armazena\n  para as mostrar ao utilizador.  Duas formas diferentes de o fazer \u00e9\n  usando os protocolos POP e IMAP.  No primeiro caso, as mensagens s\u00e3o\n  movidas do servidor de POP para o computador do utilizador.  No\n  segundo caso, as mensagens continuam armazenadas no servidor de\n  IMAP, permitindo assim que o utilizador possa aceder ao seu email a\n  partir de computadores diferentes, desde que todos eles se consigam\n  ligar ao mesmo servidor de IMAP.\n\n  Qual dos seguintes estilos arquitecturais lhe parece mais adequado\n  para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs e um\n  servidor de IMAP?\n\n   ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Dados Partilhados (\\emph{Shared data})"
                ]
            },
            {
                "questionId": "AlteracaoWebDois",
                "content": "\n  A evolu\u00e7\u00e3o registada nas aplica\u00e7\u00f5es web no sentido de providenciar\n  uma interface com o utilizador mais rica levou a uma mudan\u00e7a na sua\n  arquitectura: parte da computa\u00e7\u00e3o da aplica\u00e7\u00e3o passou a ser feita no\n  \\emph{browser} web usado pelos utilizadores para aceder \u00e0 aplica\u00e7\u00e3o.\n  Como \u00e9 que esta altera\u00e7\u00e3o na arquitectura se manifesta nos\n  diferentes tipos de vista que descrevem a arquitectura de software\n  de uma aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Visto que \u00e9 sobre aspectos de execu\u00e7\u00e3o, a altera\u00e7\u00e3o\n    manifesta-se apenas atrav\u00e9s da altera\u00e7\u00e3o dos componentes e\n    conectores existentes no sistema",
                    "Esta altera\u00e7\u00e3o na forma de funcionamento das aplica\u00e7\u00f5es\n    n\u00e3o corresponde a nenhuma altera\u00e7\u00e3o da sua arquitectura, visto\n    que, a n\u00edvel arquitectural, continuamos a ter os mesmos\n    componentes",
                    "A \u00fanica altera\u00e7\u00e3o arquitectural \u00e9 na vista de Instala\u00e7\u00e3o\n    (\\emph{Deployment}), uma vez que os componentes e conectores\n    continuam a ser os mesmos, mas executam em s\u00edtios diferentes",
                    "Esta altera\u00e7\u00e3o reflecte-se na rela\u00e7\u00e3o existente entre\n    m\u00f3dulos e componentes do sistema"
                ]
            },
            {
                "questionId": "XBoardChess",
                "content": "\n  Dada a complexidade de construir um bom jogador autom\u00e1tico de\n  Xadrez, \u00e9 normal que os programas para jogar Xadrez recorram a\n  motores de Xadrez (\\emph{chess engines}) j\u00e1 existentes, como mostra\n  o seguinte excerto da Wikipedia:\n  \\begin{quote}\n    A chess engine is a computer program that can play the game of\n    chess.\n\n    Most chess engines do not have their own graphical user interface\n    (GUI) but are rather console applications that communicate with a\n    GUI such as XBoard (Linux) and WinBoard (Windows) via a standard\n    protocol.\n  \\end{quote}\n\n  Na p\u00e1gina web do XBoard, podemos ler o seguinte:\n  \\begin{quote}\n    XBoard is a graphical user interface for chess [...]. It displays\n    a chessboard on the screen, accepts moves made with the mouse, and\n    loads and saves games in Portable Game Notation (PGN). It serves\n    as a front-end for many different chess services, including:\n\n    \\begin{itemize}\n    \\item Chess engines that will run on your machine and play a game\n      against you or help you analyze, such as GNU Chess, Crafty, or\n      many others.\n    \\item [...]\n    \\end{itemize}\n  \\end{quote}\n \n  Tendo em conta a informa\u00e7\u00e3o acima sobre o XBoard, os motores de\n  Xadrez, e a forma como eles interagem em tempo de execu\u00e7\u00e3o, qual dos\n  seguintes estilos arquitecturais melhor representa a arquitectura de\n  software de um sistema baseado no XBoard e num dos motores?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})"
                ]
            },
            {
                "questionId": "AlterarFuncionalidadesExistentes",
                "content": "\n  Suponha que vai trabalhar para a equipa de desenvolvimento de um\n  sistema de software de grandes dimens\u00f5es, e que lhe s\u00e3o atribu\u00eddas\n  tarefas de altera\u00e7\u00e3o de funcionalidades j\u00e1 existentes.  Quais das\n  seguintes vistas arquitecturais lhe seriam, em princ\u00edpio, mais \u00fateis\n  para desempenhar rapidamente essas tarefas?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Camadas (\\emph{Layers})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de\n    Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Generaliza\u00e7\u00e3o (\\emph{Generalization})"
                ]
            },
            {
                "questionId": "BlackBoxTesting",
                "content": "\n  Considere o seguinte excerto da p\u00e1gina da Wikipedia sobre testes de\n  caixa preta (\\emph{black-box testing}):\n  \\begin{quote}\n    Black-box testing is a method of software testing that tests the\n    functionality of an application as opposed to its internal\n    structures or workings.  Specific knowledge of the application's\n    code/internal structure and programming knowledge in general is\n    not required.  Test cases are built around specifications and\n    requirements, i.e., what the application is supposed to do.\n  \\end{quote}\n  \n  Supondo que pertence \u00e0 equipa de testes de um sistema complexo e que\n  \u00e9 respons\u00e1vel por efectuar testes de caixa preta sobre o sistema,\n  quais das seguintes vistas da arquitectura de software do sistema\n  lhe seriam mais \u00fateis?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "Vistas de componente-e-conector",
                    "Nenhumas, visto que para efectuar os testes de caixa preta\n    n\u00e3o \u00e9 necess\u00e1rio conhecer o c\u00f3digo ou a estrutura interna da\n    aplica\u00e7\u00e3o a ser testada"
                ]
            },
            {
                "questionId": "TrocarBDCamadas",
                "content": "\n  Considere uma aplica\u00e7\u00e3o empresarial que necessita de guardar os seus\n  dados de forma persistente, mas para a qual n\u00e3o se sabe ainda qual\n  ser\u00e1 o volume de informa\u00e7\u00e3o que esta ter\u00e1 que suportar.  Por isso,\n  pretende-se desenvolver o sistema de forma a que seja poss\u00edvel\n  alterar facilmente o componente de bases de dados relacional (RDBMS)\n  usado para armazenar os dados da aplica\u00e7\u00e3o, substituindo-o por um\n  RDBMS de outro fabricante.  Visto que este \u00e9 um requisito comum, a\n  arquitectura de software recomendada para este tipo de aplica\u00e7\u00f5es\n  satisfaz este requisito atrav\u00e9s da utiliza\u00e7\u00e3o de um determinado\n  estilo arquitectural.  Que estilo \u00e9 esse?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados partilhados (\\emph{Shared data})",
                    "O estilo Reposit\u00f3rio (\\emph{Repository})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "GoogleAppEngine",
                "content": "\n  Suponha que decidiu usar o Google App Engine (GAE) no\n  desenvolvimento de uma aplica\u00e7\u00e3o web.\n\n  O GAE \u00e9 descrito na Wikipedia da seguinte forma:\n  \\begin{quote}\n    Google App Engine is a platform for developing and hosting web\n    applications in Google-managed data centers.\n\n    Google App Engine is cloud computing technology.  It virtualizes\n    applications across multiple servers and data centers. [...]\n\n    Google App Engine is free up to a certain level of used resources.\n    Fees are charged for additional storage, bandwidth, or CPU cycles\n    required by the application.\n  \\end{quote}\n  \n  Por outro lado a documenta\u00e7\u00e3o do GAE diz o seguinte:\n  \\begin{quote}\n    With App Engine, you can build web applications using standard\n    Java technologies and run them on Google's scalable\n    infrastructure.  The Java environment provides a Java 6 JVM, a\n    Java Servlets interface, and support for standard interfaces to\n    the App Engine scalable datastore and services, such as JDO, JPA,\n    JavaMail, and JCache.  Standards support makes developing your\n    application easy and familiar, and also makes porting your\n    application to and from your own servlet environment\n    straightforward.\n  \\end{quote}\n\n  Tendo em conta estas duas perspectivas sobre o GAE, que estilos\n  arquitecturais s\u00e3o mais indicados para representar a sua utiliza\u00e7\u00e3o\n  na arquitectura de software da sua aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Os estilos Decomposi\u00e7\u00e3o (\\emph{Decompostion}) e Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Os estilos Instala\u00e7\u00e3o (\\emph{Deployment}) e Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "Os estilos Cliente-Servidor (\\emph{Client-Server}) e Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Os estilos Instala\u00e7\u00e3o (\\emph{Deployment}) e Camadas (\\emph{Layers})"
                ]
            },
            {
                "questionId": "PluginsEclipse",
                "content": "\n  O IDE Eclipse \u00e9 uma aplica\u00e7\u00e3o \\emph{open source} escrita em Java, e\n  \u00e9 extens\u00edvel atrav\u00e9s da utiliza\u00e7\u00e3o de \\emph{plug-ins}.  No documento\n  que descreve a arquitectura de plug-ins existente no Eclipse,\n  podemos ler o seguinte:\n\n  \\begin{quote}\n    A plug-in in Eclipse is a component that provides a certain type\n    of service within the context of the Eclipse workbench. [...]  The\n    plug-in class provides configuration and management support for\n    the plug-in.  A plug-in class in Eclipse must extend\n    \\texttt{org.eclipse.core.runtime.Plugin}, which is an abstract\n    class that provides generic facilities for managing plug-ins.\n  \\end{quote}\n\n  Tendo em conta o modelo e a nomenclatura usados na cadeira para a\n  descri\u00e7\u00e3o de uma arquitectura de software, que tipo de vistas lhe\n  parecem mais adequadas para representar a arquitectura de plug-ins\n  do Eclipse descrita acima?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do tipo de vista componente-e-conector",
                    "Vistas do tipo de vista m\u00f3dulo",
                    "Vistas do tipo de vista afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "ServiceLayer",
                "content": "\n  Quando se utiliza o padr\u00e3o Domain Model na implementa\u00e7\u00e3o da camada\n  de l\u00f3gica de dom\u00ednio de uma aplica\u00e7\u00e3o empresarial, \u00e9 comum\n  utilizar-se tamb\u00e9m o padr\u00e3o Service Layer.  O padr\u00e3o Service Layer \u00e9\n  usado nestes casos para\n\n    ",
                "image": [],
                "options": [
                    "Controlar e reduzir a interface exposta pela camada de l\u00f3gica de\n    dom\u00ednio, aumentando assim a modificabilidade dessa camada",
                    "Permitir a exist\u00eancia de mais do que uma camada de l\u00f3gica\n    de apresenta\u00e7\u00e3o para a mesma aplica\u00e7\u00e3o (para providenciar, por\n    exemplo, uma interface de \\emph{web services})",
                    "Expor diferentes interfaces da camada de l\u00f3gica de dom\u00ednio\n    para permitir a exist\u00eancia de diferentes camadas de l\u00f3gica de apresenta\u00e7\u00e3o",
                    "Facilitar o utiliza\u00e7\u00e3o da camada de acesso a dados por\n    parte da camada de l\u00f3gica de apresenta\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n  O padr\u00e3o Unif of Work \u00e9 normalmente usado nas aplica\u00e7\u00f5es\n  empresariais para\n\n    ",
                "image": [],
                "options": [
                    "Implementar cada um dos servi\u00e7os que s\u00e3o executados sempre\n    que \u00e9 feito um pedido do cliente ao servidor",
                    "Melhorar o desempenho do servidor por manter uma cache\n    dos objectos mais acedidos durante o processamento de um pedido\n    feito pelo cliente",
                    "Dividir a computa\u00e7\u00e3o necess\u00e1ria para processar cada um dos\n    pedidos feitos pelo cliente em unidades de trabalho mais pequenas\n    e paraleliz\u00e1veis",
                    "Manter um registo das altera\u00e7\u00f5es feitas aos dados durante\n    uma transac\u00e7\u00e3o de neg\u00f3cio e coordenar a escrita dessas altera\u00e7\u00f5es\n    para a base de dados"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n  O padr\u00e3o Identity Map \u00e9 normalmente usado nas aplica\u00e7\u00f5es\n  empresariais para\n \n    ",
                "image": [],
                "options": [
                    "Melhorar o desempenho do servidor aplicacional porque se\n    mant\u00e9m uma cache de entidades que reduz o n\u00famero de opera\u00e7\u00f5es\n    feitas sobre a base de dados",
                    "Evitar carregar muitos dados da base de dados quando uma\n    entidade que tem muitas rela\u00e7\u00f5es com outras entidades \u00e9 carregada",
                    "Evitar que os dados fiquem incoerentes quando existem\n    m\u00faltiplos acessos dentro da mesma opera\u00e7\u00e3o de neg\u00f3cio \u00e0 mesma\n    entidade",
                    "Conseguir associar a cada entidade carregada pelo servidor\n    aplicacional a identidade dessa entidade na base de dados, para\n    poder actualizar a base de dados mais tarde, se for necess\u00e1rio"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2010/primeiro/exame-20110113-companion-pt-b.tex",
        "quizTitle": "..-data-2010-primeiro-exame-20110113-companion-pt-b",
        "questions": [
            {
                "questionId": "UtilidadeArquitectura",
                "content": "\n  O desenho da arquitectura de software de um sistema complexo\n\n    ",
                "image": [],
                "options": [
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de a implementa\u00e7\u00e3o do sistema ter sido conclu\u00edda, visto que\n    a arquitectura serve para restringir a implementa\u00e7\u00e3o",
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de a implementa\u00e7\u00e3o do sistema ter sido conclu\u00edda, porque\n    se o sistema j\u00e1 est\u00e1 implementado, a sua implementa\u00e7\u00e3o determina\n    univocamente a arquitectura do sistema",
                    "S\u00f3 \u00e9 \u00fatil se for feito (ainda que apenas parcialmente)\n    antes de o sistema passar todos os testes de aceita\u00e7\u00e3o por parte\n    do cliente, altura a partir da qual n\u00e3o v\u00e3o existir mais\n    altera\u00e7\u00f5es de requisitos",
                    "\u00c9 \u00fatil mesmo que a implementa\u00e7\u00e3o j\u00e1 tenha sido conclu\u00edda e\n    o sistema tenha entrado na fase de manuten\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "TresTiposVista",
                "content": "\n  De acordo com o modelo do SEI, existem tr\u00eas tipos diferentes de\n  vistas arquitecturais que s\u00e3o normalmente necess\u00e1rias para descrever\n  completamente uma arquitectura de software.\n\n    ",
                "image": [],
                "options": [
                    "Estes tr\u00eas tipos de vistas complementam-se, mas s\u00e3o\n    completamente independentes entre si, mostrando aspectos\n    diferentes de um sistema que n\u00e3o se relacionam de nenhuma forma",
                    "Os tipos de vista m\u00f3dulo e componente-e-conector\n    s\u00e3o independentes entre si, mas o tipo de vista afecta\u00e7\u00e3o depende\n    dos dois primeiros",
                    "Cada tipo de vista utiliza elementos de software\n    diferentes, como m\u00f3dulos ou componentes, pelo que n\u00e3o faz sentido\n    falar em rela\u00e7\u00f5es entre estes tipos de vistas",
                    "Apesar de cada tipo de vista apresentar aspectos\n    diferentes de um sistema, existem rela\u00e7\u00f5es entre todos eles"
                ]
            },
            {
                "questionId": "ArchitecturalDrivers",
                "content": "\n  Os requisitos para sistemas complexos s\u00e3o normalmente muito\n  numerosos e conflituosos entre si, tornando imposs\u00edvel satisfazer\n  todos os requisitos completamente numa implementa\u00e7\u00e3o do sistema.\n  Por isso, o processo recomendado para se fazer o desenho da\n  arquitectura de software de um sistema passa pela identifica\u00e7\u00e3o dos\n  \\emph{architectural drivers}, que ir\u00e3o moldar o desenho da\n  arquitectura.  Estes \\emph{architectural drivers} devem ser\n  escolhidos de forma a que sejam\n\n    ",
                "image": [],
                "options": [
                    "Um subconjunto dos requisitos que n\u00e3o entram em conflito\n    entre si e que correspondam aos objectivos de neg\u00f3cio mais importantes",
                    "Um subconjunto dos requisitos que mais entram em conflito e\n    para os quais \u00e9 preciso encontrar compromissos cedo no processo de desenho",
                    "Um subconjunto dos requisitos que correspondam aos\n    objectivos de neg\u00f3cio mais importantes, independentemente de\n    entrarem em conflito entre si",
                    "Um subconjunto dos requisitos que \u00e9 escolhido\n    exclusivamente pelo arquitecto tendo em conta a sua influ\u00eancia na\n    arquitectura do sistema"
                ]
            },
            {
                "questionId": "AlterarFuncionalidadesExistentes",
                "content": "\n  Suponha que vai trabalhar para a equipa de desenvolvimento de um\n  sistema de software de grandes dimens\u00f5es, e que lhe s\u00e3o atribu\u00eddas\n  tarefas de altera\u00e7\u00e3o de funcionalidades j\u00e1 existentes.  Quais das\n  seguintes vistas arquitecturais lhe seriam, em princ\u00edpio, mais \u00fateis\n  para desempenhar rapidamente essas tarefas?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Camadas (\\emph{Layers})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de\n    Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Generaliza\u00e7\u00e3o (\\emph{Generalization})"
                ]
            },
            {
                "questionId": "AtrQualNegocio",
                "content": "\n  Existem outros factores que afectam o desenvolvimento de um sistema\n  de software, para al\u00e9m dos seus requisitos funcionais e de atributos\n  de qualidade.  Por exemplo, factores como o or\u00e7amento ou o tempo\n  dispon\u00edvel.  Estes factores\n\n    ",
                "image": [],
                "options": [
                    "Influenciam o processo de desenvolvimento de software e a\n    gest\u00e3o do mesmo, mas n\u00e3o a arquitectura de software do sistema a\n    desenvolver",
                    "Devem ser capturados atrav\u00e9s de cen\u00e1rios, tais como os\n    requisitos de atributos de qualidade, e ser tidos em conta no\n    desenho da arquitectura de software",
                    "S\u00e3o importantes para determinar a viabilidade do sistema,\n    mas uma vez que se chegue \u00e0 conclus\u00e3o de que o sistema pode ser\n    desenvolvido com essas restri\u00e7\u00f5es, a arquitectura de software j\u00e1\n    n\u00e3o depende destes factores",
                    "N\u00e3o s\u00e3o uma das influ\u00eancias da arquitectura de software no\n    ciclo de neg\u00f3cio da arquitectura"
                ]
            },
            {
                "questionId": "ModificabilidadeCamadas",
                "content": "\n  Numa arquitectura de camadas composta por quatro camadas, em que a\n  camada mais de cima \u00e9 a camada n\u00famero 1 e a de mais de baixo \u00e9 a\n  camada n\u00famero 4, qual das camadas \u00e9 mais facilmente modific\u00e1vel?\n\n    ",
                "image": [],
                "options": [
                    "A camada 1",
                    "A camada 4",
                    "Numa arquitectura de camadas, qualquer camada \u00e9 igualmente\n    modific\u00e1vel",
                    "A facilidade de modifica\u00e7\u00e3o n\u00e3o \u00e9 particularmente\n    facilitada por uma arquitectura de camadas"
                ]
            },
            {
                "questionId": "Reutilizar",
                "content": "\n  Suponha que vai desenvolver um novo sistema de software e que\n  pretende que uma parte da funcionalidade deste novo sistema possa\n  ser facilmente reutilizada em sistemas a desenvolver no futuro.\n  Quais dos seguintes estilos arquitecturais s\u00e3o mais adequados para\n  mostrar que a arquitectura do sistema satisfaz este requisito.\n\n    ",
                "image": [],
                "options": [
                    "Os estilos decomposi\u00e7\u00e3o (\\emph{decomposition}) e\n    utiliza\u00e7\u00e3o (\\emph{uses}), que nos permitem mostrar at\u00e9 que ponto\n    um determinado m\u00f3dulo depende de outras partes do sistema",
                    "O estilo implementa\u00e7\u00e3o (\\emph{implementation}), que nos\n    permite saber onde est\u00e3o os artefactos que implementam um\n    determinado m\u00f3dulo",
                    "O estilo camadas (\\emph{layers}), que nos permite mostrar\n    que a estrutura do nosso sistema \u00e9 composta por v\u00e1rios m\u00f3dulos que\n    podem ser facilmente reutilizados noutros sistemas",
                    "Os estilos cliente-servidor (\\emph{client-server}) e\n    instala\u00e7\u00e3o (\\emph{deployment}), que nos permitem isolar a\n    funcionalidade pretendida num componente que executa autonomamente\n    e, portanto, reutiliz\u00e1vel noutros sistemas"
                ]
            },
            {
                "questionId": "VistasDesempenho",
                "content": "\n  Suponha que existem determinados requisitos de desempenho para um\n  sistema, e que pretende mostrar aos stakeholders desse sistema que a\n  arquitectura de software que concebeu satisfaz esses requisitos.\n  Para isso\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o faz sentido usar vistas do tipo de vista m\u00f3dulo, uma\n    vez que estas apenas descrevem o sistema do ponto de vista est\u00e1tico",
                    "Deve-se usar exclusivamente vistas do tipo de vista\n    componente-e-conector, que descrevem os aspectos din\u00e2micos do sistema",
                    "Pode ser necess\u00e1rio usar vistas dos tr\u00eas tipos de vistas",
                    "As \u00fanicas vistas que s\u00e3o relevantes para aspectos de\n    desempenho s\u00e3o vistas do estilo instala\u00e7\u00e3o (\\emph{deployment})"
                ]
            },
            {
                "questionId": "TrocarBDCamadas",
                "content": "\n  Considere uma aplica\u00e7\u00e3o empresarial que necessita de guardar os seus\n  dados de forma persistente, mas para a qual n\u00e3o se sabe ainda qual\n  ser\u00e1 o volume de informa\u00e7\u00e3o que esta ter\u00e1 que suportar.  Por isso,\n  pretende-se desenvolver o sistema de forma a que seja poss\u00edvel\n  alterar facilmente o componente de bases de dados relacional (RDBMS)\n  usado para armazenar os dados da aplica\u00e7\u00e3o, substituindo-o por um\n  RDBMS de outro fabricante.  Visto que este \u00e9 um requisito comum, a\n  arquitectura de software recomendada para este tipo de aplica\u00e7\u00f5es\n  satisfaz este requisito atrav\u00e9s da utiliza\u00e7\u00e3o de um determinado\n  estilo arquitectural.  Que estilo \u00e9 esse?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados partilhados (\\emph{Shared data})",
                    "O estilo Reposit\u00f3rio (\\emph{Repository})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "PluginsEclipse",
                "content": "\n  O IDE Eclipse \u00e9 uma aplica\u00e7\u00e3o \\emph{open source} escrita em Java, e\n  \u00e9 extens\u00edvel atrav\u00e9s da utiliza\u00e7\u00e3o de \\emph{plug-ins}.  No documento\n  que descreve a arquitectura de plug-ins existente no Eclipse,\n  podemos ler o seguinte:\n\n  \\begin{quote}\n    A plug-in in Eclipse is a component that provides a certain type\n    of service within the context of the Eclipse workbench. [...]  The\n    plug-in class provides configuration and management support for\n    the plug-in.  A plug-in class in Eclipse must extend\n    \\texttt{org.eclipse.core.runtime.Plugin}, which is an abstract\n    class that provides generic facilities for managing plug-ins.\n  \\end{quote}\n\n  Tendo em conta o modelo e a nomenclatura usados na cadeira para a\n  descri\u00e7\u00e3o de uma arquitectura de software, que tipo de vistas lhe\n  parecem mais adequadas para representar a arquitectura de plug-ins\n  do Eclipse descrita acima?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do tipo de vista componente-e-conector",
                    "Vistas do tipo de vista m\u00f3dulo",
                    "Vistas do tipo de vista afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "GoogleAppEngine",
                "content": "\n  Suponha que decidiu usar o Google App Engine (GAE) no\n  desenvolvimento de uma aplica\u00e7\u00e3o web.\n\n  O GAE \u00e9 descrito na Wikipedia da seguinte forma:\n  \\begin{quote}\n    Google App Engine is a platform for developing and hosting web\n    applications in Google-managed data centers.\n\n    Google App Engine is cloud computing technology.  It virtualizes\n    applications across multiple servers and data centers. [...]\n\n    Google App Engine is free up to a certain level of used resources.\n    Fees are charged for additional storage, bandwidth, or CPU cycles\n    required by the application.\n  \\end{quote}\n  \n  Por outro lado a documenta\u00e7\u00e3o do GAE diz o seguinte:\n  \\begin{quote}\n    With App Engine, you can build web applications using standard\n    Java technologies and run them on Google's scalable\n    infrastructure.  The Java environment provides a Java 6 JVM, a\n    Java Servlets interface, and support for standard interfaces to\n    the App Engine scalable datastore and services, such as JDO, JPA,\n    JavaMail, and JCache.  Standards support makes developing your\n    application easy and familiar, and also makes porting your\n    application to and from your own servlet environment\n    straightforward.\n  \\end{quote}\n\n  Tendo em conta estas duas perspectivas sobre o GAE, que estilos\n  arquitecturais s\u00e3o mais indicados para representar a sua utiliza\u00e7\u00e3o\n  na arquitectura de software da sua aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Os estilos Decomposi\u00e7\u00e3o (\\emph{Decompostion}) e Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Os estilos Instala\u00e7\u00e3o (\\emph{Deployment}) e Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "Os estilos Cliente-Servidor (\\emph{Client-Server}) e Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Os estilos Instala\u00e7\u00e3o (\\emph{Deployment}) e Camadas (\\emph{Layers})"
                ]
            },
            {
                "questionId": "XBoardChess",
                "content": "\n  Dada a complexidade de construir um bom jogador autom\u00e1tico de\n  Xadrez, \u00e9 normal que os programas para jogar Xadrez recorram a\n  motores de Xadrez (\\emph{chess engines}) j\u00e1 existentes, como mostra\n  o seguinte excerto da Wikipedia:\n  \\begin{quote}\n    A chess engine is a computer program that can play the game of\n    chess.\n\n    Most chess engines do not have their own graphical user interface\n    (GUI) but are rather console applications that communicate with a\n    GUI such as XBoard (Linux) and WinBoard (Windows) via a standard\n    protocol.\n  \\end{quote}\n\n  Na p\u00e1gina web do XBoard, podemos ler o seguinte:\n  \\begin{quote}\n    XBoard is a graphical user interface for chess [...]. It displays\n    a chessboard on the screen, accepts moves made with the mouse, and\n    loads and saves games in Portable Game Notation (PGN). It serves\n    as a front-end for many different chess services, including:\n\n    \\begin{itemize}\n    \\item Chess engines that will run on your machine and play a game\n      against you or help you analyze, such as GNU Chess, Crafty, or\n      many others.\n    \\item [...]\n    \\end{itemize}\n  \\end{quote}\n \n  Tendo em conta a informa\u00e7\u00e3o acima sobre o XBoard, os motores de\n  Xadrez, e a forma como eles interagem em tempo de execu\u00e7\u00e3o, qual dos\n  seguintes estilos arquitecturais melhor representa a arquitectura de\n  software de um sistema baseado no XBoard e num dos motores?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})"
                ]
            },
            {
                "questionId": "BlackBoxTesting",
                "content": "\n  Considere o seguinte excerto da p\u00e1gina da Wikipedia sobre testes de\n  caixa preta (\\emph{black-box testing}):\n  \\begin{quote}\n    Black-box testing is a method of software testing that tests the\n    functionality of an application as opposed to its internal\n    structures or workings.  Specific knowledge of the application's\n    code/internal structure and programming knowledge in general is\n    not required.  Test cases are built around specifications and\n    requirements, i.e., what the application is supposed to do.\n  \\end{quote}\n  \n  Supondo que pertence \u00e0 equipa de testes de um sistema complexo e que\n  \u00e9 respons\u00e1vel por efectuar testes de caixa preta sobre o sistema,\n  quais das seguintes vistas da arquitectura de software do sistema\n  lhe seriam mais \u00fateis?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "Vistas de componente-e-conector",
                    "Nenhumas, visto que para efectuar os testes de caixa preta\n    n\u00e3o \u00e9 necess\u00e1rio conhecer o c\u00f3digo ou a estrutura interna da\n    aplica\u00e7\u00e3o a ser testada"
                ]
            },
            {
                "questionId": "AumentarDesempenhoClienteServidor",
                "content": "\n  Suponha que tem um sistema com uma arquitectura cliente-servidor que\n  foi concebido para suportar a exist\u00eancia simult\u00e2nea de no m\u00e1ximo 100\n  clientes, sem requisitos especiais de disponibilidade.  A solu\u00e7\u00e3o\n  adoptada e posta em funcionamento h\u00e1 4 anos consiste num \u00fanico\n  componente do tipo servidor ao qual se ligam todos os clientes.\n  Esta solu\u00e7\u00e3o satisfazia os requisitos iniciais mas com o aumento\n  recente do n\u00famero m\u00e1ximo de clientes para 200, o sistema deixou de\n  ter um desempenho aceit\u00e1vel.  N\u00e3o sabendo mais nada sobre a\n  arquitectura do sistema, que solu\u00e7\u00e3o prop\u00f5e para resolver os\n  problemas de desempenho do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Manter a arquitectura actual do sistema e optimizar o\n    c\u00f3digo de modo a alcan\u00e7ar os n\u00edveis de desempenho necess\u00e1rios actualmente",
                    "Alterar a vista de instala\u00e7\u00e3o do sistema, replicando o servidor por\n    mais m\u00e1quinas",
                    "Rever a arquitectura do sistema de forma a passar parte da\n    computa\u00e7\u00e3o actualmente feita no servidor para os clientes",
                    "Substituir a m\u00e1quina usada pelo servidor por uma m\u00e1quina\n    mais poderosa que satisfa\u00e7a os novos requisitos de desempenho,\n    mantendo apenas um componente servidor em funcionamento"
                ]
            },
            {
                "questionId": "AlteracaoWebDois",
                "content": "\n  A evolu\u00e7\u00e3o registada nas aplica\u00e7\u00f5es web no sentido de providenciar\n  uma interface com o utilizador mais rica levou a uma mudan\u00e7a na sua\n  arquitectura: parte da computa\u00e7\u00e3o da aplica\u00e7\u00e3o passou a ser feita no\n  \\emph{browser} web usado pelos utilizadores para aceder \u00e0 aplica\u00e7\u00e3o.\n  Como \u00e9 que esta altera\u00e7\u00e3o na arquitectura se manifesta nos\n  diferentes tipos de vista que descrevem a arquitectura de software\n  de uma aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Visto que \u00e9 sobre aspectos de execu\u00e7\u00e3o, a altera\u00e7\u00e3o\n    manifesta-se apenas atrav\u00e9s da altera\u00e7\u00e3o dos componentes e\n    conectores existentes no sistema",
                    "Esta altera\u00e7\u00e3o na forma de funcionamento das aplica\u00e7\u00f5es\n    n\u00e3o corresponde a nenhuma altera\u00e7\u00e3o da sua arquitectura, visto\n    que, a n\u00edvel arquitectural, continuamos a ter os mesmos\n    componentes",
                    "A \u00fanica altera\u00e7\u00e3o arquitectural \u00e9 na vista de Instala\u00e7\u00e3o\n    (\\emph{Deployment}), uma vez que os componentes e conectores\n    continuam a ser os mesmos, mas executam em s\u00edtios diferentes",
                    "Esta altera\u00e7\u00e3o reflecte-se na rela\u00e7\u00e3o existente entre\n    m\u00f3dulos e componentes do sistema"
                ]
            },
            {
                "questionId": "ServiceLayer",
                "content": "\n  Quando se utiliza o padr\u00e3o Domain Model na implementa\u00e7\u00e3o da camada\n  de l\u00f3gica de dom\u00ednio de uma aplica\u00e7\u00e3o empresarial, \u00e9 comum\n  utilizar-se tamb\u00e9m o padr\u00e3o Service Layer.  O padr\u00e3o Service Layer \u00e9\n  usado nestes casos para\n\n    ",
                "image": [],
                "options": [
                    "Controlar e reduzir a interface exposta pela camada de l\u00f3gica de\n    dom\u00ednio, aumentando assim a modificabilidade dessa camada",
                    "Permitir a exist\u00eancia de mais do que uma camada de l\u00f3gica\n    de apresenta\u00e7\u00e3o para a mesma aplica\u00e7\u00e3o (para providenciar, por\n    exemplo, uma interface de \\emph{web services})",
                    "Expor diferentes interfaces da camada de l\u00f3gica de dom\u00ednio\n    para permitir a exist\u00eancia de diferentes camadas de l\u00f3gica de apresenta\u00e7\u00e3o",
                    "Facilitar o utiliza\u00e7\u00e3o da camada de acesso a dados por\n    parte da camada de l\u00f3gica de apresenta\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "ArqEmailMTA",
                "content": "\n  O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes\n que desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para\n  enviar um email, um utilizador pode utilizar um programa como o\n  Microsoft Outlook ou o Mozilla Thunderbird, genericamente designado\n  por \\emph{mail user agent} (MUA), para compor a sua mensagem e\n  envi\u00e1-la.  Para enviar a mensagem, tipicamente o MUA liga-se a um\n  \\emph{mail transfer agent} (MTA), que recebe a mensagem, analisa os\n  cabe\u00e7alhos da mesma para determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s\n  consulta do sistema DNS para determinar quais os MTA respons\u00e1veis\n  por cada um dos destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos\n  endere\u00e7os de destino para entregar a mensagem.  Cada um desses MTAs\n  recebe a mensagem e armazena-a localmente ou reenvia-a para outros\n  MTAs (por exemplo, quando existem \\emph{forwards} ou \\emph{aliases}\n  configurados, ou quando o MTA que recebe a mensagem n\u00e3o \u00e9 o\n  respons\u00e1vel final pelo endere\u00e7o de email do destinat\u00e1rio).\n\n Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n  sistema de email, qual dos seguintes estilos arquitecturais lhe\n  parece mais adequado para representar o padr\u00e3o de interac\u00e7\u00e3o\n  existente entre os MTAs?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            },
            {
                "questionId": "ArqEmailIMAP",
                "content": "\n  Considerando ainda o exemplo do sistema de email, os MUAs servem n\u00e3o\n  s\u00f3 para compor e enviar mensagens, mas tamb\u00e9m para os utilizadores\n  lerem as mensagens de email que lhe foram enviadas.  Para isso os\n  MUAs t\u00eam que obter essas mensagens do componente que as armazena\n  para as mostrar ao utilizador.  Duas formas diferentes de o fazer \u00e9\n  usando os protocolos POP e IMAP.  No primeiro caso, as mensagens s\u00e3o\n  movidas do servidor de POP para o computador do utilizador.  No\n  segundo caso, as mensagens continuam armazenadas no servidor de\n  IMAP, permitindo assim que o utilizador possa aceder ao seu email a\n  partir de computadores diferentes, desde que todos eles se consigam\n  ligar ao mesmo servidor de IMAP.\n\n  Qual dos seguintes estilos arquitecturais lhe parece mais adequado\n  para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs e um\n  servidor de IMAP?\n\n   ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Dados Partilhados (\\emph{Shared data})"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n  O padr\u00e3o Identity Map \u00e9 normalmente usado nas aplica\u00e7\u00f5es\n  empresariais para\n \n    ",
                "image": [],
                "options": [
                    "Melhorar o desempenho do servidor aplicacional porque se\n    mant\u00e9m uma cache de entidades que reduz o n\u00famero de opera\u00e7\u00f5es\n    feitas sobre a base de dados",
                    "Evitar carregar muitos dados da base de dados quando uma\n    entidade que tem muitas rela\u00e7\u00f5es com outras entidades \u00e9 carregada",
                    "Evitar que os dados fiquem incoerentes quando existem\n    m\u00faltiplos acessos dentro da mesma opera\u00e7\u00e3o de neg\u00f3cio \u00e0 mesma\n    entidade",
                    "Conseguir associar a cada entidade carregada pelo servidor\n    aplicacional a identidade dessa entidade na base de dados, para\n    poder actualizar a base de dados mais tarde, se for necess\u00e1rio"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n  O padr\u00e3o Unif of Work \u00e9 normalmente usado nas aplica\u00e7\u00f5es\n  empresariais para\n\n    ",
                "image": [],
                "options": [
                    "Implementar cada um dos servi\u00e7os que s\u00e3o executados sempre\n    que \u00e9 feito um pedido do cliente ao servidor",
                    "Melhorar o desempenho do servidor por manter uma cache\n    dos objectos mais acedidos durante o processamento de um pedido\n    feito pelo cliente",
                    "Dividir a computa\u00e7\u00e3o necess\u00e1ria para processar cada um dos\n    pedidos feitos pelo cliente em unidades de trabalho mais pequenas\n    e paraleliz\u00e1veis",
                    "Manter um registo das altera\u00e7\u00f5es feitas aos dados durante\n    uma transac\u00e7\u00e3o de neg\u00f3cio e coordenar a escrita dessas altera\u00e7\u00f5es\n    para a base de dados"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2010/segundo/exame-20110203-companion-pt-a.tex",
        "quizTitle": "..-data-2010-segundo-exame-20110203-companion-pt-a",
        "questions": [
            {
                "questionId": "VistasNecessarias",
                "content": "\n  De acordo com o modelo do SEI, existem apenas tr\u00eas tipos diferentes\n  de vistas arquitecturais que s\u00e3o suficientes para descrever qualquer\n  arquitectura de software.  Isto significa que, para se descrever a\n  arquitectura de software de um sistema, qualquer que ele seja\n\n  \n    ",
                "image": [],
                "options": [
                    "\u00c9 necess\u00e1rio ter exactamente uma vista de cada um destes\n    tr\u00eas tipos de vistas",
                    "Apenas se usa uma vista de um destes tr\u00eas tipos, embora\n    outros sistemas possam usar vistas de tipos diferentes",
                    "\u00c9 necess\u00e1rio ter pelo menos uma vista de cada um destes\n    tr\u00eas tipos de vistas, mas podemos ter mais do que uma vista de\n    cada tipo",
                    "Podemos ter zero ou mais vistas de qualquer um dos tr\u00eas\n    tipos de vista"
                ]
            },
            {
                "questionId": "ImportanciaStakeholders",
                "content": "\n  No Ciclo de Neg\u00f3cio da Arquitectura uma das principais influ\u00eancias\n  na arquitectura de um sistema de software s\u00e3o os seus\n  \\emph{stakeholders}, porque\n\n  \n    ",
                "image": [],
                "options": [
                    "O arquitecto tem que descrever a arquitectura do sistema\n    de forma a que todos os stakeholders compreendam o funcionamento\n    do sistema",
                    "Os stakeholders financiam o desenvolvimento do sistema e,\n    portanto, ao estabelecerem o or\u00e7amento dispon\u00edvel, influenciam a\n    arquitectura do sistema",
                    "Os stakeholders s\u00e3o a fonte dos requisitos funcionais do sistema",
                    "Os stakeholders s\u00e3o a principal fonte dos requisitos\n    funcionais e de qualidade do sistema"
                ]
            },
            {
                "questionId": "GerirEquipaManutencao",
                "content": "\n  Ap\u00f3s o desenvolvimento de todas as funcionalidades pedidas para um\n  sistema de software e da sua entrada em produ\u00e7\u00e3o, \u00e9 normal que a\n  maior parte da equipa envolvida no desenvolvimento desse sistema\n  seja posta a trabalhar no desenvolvimento de outros sistemas.  No\n  entanto, \u00e9 normal que surjam com alguma frequ\u00eancia pedidos de\n  altera\u00e7\u00e3o de funcionalidades do sistema em produ\u00e7\u00e3o (correspondendo\n  \u00e0 sua fase de manuten\u00e7\u00e3o evolutiva).\n  \n  Suponha que foi contratado para fazer a gest\u00e3o desses pedidos de\n  altera\u00e7\u00e3o, planeando a sua execu\u00e7\u00e3o (que ser\u00e1 feita pelos\n  programadores da equipa de desenvolvimento e n\u00e3o por si) tendo em\n  conta, entre outros factores, a disponibilidade dos membros da\n  equipa de desenvolvimento.  Quais das seguintes vistas\n  arquitecturais lhe seriam, em princ\u00edpio, mais \u00fateis para desempenhar\n  o seu trabalho?\n\n  \n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Camadas (\\emph{Layers})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de\n    Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Generaliza\u00e7\u00e3o (\\emph{Generalization})"
                ]
            },
            {
                "questionId": "PorqueSepararComponentes",
                "content": "\n  Suponha que ao conceber a arquitectura de software de um sistema, um\n  arquitecto decidiu particionar o sistema em tr\u00eas componentes, cada\n  um dos quais com um conjunto de funcionalidades diferentes.  Qual\n  das seguintes raz\u00f5es lhe parece mais adequada para justificar esta\n  decis\u00e3o?\n\n\n    ",
                "image": [],
                "options": [
                    "Porque assim se pode fazer o desenvolvimento do sistema de\n      forma incremental, em tr\u00eas etapas claramente separadas",
                    "Porque assim \u00e9 mais f\u00e1cil modificar cada uma das tr\u00eas\n      funcionalidades sem afectar as outras funcionalidades do sistema",
                    "Porque existem requisitos de desempenho diferentes para\n    cada um dos tr\u00eas tipos de funcionalidades, e esta solu\u00e7\u00e3o permite\n    controlar melhor o desempenho de cada um",
                    "Porque esta solu\u00e7\u00e3o permite o desenvolvimento do sistema\n    em paralelo por tr\u00eas equipas diferentes, que apenas precisam de\n    acordar entre si qual a interface de cada um dos componentes"
                ]
            },
            {
                "questionId": "ArqChrome",
                "content": "\n  O Chromium \u00e9 um navegador da web (\\emph{web browser}), que\n  introduziu uma arquitectura inovadora na forma como lida com a\n  navega\u00e7\u00e3o simult\u00e2nea de v\u00e1rias p\u00e1ginas, cada uma das quais numa\n  \\emph{tab} diferente do navegador.  No documento que descreve a\n  arquitectura do Chromium, podemos ler o seguinte:\n\n  \\begin{quote}\n    We use separate processes for browser tabs to protect the overall\n    application from bugs and glitches in the rendering engine.  We\n    also restrict access from each rendering engine process to others\n    and to the rest of the system.  In some ways, this brings to web\n    browsing the benefits that memory protection and access control\n    brought to operating systems.\n\n    We refer to the main process that runs the UI and manages tab and\n    plugin processes as the \"browser process\" or \"browser.\"  Likewise,\n    the tab-specific processes are called \"render processes\" or\n    \"renderers.\"  The renderers use the WebKit open-source layout\n    engine for interpreting and laying out HTML.\n  \\end{quote}\n\n  Tendo em conta esta breve descri\u00e7\u00e3o da arquitectura de software do\n  Chromium, que estilo arquitectural lhe parece mais adequado para a\n  representar?\n\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "Webkit",
                "content": "\n  Na descri\u00e7\u00e3o da arquitectura do Chromium \u00e9 dito que os\n  \\emph{renderers} usam o WebKit, que \u00e9 descrito na Wikipedia da\n  seguinte forma:\n\n  \\begin{quote}\n    WebKit is a layout engine designed to allow web browsers to render\n    web pages.  WebKit powers Google Chrome and Apple's Safari, the\n    third and fourth most widely used web browsers respectively.  The\n    WebKit engine provides a set of classes to display web content in\n    windows, and implements browser features such as following links\n    when clicked by the user, managing a back-forward list, and\n    managing a history of pages recently visited.  \n  \n    WebKit was originally created as a fork of KHTML as the layout\n    engine for Apple's Safari; it is portable to many other computing\n    platforms.  Mac OS X and Windows are supported by the project.\n\n    WebKit's WebCore and JavaScriptCore components are available under\n    the GNU Lesser General Public License, and the rest of WebKit is\n    available under a BSD-style license.\n  \\end{quote}\n  \n  Suponha que vai desenvolver um novo \\emph{browser} e que decidiu\n  usar o WebKit para suportar o \\emph{rendering} das p\u00e1ginas de HTML,\n  \u00e0 semelhan\u00e7a do que \u00e9 feito no Chromium e no Safari.  Qual das\n  seguintes vistas arquitecturais \u00e9 mais adequada para representar\n  esta decis\u00e3o?\n\n\n    ",
                "image": [],
                "options": [
                    "A vista de Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "As vistas do tipo Componente-e-Conector ",
                    "A vista de Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "A vista de Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "ChromeMultiPlatform",
                "content": "\n  Considerando ainda o exemplo do Chromium, encontra-se na p\u00e1gina do\n  projecto um outro documento intitulado ``Conventions and patterns\n  for multi-platform development,'' onde se pode ler o seguinte:\n\n  \\begin{quote}\n    Chromium is a large and complex cross-platform product.  We try to\n    share as much code as possible between platforms, while\n    implementing the UI and OS integration in the most appropriate way\n    for each.  While this gives a better user experience, it adds\n    extra complexity to the code.  This document describes the\n    recommended practices for keeping such cross-platform code clean.\n\n    We use a variety of different file naming suffixes to indicate\n    when a file should be used:\n    \\begin{itemize}\n    \\item Windows files use the \\texttt{\\_win} suffix.\n    \\item Cocoa (Mac UI) files use the \\texttt{\\_cocoa} suffix, and lower-level Mac files use the \\texttt{\\_mac} suffix.\n    \\item Linux files use \\texttt{\\_linux} for lower-level files, \\texttt{\\_gtk} for GTK-specific files, and \\texttt{\\_x} for X Windows (with no GTK) specific files.\n    \\item Posix files shared between Mac and Linux use the \\texttt{\\_posix} suffix.\n    \\item Files for Chrome's ``Views'' UI (on Windows and experimental GTK) layout system use the \\texttt{\\_views} suffix.\n   \\end{itemize}\n\n    The separate front-ends of the browser are contained in their own directories:\n    \\begin{itemize}\n    \\item Windows Views (and the experimental GTK-views): \\\\\n      \\texttt{chrome/browser/ui/views}\n    \\item Linux GTK: \\texttt{chrome/browser/gtk}\n    \\item Mac: \\texttt{chrome/browser/cocoa}\n    \\end{itemize}\n  \\end{quote}\n  \n  Novamente, tendo em conta esta breve descri\u00e7\u00e3o, que estilo\n  arquitectural lhe parece mais adequado para a representar?\n\n\n    ",
                "image": [],
                "options": [
                    "O estilo Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "O estilo Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Nenhum, visto que esta descri\u00e7\u00e3o n\u00e3o tem nada a ver com a\n    arquitectura do sistema"
                ]
            },
            {
                "questionId": "RelacaoModulosComponentes",
                "content": "\n  Qual das seguintes frases descreve melhor a rela\u00e7\u00e3o existente entre\n  m\u00f3dulos e componentes?\n\n  ",
                "image": [],
                "options": [
                    "Um m\u00f3dulo pode conter c\u00f3digo de diferentes componentes",
                    "Um componente pode executar c\u00f3digo de m\u00f3dulos diferentes",
                    "Um m\u00f3dulo pode executar c\u00f3digo de componentes diferentes",
                    "Um componente pode conter c\u00f3digo de diferentes m\u00f3dulos"
                ]
            },
            {
                "questionId": "ArqEmailMUA",
                "content": "\n  O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n  desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um email,\n  um utilizador pode utilizar um programa como o Microsoft Outlook ou\n  o Mozilla Thunderbird, genericamente designado por \\emph{mail user\n    agent} (MUA), para compor a sua mensagem e envi\u00e1-la.  Para enviar\n  a mensagem, tipicamente o MUA liga-se a um \\emph{mail transfer\n    agent} (MTA), que recebe a mensagem, analisa os cabe\u00e7alhos da\n  mesma para determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do\n  sistema DNS para determinar quais os MTA respons\u00e1veis por cada um\n  dos destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n  destino para entregar a mensagem.  Cada um desses MTAs recebe a\n  mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n  que a mensagem chegue ao MTA do destino.  O utilizador destinat\u00e1rio\n  da mensagem ir\u00e1 depois usar o seu MUA para ver as mensagens que lhe\n  foram enviadas.\n\n  Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n  sistema de email, qual das seguintes descri\u00e7\u00f5es lhe parece mais\n  adequada para representar a arquitectura de software do sistema de\n  email, se apenas estivermos interessados no padr\u00e3o de interac\u00e7\u00e3o\n  existente entre os MUAs?\n\n\n    ",
                "image": [],
                "options": [
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural \\emph{Blackboard}",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o\n    (\\emph{Publish-subscribe}), sendo que os MTAs e DNS implementam o\n    conector "
                ]
            },
            {
                "questionId": "CamadasParaCloudComputing",
                "content": "\n  Suponha que vai desenvolver uma aplica\u00e7\u00e3o web que pretende alojar\n  numa das v\u00e1rias plataformas de \\emph{Cloud Computing} actualmente\n  existentes.  Para isso, analisou as v\u00e1rias ofertas dispon\u00edveis, e\n  seleccionou um subconjunto de plataformas que providenciam um\n  conjunto de servi\u00e7os semelhantes (por exemplo, servi\u00e7os de\n  armazenamento de dados, servi\u00e7os de mensagens, etc), mas que o fazem\n  usando interfaces diferentes.  Por isso, para desenvolver o seu\n  sistema acaba por escolher uma dessas plataformas, mas, para evitar\n  ficar preso a essa escolha, coloca como requisito para o seu sistema\n  que este seja facilmente port\u00e1vel para outra plataforma semelhante \u00e0\n  que escolheu.  Que solu\u00e7\u00e3o arquitectural melhor satisfaz este\n  requisito?\n\n   \n    ",
                "image": [],
                "options": [
                    "A cria\u00e7\u00e3o de um m\u00f3dulo na decomposi\u00e7\u00e3o do sistema que\n    represente a plataforma escolhida, m\u00f3dulo este que poder\u00e1 ser\n    alterado posteriormente quando se trocar de plataforma",
                    "A arquitectura padr\u00e3o para aplica\u00e7\u00f5es empresariais,\n    composta pelas tr\u00eas camadas de ``L\u00f3gica de apresenta\u00e7\u00e3o,''\n    ``L\u00f3gica de dom\u00ednio,'' e ``Acesso a dados''",
                    "A cria\u00e7\u00e3o de um m\u00f3dulo gen\u00e9rico com os servi\u00e7os comuns a\n    todas as plataformas, m\u00f3dulo este que \u00e9 depois especializado\n    por m\u00f3dulos espec\u00edficos para cada plataforma",
                    "Uma arquitectura de camadas em que a camada mais de baixo\n    providencia uma interface que \u00e9 uma abstrac\u00e7\u00e3o dos servi\u00e7os\n    fornecidos pelas v\u00e1rias plataformas"
                ]
            },
            {
                "questionId": "VistasParaReplicacao",
                "content": "\n  A replica\u00e7\u00e3o \u00e9 uma das t\u00e1cticas mais usadas para satisfazer\n  requisitos de disponibilidade como, por exemplo, o requisito de que\n  uma aplica\u00e7\u00e3o web deve continuar a funcionar normalmente, mesmo\n  quando existe uma falta ao n\u00edvel do seu servidor web.  A utiliza\u00e7\u00e3o\n  da t\u00e1ctica de replica\u00e7\u00e3o do servidor web reflecte-se em que vistas\n  da arquitectura de software?\n\n  \n    ",
                "image": [],
                "options": [
                    "Em ambas as vistas componente-e-conector e Instala\u00e7\u00e3o\n    (\\emph{Deployment}), visto que cada uma delas aborda um aspecto\n    diferente da concretiza\u00e7\u00e3o da t\u00e1ctica de replica\u00e7\u00e3o",
                    "Apenas na vista de componente-e-conector que inclui o\n    servidor web",
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment}), visto\n    que a utiliza\u00e7\u00e3o desta t\u00e1ctica n\u00e3o altera os componentes, mas sim\n    onde \u00e9 que eles executam",
                    "A utiliza\u00e7\u00e3o dessa t\u00e1ctica n\u00e3o altera nenhuma das vistas\n    da arquitectura de uma aplica\u00e7\u00e3o web, visto que a arquitectura\n    padr\u00e3o para este tipo de aplica\u00e7\u00f5es j\u00e1 suporta, de raiz, a\n    replica\u00e7\u00e3o do servidor web"
                ]
            },
            {
                "questionId": "AumentarDesempenhoClienteServidor",
                "content": "\n  Suponha que desenvolveu uma aplica\u00e7\u00e3o web que permite aos seus\n  utilizadores jogarem Xadrez uns contra os outros.  A aplica\u00e7\u00e3o\n  permite que os jogadores se juntem em pares para realizarem um jogo,\n  ap\u00f3s o que o jogo decorre entre esses dois jogadores durante algum\n  tempo at\u00e9 ao fim do jogo.  Um jogo completo pode demorar desde cerca\n  de 1 hora, at\u00e9 v\u00e1rios dias, dependendo do tempo que cada jogador\n  demora a realizar uma jogada.  Este sistema foi concebido como uma\n  aplica\u00e7\u00e3o web tradicional, e tem estado a funcionar j\u00e1 h\u00e1 alguns\n  meses com um \u00fanico componente do tipo servidor ao qual se ligam\n  todos os clientes web.  No entanto, dada a recente exposi\u00e7\u00e3o\n  medi\u00e1tica do seu jogo, o n\u00famero de utilizadores da sua aplica\u00e7\u00e3o\n  aumentou substancialmente nos \u00faltimos tempos.  De facto, viu o seu\n  sistema passar rapidamente dos habituais 10 pedidos simult\u00e2neos que\n  eram processados com um tempo m\u00e9dio de resposta inferior a 300 ms,\n  para 100 pedidos a serem processados simultaneamente com um tempo\n  m\u00e9dio de resposta de cerca de 5 segundos.  Na realidade, o n\u00famero de\n  pedidos simult\u00e2neos n\u00e3o aumentou mais porque o seu servidor rejeita\n  pedidos adicionais assim que atinge os 100 pedidos em processamento.\n\n  Visto que as expectativas \u00e9 que a utiliza\u00e7\u00e3o do sistema continue a\n  aumentar, podendo mesmo chegar aos 10000 pedidos simult\u00e2neos, e que\n  o sistema s\u00f3 \u00e9 utiliz\u00e1vel se tiver tempos m\u00e9dios de resposta abaixo\n  dos 2 segundos, que solu\u00e7\u00e3o prop\u00f5e para resolver os problemas de\n  desempenho do sistema?\n\n  \n    ",
                "image": [],
                "options": [
                    "Manter a arquitectura actual do sistema e optimizar o\n    c\u00f3digo de modo a alcan\u00e7ar os n\u00edveis de desempenho necess\u00e1rios actualmente",
                    "Utilizar uma t\u00e1ctica de introdu\u00e7\u00e3o de concorr\u00eancia de\n    forma a que possam existir mais servidores a processar pedidos",
                    "Utilizar uma t\u00e1ctica de replica\u00e7\u00e3o activa de forma a que\n    se consiga obter respostas com um tempo m\u00e9dio de resposta mais baixo",
                    "Substituir a m\u00e1quina usada pelo servidor por uma m\u00e1quina\n    mais poderosa que satisfa\u00e7a os novos requisitos de desempenho,\n    mantendo apenas um componente servidor em funcionamento"
                ]
            },
            {
                "questionId": "PluginsEclipse",
                "content": "\n  O IDE Eclipse \u00e9 uma aplica\u00e7\u00e3o \\emph{open source} escrita em Java, e\n  \u00e9 extens\u00edvel atrav\u00e9s da utiliza\u00e7\u00e3o de \\emph{plug-ins}.  No documento\n  que descreve a arquitectura de plug-ins existente no Eclipse,\n  podemos ler o seguinte:\n\n  \\begin{quote}\n    A plug-in in Eclipse is a component that provides a certain type\n    of service within the context of the Eclipse workbench. [...] The\n    Eclipse runtime provides an infrastructure to support the\n    activation and operation of a set of plug-ins working together to\n    provide a seamless environment for development activities. Within\n    a running Eclipse instance, a plug-in is embodied in an instance\n    of some plug-in runtime class, or plug-in class, for short. \n    \n    [...]\n\n    Such a plug-in can then be activated by the Eclipse runtime when\n    it is required to perform some function.  Activating a plug-in\n    means loading its runtime class and instantiating and initializing\n    its instance.\n\n    The main function of a plug-in class is to do special processing\n    during plug-in activation and deactivation, e.g., to allocate and\n    release resources.\n  \\end{quote}\n\n  Tendo em conta o modelo e a nomenclatura usados na cadeira para a\n  descri\u00e7\u00e3o de uma arquitectura de software, que tipo de vistas lhe\n  parecem mais adequadas para representar a arquitectura de plug-ins\n  do Eclipse descrita acima?\n\n  \n    ",
                "image": [],
                "options": [
                    "Vistas do tipo de vista componente-e-conector",
                    "Vistas do tipo de vista m\u00f3dulo",
                    "Vistas do tipo de vista afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "Mashups",
                "content": "\n  Uma das evolu\u00e7\u00f5es no desenvolvimento de aplica\u00e7\u00f5es web foi a cria\u00e7\u00e3o\n  de \\emph{mashups}, que s\u00e3o descritas na Wikipedia da seguinte forma:\n\n  \\begin{quote}\n    In web development, a mashup is a web page or application that\n    uses and combines data, presentation or functionality from two or\n    more sources to create new services.\n  \\end{quote}\n\n  Embora existam v\u00e1rias formas de implementar e providenciar estes\n  mashups, uma abordagem comum \u00e9 passar para o \\emph{browser} a\n  responsabilidade de contactar os v\u00e1rios servi\u00e7os que se pretende\n  combinar e de processar as suas respostas, implementando assim o\n  \\emph{mashup}.\n\n  Que estilo arquitectural melhor descreve o funcionamento deste tipo\n  de aplica\u00e7\u00f5es?\n\n  \n    ",
                "image": [],
                "options": [
                    "O estilo Dados partilhados (\\emph{Shared data})",
                    "O estilo Reposit\u00f3rio (\\emph{Repository})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "DisponibilidadeRetalhix",
                "content": "\n  O sistema Retalhix \u00e9 um sistema que permite fazer a gest\u00e3o dos\n  produtos e das vendas dos hipermercados, incluindo o funcionamento\n  das caixas por onde os clientes passam para registar e pagar as suas\n  compras.  Considere o seguinte requisito de disponibilidade para o\n  Retalhix\n\n  \\begin{quote}\n    O aspecto mais cr\u00edtico para o funcionamento de uma loja \u00e9 a\n    correcta opera\u00e7\u00e3o das caixas, visto que o n\u00e3o funcionamento das\n    caixas afecta directamente os clientes e a sua possibilidade de\n    comprar produtos.\n  \\end{quote}\n\n Supondo que o que se pretende \u00e9 que, em caso de falta (qualquer que\n  ela seja) de uma s\u00f3 caixa, o cliente que estava a ser atendido nessa\n  caixa possa \u00e0 mesma pagar as suas compras e sair da loja com elas,\n  como \u00e9 que a arquitectura do sistema pode dar resposta a este\n  requisito?\n\n  \n    ",
                "image": [],
                "options": [
                    "Criando mecanismos que permitam, em primeiro lugar,\n    detectar falhas numa caixa e, uma vez detectada uma falha, reparar a\n    falha rapidamente para que a caixa volte a operar normalmente",
                    "Prevendo nas vistas de componente-e-conector e na de\n    instala\u00e7\u00e3o (\\emph{deployment}) a execu\u00e7\u00e3o de pelo menos um\n    componente redundante em cada caixa, para evitar que existam\n    falhas nas caixas",
                    "Mostrando na vista de instala\u00e7\u00e3o (\\emph{deployment}) que\n    num hipermercado existem v\u00e1rias caixas em funcionamento em cada\n    instante, pelo que j\u00e1 existe redund\u00e2ncia ao n\u00edvel do hardware para\n    satisfazer este requisito",
                    "Replicando os servidores que s\u00e3o contactados pelas caixas,\n    e colocando um \\emph{load balancer} entre as caixas e os\n    servidores"
                ]
            },
            {
                "questionId": "DisponibilidadeRetalhixMeioDasCompras",
                "content": "\n  Considerando ainda o sistema Retalhix da pergunta anterior, imagine\n  a situa\u00e7\u00e3o em que um cliente tem dois carrinhos de supermercado\n  cheios de compras e vai a meio do registo das suas compras na caixa\n  quando esta falha.  Suponha que o que se pretende neste cen\u00e1rio \u00e9\n  que se possa continuar a registar os produtos do cliente sem ter que\n  voltar a registar os produtos j\u00e1 registados.  Que consequ\u00eancias \u00e9\n  que este novo requisito tem na arquitectura do sistema?\n\n  \n    ",
                "image": [],
                "options": [
                    "N\u00e3o tem nenhuma",
                    "Reflecte-se apenas ao n\u00edvel da vista de instala\u00e7\u00e3o\n    (\\emph{deployment})",
                    "Reflecte-se apenas ao n\u00edvel das vistas do tipo de vista m\u00f3dulo",
                    "Pode reflectir-se n\u00e3o s\u00f3 ao n\u00edvel das funcionalidades do\n    sistema, como ainda ao n\u00edvel das vistas componente-e-conector e instala\u00e7\u00e3o\n    (\\emph{deployment})"
                ]
            },
            {
                "questionId": "UsesAMais",
                "content": "\n  Suponha que no processo de desenho da arquitectura de software de um\n  sistema chega \u00e0 conclus\u00e3o de que existem ciclos na rela\u00e7\u00e3o de\n  utiliza\u00e7\u00e3o (\\emph{uses}) entre os m\u00f3dulos do sistema, fazendo com\n  que quase todos os m\u00f3dulos do sistema dependam da maior parte dos\n  restantes m\u00f3dulos.  Como \u00e9 que resolveria este problema?\n\n  \n    ",
                "image": [],
                "options": [
                    "Eliminava algumas das rela\u00e7\u00f5es de utiliza\u00e7\u00e3o para quebrar\n    os ciclos",
                    "Voltava ao estilo decomposi\u00e7\u00e3o (\\emph{decomposition}) para\n    decompor o sistema de outra forma, de modo a que n\u00e3o surjam ciclos\n    no estilo de utiliza\u00e7\u00e3o",
                    "Substitu\u00eda algumas das rela\u00e7\u00f5es de utiliza\u00e7\u00e3o por rela\u00e7\u00f5es\n    de generaliza\u00e7\u00e3o (\\emph{generalization}) de modo a quebrar os\n    ciclos",
                    "A exist\u00eancia de ciclos ou de muitas rela\u00e7\u00f5es de utiliza\u00e7\u00e3o\n    n\u00e3o \u00e9 um problema que precise de ser resolvido"
                ]
            },
            {
                "questionId": "RelacaoComponentsDeployment",
                "content": "\n  Qual \u00e9 a rela\u00e7\u00e3o existente entre os elementos de hardware\n  correspondentes a unidades de processamento (m\u00e1quinas) numa vista do\n  estilo Instala\u00e7\u00e3o (\\emph{Deployment}) e os componentes de um\n  sistema, considerando que r\u00e9plicas do mesmo componente contam como\n  componentes diferentes?\n\n  \n    ",
                "image": [],
                "options": [
                    "O n\u00famero de elementos de hardware tem que ser igual ao\n    n\u00famero de componentes",
                    "O n\u00famero de elementos de hardware tem que ser menor ou\n    igual ao n\u00famero de componentes",
                    "O n\u00famero de elementos de hardware tem que ser maior ou\n    igual ao n\u00famero de componentes",
                    "N\u00e3o existe qualquer restri\u00e7\u00e3o quanto ao n\u00famero de\n    elementos de hardware"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n  O padr\u00e3o Identity Map \u00e9 usado em aplica\u00e7\u00f5es empresariais\n\n  \n    ",
                "image": [],
                "options": [
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Transaction Script que acede aos dados persistentes atrav\u00e9s de Record Sets",
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Domain Model ",
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Service Layer",
                    "Independentemente de qual \u00e9 a forma usada para implementar\n    a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n  O padr\u00e3o Unit of Work \u00e9 normalmente usado em aplica\u00e7\u00f5es empresariais\n  para agrupar uma s\u00e9rie de opera\u00e7\u00f5es de acesso a dados que pertencem\n  a uma \u00fanica opera\u00e7\u00e3o de neg\u00f3cio.  Visto que o c\u00f3digo executado no\n  contexto de uma Unit of Work pode estar espalhado por diferentes\n  m\u00f3dulos do sistema, pode acontecer que durante a mesma Unit of Work\n  se leia da base de dados os mesmos dados mais do que uma vez, o que\n  pode trazer problemas de coer\u00eancia da informa\u00e7\u00e3o se n\u00e3o forem\n  tomadas as precau\u00e7\u00f5es devidas.  Como \u00e9 que este problema \u00e9 resolvido\n  quando se est\u00e1 a usar o padr\u00e3o Unit of Work?\n\n  \n    ",
                "image": [],
                "options": [
                    "Uma vez que o padr\u00e3o Unit of Work coordena as escritas na\n    base de dados, consegue detectar quando \u00e9 que os dados podem ficar\n    incoerentes, e aborta a opera\u00e7\u00e3o nesses casos",
                    "Cada Unit of Work utiliza um Identity Map para evitar este\n    problema",
                    "Visto que todas as opera\u00e7\u00f5es de acesso a dados feitas no\n    contexto de uma Unit of Work s\u00e3o feitas na mesma transac\u00e7\u00e3o de\n    base de dados, a base de dados garante a coer\u00eancia dos dados",
                    "Este problema n\u00e3o \u00e9 resolvido pelo Unit of Work, e \u00e9 uma\n    das desvantagens da sua utiliza\u00e7\u00e3o, porque \u00e9 o programador que tem\n    que lidar com o problema directamente no c\u00f3digo que escreve"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2010/segundo/exame-20110203-companion-pt-b.tex",
        "quizTitle": "..-data-2010-segundo-exame-20110203-companion-pt-b",
        "questions": [
            {
                "questionId": "VistasNecessarias",
                "content": "\n  De acordo com o modelo do SEI, existem apenas tr\u00eas tipos diferentes\n  de vistas arquitecturais que s\u00e3o suficientes para descrever qualquer\n  arquitectura de software.  Isto significa que, para se descrever a\n  arquitectura de software de um sistema, qualquer que ele seja\n\n  \n    ",
                "image": [],
                "options": [
                    "\u00c9 necess\u00e1rio ter exactamente uma vista de cada um destes\n    tr\u00eas tipos de vistas",
                    "Apenas se usa uma vista de um destes tr\u00eas tipos, embora\n    outros sistemas possam usar vistas de tipos diferentes",
                    "\u00c9 necess\u00e1rio ter pelo menos uma vista de cada um destes\n    tr\u00eas tipos de vistas, mas podemos ter mais do que uma vista de\n    cada tipo",
                    "Podemos ter zero ou mais vistas de qualquer um dos tr\u00eas\n    tipos de vista"
                ]
            },
            {
                "questionId": "PorqueSepararComponentes",
                "content": "\n  Suponha que ao conceber a arquitectura de software de um sistema, um\n  arquitecto decidiu particionar o sistema em tr\u00eas componentes, cada\n  um dos quais com um conjunto de funcionalidades diferentes.  Qual\n  das seguintes raz\u00f5es lhe parece mais adequada para justificar esta\n  decis\u00e3o?\n\n\n    ",
                "image": [],
                "options": [
                    "Porque assim se pode fazer o desenvolvimento do sistema de\n      forma incremental, em tr\u00eas etapas claramente separadas",
                    "Porque assim \u00e9 mais f\u00e1cil modificar cada uma das tr\u00eas\n      funcionalidades sem afectar as outras funcionalidades do sistema",
                    "Porque existem requisitos de desempenho diferentes para\n    cada um dos tr\u00eas tipos de funcionalidades, e esta solu\u00e7\u00e3o permite\n    controlar melhor o desempenho de cada um",
                    "Porque esta solu\u00e7\u00e3o permite o desenvolvimento do sistema\n    em paralelo por tr\u00eas equipas diferentes, que apenas precisam de\n    acordar entre si qual a interface de cada um dos componentes"
                ]
            },
            {
                "questionId": "GerirEquipaManutencao",
                "content": "\n  Ap\u00f3s o desenvolvimento de todas as funcionalidades pedidas para um\n  sistema de software e da sua entrada em produ\u00e7\u00e3o, \u00e9 normal que a\n  maior parte da equipa envolvida no desenvolvimento desse sistema\n  seja posta a trabalhar no desenvolvimento de outros sistemas.  No\n  entanto, \u00e9 normal que surjam com alguma frequ\u00eancia pedidos de\n  altera\u00e7\u00e3o de funcionalidades do sistema em produ\u00e7\u00e3o (correspondendo\n  \u00e0 sua fase de manuten\u00e7\u00e3o evolutiva).\n  \n  Suponha que foi contratado para fazer a gest\u00e3o desses pedidos de\n  altera\u00e7\u00e3o, planeando a sua execu\u00e7\u00e3o (que ser\u00e1 feita pelos\n  programadores da equipa de desenvolvimento e n\u00e3o por si) tendo em\n  conta, entre outros factores, a disponibilidade dos membros da\n  equipa de desenvolvimento.  Quais das seguintes vistas\n  arquitecturais lhe seriam, em princ\u00edpio, mais \u00fateis para desempenhar\n  o seu trabalho?\n\n  \n    ",
                "image": [],
                "options": [
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Camadas (\\emph{Layers})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de\n    Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "Vistas de Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e de Generaliza\u00e7\u00e3o (\\emph{Generalization})"
                ]
            },
            {
                "questionId": "ImportanciaStakeholders",
                "content": "\n  No Ciclo de Neg\u00f3cio da Arquitectura uma das principais influ\u00eancias\n  na arquitectura de um sistema de software s\u00e3o os seus\n  \\emph{stakeholders}, porque\n\n  \n    ",
                "image": [],
                "options": [
                    "O arquitecto tem que descrever a arquitectura do sistema\n    de forma a que todos os stakeholders compreendam o funcionamento\n    do sistema",
                    "Os stakeholders financiam o desenvolvimento do sistema e,\n    portanto, ao estabelecerem o or\u00e7amento dispon\u00edvel, influenciam a\n    arquitectura do sistema",
                    "Os stakeholders s\u00e3o a fonte dos requisitos funcionais do sistema",
                    "Os stakeholders s\u00e3o a principal fonte dos requisitos\n    funcionais e de qualidade do sistema"
                ]
            },
            {
                "questionId": "CamadasParaCloudComputing",
                "content": "\n  Suponha que vai desenvolver uma aplica\u00e7\u00e3o web que pretende alojar\n  numa das v\u00e1rias plataformas de \\emph{Cloud Computing} actualmente\n  existentes.  Para isso, analisou as v\u00e1rias ofertas dispon\u00edveis, e\n  seleccionou um subconjunto de plataformas que providenciam um\n  conjunto de servi\u00e7os semelhantes (por exemplo, servi\u00e7os de\n  armazenamento de dados, servi\u00e7os de mensagens, etc), mas que o fazem\n  usando interfaces diferentes.  Por isso, para desenvolver o seu\n  sistema acaba por escolher uma dessas plataformas, mas, para evitar\n  ficar preso a essa escolha, coloca como requisito para o seu sistema\n  que este seja facilmente port\u00e1vel para outra plataforma semelhante \u00e0\n  que escolheu.  Que solu\u00e7\u00e3o arquitectural melhor satisfaz este\n  requisito?\n\n   \n    ",
                "image": [],
                "options": [
                    "A cria\u00e7\u00e3o de um m\u00f3dulo na decomposi\u00e7\u00e3o do sistema que\n    represente a plataforma escolhida, m\u00f3dulo este que poder\u00e1 ser\n    alterado posteriormente quando se trocar de plataforma",
                    "A arquitectura padr\u00e3o para aplica\u00e7\u00f5es empresariais,\n    composta pelas tr\u00eas camadas de ``L\u00f3gica de apresenta\u00e7\u00e3o,''\n    ``L\u00f3gica de dom\u00ednio,'' e ``Acesso a dados''",
                    "A cria\u00e7\u00e3o de um m\u00f3dulo gen\u00e9rico com os servi\u00e7os comuns a\n    todas as plataformas, m\u00f3dulo este que \u00e9 depois especializado\n    por m\u00f3dulos espec\u00edficos para cada plataforma",
                    "Uma arquitectura de camadas em que a camada mais de baixo\n    providencia uma interface que \u00e9 uma abstrac\u00e7\u00e3o dos servi\u00e7os\n    fornecidos pelas v\u00e1rias plataformas"
                ]
            },
            {
                "questionId": "ArqEmailMUA",
                "content": "\n  O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n  desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um email,\n  um utilizador pode utilizar um programa como o Microsoft Outlook ou\n  o Mozilla Thunderbird, genericamente designado por \\emph{mail user\n    agent} (MUA), para compor a sua mensagem e envi\u00e1-la.  Para enviar\n  a mensagem, tipicamente o MUA liga-se a um \\emph{mail transfer\n    agent} (MTA), que recebe a mensagem, analisa os cabe\u00e7alhos da\n  mesma para determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do\n  sistema DNS para determinar quais os MTA respons\u00e1veis por cada um\n  dos destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n  destino para entregar a mensagem.  Cada um desses MTAs recebe a\n  mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n  que a mensagem chegue ao MTA do destino.  O utilizador destinat\u00e1rio\n  da mensagem ir\u00e1 depois usar o seu MUA para ver as mensagens que lhe\n  foram enviadas.\n\n  Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n  sistema de email, qual das seguintes descri\u00e7\u00f5es lhe parece mais\n  adequada para representar a arquitectura de software do sistema de\n  email, se apenas estivermos interessados no padr\u00e3o de interac\u00e7\u00e3o\n  existente entre os MUAs?\n\n\n    ",
                "image": [],
                "options": [
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural \\emph{Blackboard}",
                    "O padr\u00e3o de interac\u00e7\u00e3o existente entre os MUAs corresponde\n    ao estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o\n    (\\emph{Publish-subscribe}), sendo que os MTAs e DNS implementam o\n    conector "
                ]
            },
            {
                "questionId": "ArqChrome",
                "content": "\n  O Chromium \u00e9 um navegador da web (\\emph{web browser}), que\n  introduziu uma arquitectura inovadora na forma como lida com a\n  navega\u00e7\u00e3o simult\u00e2nea de v\u00e1rias p\u00e1ginas, cada uma das quais numa\n  \\emph{tab} diferente do navegador.  No documento que descreve a\n  arquitectura do Chromium, podemos ler o seguinte:\n\n  \\begin{quote}\n    We use separate processes for browser tabs to protect the overall\n    application from bugs and glitches in the rendering engine.  We\n    also restrict access from each rendering engine process to others\n    and to the rest of the system.  In some ways, this brings to web\n    browsing the benefits that memory protection and access control\n    brought to operating systems.\n\n    We refer to the main process that runs the UI and manages tab and\n    plugin processes as the \"browser process\" or \"browser.\"  Likewise,\n    the tab-specific processes are called \"render processes\" or\n    \"renderers.\"  The renderers use the WebKit open-source layout\n    engine for interpreting and laying out HTML.\n  \\end{quote}\n\n  Tendo em conta esta breve descri\u00e7\u00e3o da arquitectura de software do\n  Chromium, que estilo arquitectural lhe parece mais adequado para a\n  representar?\n\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "Webkit",
                "content": "\n  Na descri\u00e7\u00e3o da arquitectura do Chromium \u00e9 dito que os\n  \\emph{renderers} usam o WebKit, que \u00e9 descrito na Wikipedia da\n  seguinte forma:\n\n  \\begin{quote}\n    WebKit is a layout engine designed to allow web browsers to render\n    web pages.  WebKit powers Google Chrome and Apple's Safari, the\n    third and fourth most widely used web browsers respectively.  The\n    WebKit engine provides a set of classes to display web content in\n    windows, and implements browser features such as following links\n    when clicked by the user, managing a back-forward list, and\n    managing a history of pages recently visited.  \n  \n    WebKit was originally created as a fork of KHTML as the layout\n    engine for Apple's Safari; it is portable to many other computing\n    platforms.  Mac OS X and Windows are supported by the project.\n\n    WebKit's WebCore and JavaScriptCore components are available under\n    the GNU Lesser General Public License, and the rest of WebKit is\n    available under a BSD-style license.\n  \\end{quote}\n  \n  Suponha que vai desenvolver um novo \\emph{browser} e que decidiu\n  usar o WebKit para suportar o \\emph{rendering} das p\u00e1ginas de HTML,\n  \u00e0 semelhan\u00e7a do que \u00e9 feito no Chromium e no Safari.  Qual das\n  seguintes vistas arquitecturais \u00e9 mais adequada para representar\n  esta decis\u00e3o?\n\n\n    ",
                "image": [],
                "options": [
                    "A vista de Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "As vistas do tipo Componente-e-Conector ",
                    "A vista de Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "A vista de Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "ChromeMultiPlatform",
                "content": "\n  Considerando ainda o exemplo do Chromium, encontra-se na p\u00e1gina do\n  projecto um outro documento intitulado ``Conventions and patterns\n  for multi-platform development,'' onde se pode ler o seguinte:\n\n  \\begin{quote}\n    Chromium is a large and complex cross-platform product.  We try to\n    share as much code as possible between platforms, while\n    implementing the UI and OS integration in the most appropriate way\n    for each.  While this gives a better user experience, it adds\n    extra complexity to the code.  This document describes the\n    recommended practices for keeping such cross-platform code clean.\n\n    We use a variety of different file naming suffixes to indicate\n    when a file should be used:\n    \\begin{itemize}\n    \\item Windows files use the \\texttt{\\_win} suffix.\n    \\item Cocoa (Mac UI) files use the \\texttt{\\_cocoa} suffix, and lower-level Mac files use the \\texttt{\\_mac} suffix.\n    \\item Linux files use \\texttt{\\_linux} for lower-level files, \\texttt{\\_gtk} for GTK-specific files, and \\texttt{\\_x} for X Windows (with no GTK) specific files.\n    \\item Posix files shared between Mac and Linux use the \\texttt{\\_posix} suffix.\n    \\item Files for Chrome's ``Views'' UI (on Windows and experimental GTK) layout system use the \\texttt{\\_views} suffix.\n   \\end{itemize}\n\n    The separate front-ends of the browser are contained in their own directories:\n    \\begin{itemize}\n    \\item Windows Views (and the experimental GTK-views): \\\\\n      \\texttt{chrome/browser/ui/views}\n    \\item Linux GTK: \\texttt{chrome/browser/gtk}\n    \\item Mac: \\texttt{chrome/browser/cocoa}\n    \\end{itemize}\n  \\end{quote}\n  \n  Novamente, tendo em conta esta breve descri\u00e7\u00e3o, que estilo\n  arquitectural lhe parece mais adequado para a representar?\n\n\n    ",
                "image": [],
                "options": [
                    "O estilo Implementa\u00e7\u00e3o (\\emph{Implementation})",
                    "O estilo Atribui\u00e7\u00e3o de Trabalho (\\emph{Work assignment})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Nenhum, visto que esta descri\u00e7\u00e3o n\u00e3o tem nada a ver com a\n    arquitectura do sistema"
                ]
            },
            {
                "questionId": "RelacaoModulosComponentes",
                "content": "\n  Qual das seguintes frases descreve melhor a rela\u00e7\u00e3o existente entre\n  m\u00f3dulos e componentes?\n\n  ",
                "image": [],
                "options": [
                    "Um m\u00f3dulo pode conter c\u00f3digo de diferentes componentes",
                    "Um componente pode executar c\u00f3digo de m\u00f3dulos diferentes",
                    "Um m\u00f3dulo pode executar c\u00f3digo de componentes diferentes",
                    "Um componente pode conter c\u00f3digo de diferentes m\u00f3dulos"
                ]
            },
            {
                "questionId": "Mashups",
                "content": "\n  Uma das evolu\u00e7\u00f5es no desenvolvimento de aplica\u00e7\u00f5es web foi a cria\u00e7\u00e3o\n  de \\emph{mashups}, que s\u00e3o descritas na Wikipedia da seguinte forma:\n\n  \\begin{quote}\n    In web development, a mashup is a web page or application that\n    uses and combines data, presentation or functionality from two or\n    more sources to create new services.\n  \\end{quote}\n\n  Embora existam v\u00e1rias formas de implementar e providenciar estes\n  mashups, uma abordagem comum \u00e9 passar para o \\emph{browser} a\n  responsabilidade de contactar os v\u00e1rios servi\u00e7os que se pretende\n  combinar e de processar as suas respostas, implementando assim o\n  \\emph{mashup}.\n\n  Que estilo arquitectural melhor descreve o funcionamento deste tipo\n  de aplica\u00e7\u00f5es?\n\n  \n    ",
                "image": [],
                "options": [
                    "O estilo Dados partilhados (\\emph{Shared data})",
                    "O estilo Reposit\u00f3rio (\\emph{Repository})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "PluginsEclipse",
                "content": "\n  O IDE Eclipse \u00e9 uma aplica\u00e7\u00e3o \\emph{open source} escrita em Java, e\n  \u00e9 extens\u00edvel atrav\u00e9s da utiliza\u00e7\u00e3o de \\emph{plug-ins}.  No documento\n  que descreve a arquitectura de plug-ins existente no Eclipse,\n  podemos ler o seguinte:\n\n  \\begin{quote}\n    A plug-in in Eclipse is a component that provides a certain type\n    of service within the context of the Eclipse workbench. [...] The\n    Eclipse runtime provides an infrastructure to support the\n    activation and operation of a set of plug-ins working together to\n    provide a seamless environment for development activities. Within\n    a running Eclipse instance, a plug-in is embodied in an instance\n    of some plug-in runtime class, or plug-in class, for short. \n    \n    [...]\n\n    Such a plug-in can then be activated by the Eclipse runtime when\n    it is required to perform some function.  Activating a plug-in\n    means loading its runtime class and instantiating and initializing\n    its instance.\n\n    The main function of a plug-in class is to do special processing\n    during plug-in activation and deactivation, e.g., to allocate and\n    release resources.\n  \\end{quote}\n\n  Tendo em conta o modelo e a nomenclatura usados na cadeira para a\n  descri\u00e7\u00e3o de uma arquitectura de software, que tipo de vistas lhe\n  parecem mais adequadas para representar a arquitectura de plug-ins\n  do Eclipse descrita acima?\n\n  \n    ",
                "image": [],
                "options": [
                    "Vistas do tipo de vista componente-e-conector",
                    "Vistas do tipo de vista m\u00f3dulo",
                    "Vistas do tipo de vista afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "AumentarDesempenhoClienteServidor",
                "content": "\n  Suponha que desenvolveu uma aplica\u00e7\u00e3o web que permite aos seus\n  utilizadores jogarem Xadrez uns contra os outros.  A aplica\u00e7\u00e3o\n  permite que os jogadores se juntem em pares para realizarem um jogo,\n  ap\u00f3s o que o jogo decorre entre esses dois jogadores durante algum\n  tempo at\u00e9 ao fim do jogo.  Um jogo completo pode demorar desde cerca\n  de 1 hora, at\u00e9 v\u00e1rios dias, dependendo do tempo que cada jogador\n  demora a realizar uma jogada.  Este sistema foi concebido como uma\n  aplica\u00e7\u00e3o web tradicional, e tem estado a funcionar j\u00e1 h\u00e1 alguns\n  meses com um \u00fanico componente do tipo servidor ao qual se ligam\n  todos os clientes web.  No entanto, dada a recente exposi\u00e7\u00e3o\n  medi\u00e1tica do seu jogo, o n\u00famero de utilizadores da sua aplica\u00e7\u00e3o\n  aumentou substancialmente nos \u00faltimos tempos.  De facto, viu o seu\n  sistema passar rapidamente dos habituais 10 pedidos simult\u00e2neos que\n  eram processados com um tempo m\u00e9dio de resposta inferior a 300 ms,\n  para 100 pedidos a serem processados simultaneamente com um tempo\n  m\u00e9dio de resposta de cerca de 5 segundos.  Na realidade, o n\u00famero de\n  pedidos simult\u00e2neos n\u00e3o aumentou mais porque o seu servidor rejeita\n  pedidos adicionais assim que atinge os 100 pedidos em processamento.\n\n  Visto que as expectativas \u00e9 que a utiliza\u00e7\u00e3o do sistema continue a\n  aumentar, podendo mesmo chegar aos 10000 pedidos simult\u00e2neos, e que\n  o sistema s\u00f3 \u00e9 utiliz\u00e1vel se tiver tempos m\u00e9dios de resposta abaixo\n  dos 2 segundos, que solu\u00e7\u00e3o prop\u00f5e para resolver os problemas de\n  desempenho do sistema?\n\n  \n    ",
                "image": [],
                "options": [
                    "Manter a arquitectura actual do sistema e optimizar o\n    c\u00f3digo de modo a alcan\u00e7ar os n\u00edveis de desempenho necess\u00e1rios actualmente",
                    "Utilizar uma t\u00e1ctica de introdu\u00e7\u00e3o de concorr\u00eancia de\n    forma a que possam existir mais servidores a processar pedidos",
                    "Utilizar uma t\u00e1ctica de replica\u00e7\u00e3o activa de forma a que\n    se consiga obter respostas com um tempo m\u00e9dio de resposta mais baixo",
                    "Substituir a m\u00e1quina usada pelo servidor por uma m\u00e1quina\n    mais poderosa que satisfa\u00e7a os novos requisitos de desempenho,\n    mantendo apenas um componente servidor em funcionamento"
                ]
            },
            {
                "questionId": "VistasParaReplicacao",
                "content": "\n  A replica\u00e7\u00e3o \u00e9 uma das t\u00e1cticas mais usadas para satisfazer\n  requisitos de disponibilidade como, por exemplo, o requisito de que\n  uma aplica\u00e7\u00e3o web deve continuar a funcionar normalmente, mesmo\n  quando existe uma falta ao n\u00edvel do seu servidor web.  A utiliza\u00e7\u00e3o\n  da t\u00e1ctica de replica\u00e7\u00e3o do servidor web reflecte-se em que vistas\n  da arquitectura de software?\n\n  \n    ",
                "image": [],
                "options": [
                    "Em ambas as vistas componente-e-conector e Instala\u00e7\u00e3o\n    (\\emph{Deployment}), visto que cada uma delas aborda um aspecto\n    diferente da concretiza\u00e7\u00e3o da t\u00e1ctica de replica\u00e7\u00e3o",
                    "Apenas na vista de componente-e-conector que inclui o\n    servidor web",
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment}), visto\n    que a utiliza\u00e7\u00e3o desta t\u00e1ctica n\u00e3o altera os componentes, mas sim\n    onde \u00e9 que eles executam",
                    "A utiliza\u00e7\u00e3o dessa t\u00e1ctica n\u00e3o altera nenhuma das vistas\n    da arquitectura de uma aplica\u00e7\u00e3o web, visto que a arquitectura\n    padr\u00e3o para este tipo de aplica\u00e7\u00f5es j\u00e1 suporta, de raiz, a\n    replica\u00e7\u00e3o do servidor web"
                ]
            },
            {
                "questionId": "DisponibilidadeRetalhix",
                "content": "\n  O sistema Retalhix \u00e9 um sistema que permite fazer a gest\u00e3o dos\n  produtos e das vendas dos hipermercados, incluindo o funcionamento\n  das caixas por onde os clientes passam para registar e pagar as suas\n  compras.  Considere o seguinte requisito de disponibilidade para o\n  Retalhix\n\n  \\begin{quote}\n    O aspecto mais cr\u00edtico para o funcionamento de uma loja \u00e9 a\n    correcta opera\u00e7\u00e3o das caixas, visto que o n\u00e3o funcionamento das\n    caixas afecta directamente os clientes e a sua possibilidade de\n    comprar produtos.\n  \\end{quote}\n\n Supondo que o que se pretende \u00e9 que, em caso de falta (qualquer que\n  ela seja) de uma s\u00f3 caixa, o cliente que estava a ser atendido nessa\n  caixa possa \u00e0 mesma pagar as suas compras e sair da loja com elas,\n  como \u00e9 que a arquitectura do sistema pode dar resposta a este\n  requisito?\n\n  \n    ",
                "image": [],
                "options": [
                    "Criando mecanismos que permitam, em primeiro lugar,\n    detectar falhas numa caixa e, uma vez detectada uma falha, reparar a\n    falha rapidamente para que a caixa volte a operar normalmente",
                    "Prevendo nas vistas de componente-e-conector e na de\n    instala\u00e7\u00e3o (\\emph{deployment}) a execu\u00e7\u00e3o de pelo menos um\n    componente redundante em cada caixa, para evitar que existam\n    falhas nas caixas",
                    "Mostrando na vista de instala\u00e7\u00e3o (\\emph{deployment}) que\n    num hipermercado existem v\u00e1rias caixas em funcionamento em cada\n    instante, pelo que j\u00e1 existe redund\u00e2ncia ao n\u00edvel do hardware para\n    satisfazer este requisito",
                    "Replicando os servidores que s\u00e3o contactados pelas caixas,\n    e colocando um \\emph{load balancer} entre as caixas e os\n    servidores"
                ]
            },
            {
                "questionId": "DisponibilidadeRetalhixMeioDasCompras",
                "content": "\n  Considerando ainda o sistema Retalhix da pergunta anterior, imagine\n  a situa\u00e7\u00e3o em que um cliente tem dois carrinhos de supermercado\n  cheios de compras e vai a meio do registo das suas compras na caixa\n  quando esta falha.  Suponha que o que se pretende neste cen\u00e1rio \u00e9\n  que se possa continuar a registar os produtos do cliente sem ter que\n  voltar a registar os produtos j\u00e1 registados.  Que consequ\u00eancias \u00e9\n  que este novo requisito tem na arquitectura do sistema?\n\n  \n    ",
                "image": [],
                "options": [
                    "N\u00e3o tem nenhuma",
                    "Reflecte-se apenas ao n\u00edvel da vista de instala\u00e7\u00e3o\n    (\\emph{deployment})",
                    "Reflecte-se apenas ao n\u00edvel das vistas do tipo de vista m\u00f3dulo",
                    "Pode reflectir-se n\u00e3o s\u00f3 ao n\u00edvel das funcionalidades do\n    sistema, como ainda ao n\u00edvel das vistas componente-e-conector e instala\u00e7\u00e3o\n    (\\emph{deployment})"
                ]
            },
            {
                "questionId": "RelacaoComponentsDeployment",
                "content": "\n  Qual \u00e9 a rela\u00e7\u00e3o existente entre os elementos de hardware\n  correspondentes a unidades de processamento (m\u00e1quinas) numa vista do\n  estilo Instala\u00e7\u00e3o (\\emph{Deployment}) e os componentes de um\n  sistema, considerando que r\u00e9plicas do mesmo componente contam como\n  componentes diferentes?\n\n  \n    ",
                "image": [],
                "options": [
                    "O n\u00famero de elementos de hardware tem que ser igual ao\n    n\u00famero de componentes",
                    "O n\u00famero de elementos de hardware tem que ser menor ou\n    igual ao n\u00famero de componentes",
                    "O n\u00famero de elementos de hardware tem que ser maior ou\n    igual ao n\u00famero de componentes",
                    "N\u00e3o existe qualquer restri\u00e7\u00e3o quanto ao n\u00famero de\n    elementos de hardware"
                ]
            },
            {
                "questionId": "UsesAMais",
                "content": "\n  Suponha que no processo de desenho da arquitectura de software de um\n  sistema chega \u00e0 conclus\u00e3o de que existem ciclos na rela\u00e7\u00e3o de\n  utiliza\u00e7\u00e3o (\\emph{uses}) entre os m\u00f3dulos do sistema, fazendo com\n  que quase todos os m\u00f3dulos do sistema dependam da maior parte dos\n  restantes m\u00f3dulos.  Como \u00e9 que resolveria este problema?\n\n  \n    ",
                "image": [],
                "options": [
                    "Eliminava algumas das rela\u00e7\u00f5es de utiliza\u00e7\u00e3o para quebrar\n    os ciclos",
                    "Voltava ao estilo decomposi\u00e7\u00e3o (\\emph{decomposition}) para\n    decompor o sistema de outra forma, de modo a que n\u00e3o surjam ciclos\n    no estilo de utiliza\u00e7\u00e3o",
                    "Substitu\u00eda algumas das rela\u00e7\u00f5es de utiliza\u00e7\u00e3o por rela\u00e7\u00f5es\n    de generaliza\u00e7\u00e3o (\\emph{generalization}) de modo a quebrar os\n    ciclos",
                    "A exist\u00eancia de ciclos ou de muitas rela\u00e7\u00f5es de utiliza\u00e7\u00e3o\n    n\u00e3o \u00e9 um problema que precise de ser resolvido"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n  O padr\u00e3o Unit of Work \u00e9 normalmente usado em aplica\u00e7\u00f5es empresariais\n  para agrupar uma s\u00e9rie de opera\u00e7\u00f5es de acesso a dados que pertencem\n  a uma \u00fanica opera\u00e7\u00e3o de neg\u00f3cio.  Visto que o c\u00f3digo executado no\n  contexto de uma Unit of Work pode estar espalhado por diferentes\n  m\u00f3dulos do sistema, pode acontecer que durante a mesma Unit of Work\n  se leia da base de dados os mesmos dados mais do que uma vez, o que\n  pode trazer problemas de coer\u00eancia da informa\u00e7\u00e3o se n\u00e3o forem\n  tomadas as precau\u00e7\u00f5es devidas.  Como \u00e9 que este problema \u00e9 resolvido\n  quando se est\u00e1 a usar o padr\u00e3o Unit of Work?\n\n  \n    ",
                "image": [],
                "options": [
                    "Uma vez que o padr\u00e3o Unit of Work coordena as escritas na\n    base de dados, consegue detectar quando \u00e9 que os dados podem ficar\n    incoerentes, e aborta a opera\u00e7\u00e3o nesses casos",
                    "Cada Unit of Work utiliza um Identity Map para evitar este\n    problema",
                    "Visto que todas as opera\u00e7\u00f5es de acesso a dados feitas no\n    contexto de uma Unit of Work s\u00e3o feitas na mesma transac\u00e7\u00e3o de\n    base de dados, a base de dados garante a coer\u00eancia dos dados",
                    "Este problema n\u00e3o \u00e9 resolvido pelo Unit of Work, e \u00e9 uma\n    das desvantagens da sua utiliza\u00e7\u00e3o, porque \u00e9 o programador que tem\n    que lidar com o problema directamente no c\u00f3digo que escreve"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n  O padr\u00e3o Identity Map \u00e9 usado em aplica\u00e7\u00f5es empresariais\n\n  \n    ",
                "image": [],
                "options": [
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Transaction Script que acede aos dados persistentes atrav\u00e9s de Record Sets",
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Domain Model ",
                    "Quando a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o \u00e9 implementada\n    recorrendo ao padr\u00e3o Service Layer",
                    "Independentemente de qual \u00e9 a forma usada para implementar\n    a l\u00f3gica de dom\u00ednio da aplica\u00e7\u00e3o"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2011/exam1/exame-20120109-companion-pt-a.tex",
        "quizTitle": "..-data-2011-exam1-exame-20120109-companion-pt-a",
        "questions": [
            {
                "questionId": "HadoopEscalabilidadePossivel",
                "content": "\n    A qualidade de escalabilidade do sistema Hadoop apenas \u00e9 poss\u00edvel\n    porque?\n\n    ",
                "image": [],
                "options": [
                    "Os \\emph{stakeholders} requerem um sistema onde os\n      problemas de desempenho n\u00e3o sejam considerados como os mais\n      relevantes",
                    "Os \\emph{stakeholders} mais importantes s\u00e3o uma pequena\n      equipa de desenvolvimento que tem elevadas compet\u00eancias\n      t\u00e9cnicas",
                    "Os \\emph{stakeholders} aceitam que duas leituras\n      simult\u00e2neas do mesmo ficheiro, efectuadas por aplica\u00e7\u00f5es\n      diferentes, possam retornar resultados diferentes",
                    "O sistema foi desenvolvido usando complexos algoritmos\n      distribu\u00eddos que garantem a escalabilidade"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDesempenho",
                "content": "\n    No sistema Hadoop:\n\n     ",
                "image": [],
                "options": [
                    "As qualidades de disponibilidade e de desempenho s\u00e3o\n       conflituosas",
                    "A qualidade de disponibilidade \u00e9 a mais relevante, pelo\n       que o desempenho \u00e9 tratado a posteriori e em fun\u00e7\u00e3o das\n       t\u00e1cticas escolhidas para a disponibilidade",
                    "As qualidades de disponibilidade e de desempenho n\u00e3o s\u00e3o\n       conflituosas",
                    "\u00c9 ao n\u00edvel da instala\u00e7\u00e3o que se garantem as qualidades\n       de disponibilidade e desempenho"
                ]
            },
            {
                "questionId": "HadoopTacticasRecuperacaoFaltas",
                "content": "\n    No sistema Hadoop as t\u00e1cticas de recupera\u00e7\u00e3o de faltas usadas s\u00e3o:\n\n    ",
                "image": [],
                "options": [
                    "Replica\u00e7\u00e3o activa e replica\u00e7\u00e3o passiva",
                    "Replica\u00e7\u00e3o activa, replica\u00e7\u00e3o passiva e \\emph{spare}",
                    "Replica\u00e7\u00e3o passiva e \\emph{spare}",
                    "Quorum, replica\u00e7\u00e3o activa e replica\u00e7\u00e3o passiva"
                ]
            },
            {
                "questionId": "HadoopTacticasRecuperacaoFaltasDois",
                "content": "\n    No sistema Hadoop quando um \\emph{DataNode} que falhou \u00e9\n    reintroduzido s\u00e3o usadas as seguintes t\u00e1cticas:\n\n    ",
                "image": [],
                "options": [
                    "\\emph{Shadow operation}",
                    "Resincroniza\u00e7\u00e3o de estado",
                    "\\emph{Checkpoint/Rollback}",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "HadoopTacticasSeguranca",
                "content": "\n    No sistema Hadoop instalado no Yahoo! as t\u00e1cticas de seguran\u00e7a\n    utilizadas s\u00e3o:\n\n    ",
                "image": [],
                "options": [
                    "Autenticar utilizadores e autorizar utilizadores",
                    "Autenticar utilizadores, autorizar utilizadores e limitar exposi\u00e7\u00e3o",
                    "Autenticar utilizadores, autorizar utilizadores e limitar o acesso",
                    "Autenticar utilizadores, autorizar utilizadores, limitar o acesso e manter integridade"
                ]
            },
            {
                "questionId": "HadoopHeartbeat",
                "content": "\n    Durante a opera\u00e7\u00e3o normal os \\emph{DataNodes} usam a t\u00e1ctica de\n    \\emph{heartbeat}\n\n    ",
                "image": [],
                "options": [
                    "Porque esta t\u00e1ctica \u00e9 aquela que n\u00e3o sobrecarrega o \\emph{NameNode}",
                    "Mas tamb\u00e9m poderiam usar a t\u00e1ctica de \\emph{ping} pois o\n      \\emph{overhead} desta t\u00e1ctica no \\emph{NameNode} seria id\u00eantico",
                    "Mas tamb\u00e9m poderiam usar a t\u00e1ctica de excep\u00e7\u00f5es",
                    "Para informarem os restantes \\emph{DataNodes} que est\u00e3o dispon\u00edveis"
                ]
            },
            {
                "questionId": "ModulosCamadas",
                "content": "\n    Uma camada, do estilo arquitectural camadas, \u00e9 um m\u00f3dulo:\n\n    ",
                "image": [],
                "options": [
                    "Pois possui uma interface bem definida",
                    "Que agrega m\u00f3dulos de acordo com rela\u00e7\u00f5es de utiliza\u00e7\u00e3o",
                    "Pois possui uma interface bem definida e esconde um comportamento interno",
                    "Que fornece um conjunto de servi\u00e7os completo e coeso"
                ]
            },
            {
                "questionId": "UtilizacaoImpactoAlteracoes",
                "content": "\n    O estilo arquitectural Utiliza\u00e7\u00e3o permite aferir do impacto de\n    altera\u00e7\u00f5es aos m\u00f3dulos\n\n    ",
                "image": [],
                "options": [
                    "Pois \u00e9 uma extens\u00e3o natural dos casos de uso",
                    "Mas necessita de informa\u00e7\u00e3o sobre a estrutura interna dos m\u00f3dulos",
                    "Mas necessita de ser complementado, para cada rela\u00e7\u00e3o de\n      utiliza, com informa\u00e7\u00e3o sobre o n\u00edvel de liga\u00e7\u00e3o associado",
                    "E fornece toda a informa\u00e7\u00e3o suficiente para medir o impacto"
                ]
            },
            {
                "questionId": "UtilizacaoNotifica",
                "content": "\n    No estilo arquitectural Utiliza\u00e7\u00e3o diz-se que uma invoca\u00e7\u00e3o entre\n    dois m\u00f3dulos n\u00e3o implica uma rela\u00e7\u00e3o de utiliza\u00e7\u00e3o pois:\n\n    ",
                "image": [],
                "options": [
                    "O sucesso da invoca\u00e7\u00e3o pode n\u00e3o ter impacto no correcto funcionamento do m\u00f3dulo invocador",
                    "O sucesso da invoca\u00e7\u00e3o pode n\u00e3o ter impacto no correcto funcionamento do m\u00f3dulo invocado",
                    "A invoca\u00e7\u00e3o pode n\u00e3o passar dados entre os m\u00f3dulos",
                    "A rela\u00e7\u00e3o de utiliza\u00e7\u00e3o requer que as invoca\u00e7\u00f5es devolvam o controlo ao m\u00f3dulo invocador"
                ]
            },
            {
                "questionId": "UtilizacaoNotificaDois",
                "content": "\n    De acordo com as t\u00e9cnicas de desenho orientadas aos atributos, uma\n    arquitectura de software deve ser desenhada com base numa lista de\n    requisitos, chamados de \\emph{architectural drivers}. Estes\n    \\emph{architectural drivers} devem ser ordenados de acordo com a\n    sua import\u00e2ncia para os \\emph{stakeholders} pois\n\t\n    ",
                "image": [],
                "options": [
                    "Devemos satisfazer primeiro os requisitos dos\n      \\emph{stakeholders} mais importantes, como por exemplo o\n      cliente",
                    "Se eles n\u00e3o fossem ordenados n\u00e3o saber\u00edamos onde come\u00e7ar\n      o processo de desenho",
                    "Se um dos \\emph{stakeholders} se queixar que o seu\n      requisito n\u00e3o foi satisfeito, podemos explicar-lhe que h\u00e1\n      outros mais importantes",
                    "Quando n\u00e3o \u00e9 poss\u00edvel satisfazer todos os requisitos de\n      forma \u00f3ptima, \u00e9 importante conhecer a sua import\u00e2ncia relativa\n      para que se procure uma solu\u00e7\u00e3o que corresponda a um\n      compromisso satisfat\u00f3rio"
                ]
            },
            {
                "questionId": "HadoopInteraccaoDataNodes",
                "content": "\n    No sistema HDFS o componente \\emph{DataNode} tem como principal\n    responsabilidade guardar os blocos de dados correspondentes aos\n    ficheiros dos clientes, existindo tipicamente v\u00e1rias inst\u00e2ncias\n    deste componente num sistema.  O estilo arquitectural que melhor\n    descreve o padr\u00e3o de interac\u00e7\u00e3o existente entre as v\u00e1rias\n    inst\u00e2ncias de \\emph{DataNode} \u00e9\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "HadoopInteraccaoNameNodeDataNodes",
                "content": "\n    Conforme descrito na sec\u00e7\u00e3o 8.2.3., o componente \\emph{NameNode}\n    d\u00e1 comandos aos \\emph{DataNodes} para que eles procedam a algumas\n    opera\u00e7\u00f5es sobre os seus blocos, ao passo que os \\emph{DataNodes}\n    t\u00eam que enviar relat\u00f3rios regulares para o \\emph{NameNode}.  A\n    arquitectura que melhor descreve a forma como no sistema HDFS\n    estes dois tipos de componentes interagem \u00e9 como\n\n    ",
                "image": [],
                "options": [
                    "Uma arquitectura Cliente-Servidor, em que o\n      \\emph{DataNode} \u00e9 o Cliente e o \\emph{NameNode} \u00e9 o Servidor",
                    "Uma arquitectura Cliente-Servidor, em que o\n      \\emph{NameNode} \u00e9 o Cliente e o \\emph{DataNode} \u00e9 o Servidor",
                    "Uma arquitectura Par-a-Par",
                    "Uma arquitectura Processos Comunicantes"
                ]
            },
            {
                "questionId": "HadoopNameNodeComoConector",
                "content": "\n    Suponha que pretende descrever como \u00e9 que um cliente l\u00ea um\n    ficheiro de um sistema HDFS suportando falhas espor\u00e1dicas no\n    hardware de alguns \\emph{DataNodes}, sem que isso afecte a\n    disponibilidade do sistema.  Para isso pretende usar uma vista do\n    tipo componente-e-conector, mas em que os \u00fanicos componentes s\u00e3o o\n    \\emph{HDFS Client} e o \\emph{DataNode}.\n\n    ",
                "image": [],
                "options": [
                    "Essa vista estar\u00e1 sempre incompleta sem o\n      \\emph{NameNode}, visto que o \\emph{HDFS Client} precisa de\n      interagir com ele",
                    "Essa vista estar\u00e1 sempre incompleta sem o\n      \\emph{NameNode}, visto que o \\emph{DataNode} precisa de\n      interagir com ele",
                    "A vista n\u00e3o precisa de incluir o \\emph{NameNode}, mas\n      nesse caso n\u00e3o ser\u00e1 poss\u00edvel raciocinar sobre a disponibilidade\n      do sistema",
                    "A garantia de disponibilidade pode ser dada pela\n      utiliza\u00e7\u00e3o de um conector adequado entre o \\emph{HDFS Client} e os\n      \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "HadoopNameNodeThreads",
                "content": "\n    No \u00faltimo par\u00e1grafo da sec\u00e7\u00e3o 8.2.2 descreve-se qual foi a solu\u00e7\u00e3o\n    adoptada pelo \\emph{NameNode} para obter um determinado n\u00edvel de\n    desempenho na escrita para disco.  Que estilo arquitectural \u00e9 mais\n    adequado para representar a solu\u00e7\u00e3o adoptada?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados",
                    "O estilo Processos Comunicantes",
                    "O estilo Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "O estilo Par-a-Par"
                ]
            },
            {
                "questionId": "HadoopReplicarNameNode",
                "content": "\n    A arquitectura do sistema HDFS apenas prev\u00ea a exist\u00eancia de um\n    \\emph{NameNode}.  Tendo em conta as responsabilidades deste\n    componente e a actual arquitectura do HDFS, quais seriam as\n    consequ\u00eancias de adicionarmos a possibilidade de termos r\u00e9plicas\n    de \\emph{NameNode} no sistema?\n\n    ",
                "image": [],
                "options": [
                    "O sistema passava a responder em menos tempo a todos os\n      pedidos dos clientes",
                    "O desempenho do sistema n\u00e3o seria alterado",
                    "O sistema passava a poder responder em menos tempo a\n      pedidos de localiza\u00e7\u00f5es de ficheiros",
                    "O sistema passava a poder responder em menos tempo aos\n      pedidos de actualiza\u00e7\u00e3o dos metadados feitos pelos \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "ServiceLayer",
                "content": "\n    Quando se utiliza o padr\u00e3o Domain Model na implementa\u00e7\u00e3o da camada\n    de l\u00f3gica de dom\u00ednio de uma aplica\u00e7\u00e3o empresarial, \u00e9 comum\n    utilizar-se tamb\u00e9m o padr\u00e3o Service Layer.  O padr\u00e3o Service Layer\n    \u00e9 usado nestes casos para\n    \n    ",
                "image": [],
                "options": [
                    "Controlar e reduzir a interface exposta pela camada de\n      l\u00f3gica de dom\u00ednio, aumentando assim a modificabilidade dessa\n      camada",
                    "Permitir a exist\u00eancia de mais do que uma interface para a\n      camada de l\u00f3gica de dom\u00ednio (para providenciar, por exemplo, uma\n      interface de \\emph{web services})",
                    "Permitir a exist\u00eancia de diferentes camadas de l\u00f3gica de apresenta\u00e7\u00e3o",
                    "Facilitar a utiliza\u00e7\u00e3o da camada de acesso a dados por\n      parte da camada de l\u00f3gica de apresenta\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "SharedDataAccessorsDirect",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma vista arquitectural onde\n    utiliza o estilo de Dados Partilhados (\\emph{Shared Data}) e que\n    um dos membros da sua equipa prop\u00f5e que dois dos componentes com o\n    papel de \\emph{data accessors} comuniquem directamente entre si.\n    Na sua opini\u00e3o\n\n    ",
                "image": [],
                "options": [
                    "Isso n\u00e3o deve ser permitido porque todas as interac\u00e7\u00f5es\n      entre componentes devem ser feitas atrav\u00e9s do \\emph{Reposit\u00f3rio}",
                    "\u00c9 uma solu\u00e7\u00e3o aceit\u00e1vel se pretendermos reduzir as\n      depend\u00eancias entre os v\u00e1rios componentes do sistema",
                    "Essa \u00e9 a solu\u00e7\u00e3o recomendada se existir um fluxo de\n      controlo que envolva a coreografia dos dois componentes",
                    "Essa interac\u00e7\u00e3o n\u00e3o pode ser representada nesta vista,\n      mas sim numa outra vista da arquitectura do sistema"
                ]
            },
            {
                "questionId": "WhiteBoxTesting",
                "content": "\n    Considere o seguinte excerto da p\u00e1gina da Wikipedia sobre testes\n    de caixa branca (\\emph{white-box testing}):\n    \\begin{quote}\n      White-box testing is a method of testing software that tests\n      internal structures or workings of an application, as opposed to\n      its functionality. In white-box testing an internal perspective\n      of the system (including the module's code), as well as\n      programming skills, are required and used to design test\n      cases. The tester chooses inputs to exercise paths through the\n      code and determine the appropriate outputs.\n    \\end{quote}\n  \n    Supondo que pertence \u00e0 equipa de testes de um sistema complexo e\n    que \u00e9 respons\u00e1vel por efectuar testes de caixa branca sobre o\n    sistema, quais das seguintes vistas da arquitectura de software do\n    sistema lhe seriam mais \u00fateis?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "Vistas de Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Vistas de Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "Vistas de Implementa\u00e7\u00e3o (\\emph{Implementation})"
                ]
            },
            {
                "questionId": "TresTiers",
                "content": "\n    Actualmente, a arquitectura mais popular para uma aplica\u00e7\u00e3o\n    empresarial \u00e9 constitu\u00edda por 3 \\emph{tiers}.  Esses tr\u00eas\n    \\emph{tiers} s\u00e3o\n\n    ",
                "image": [],
                "options": [
                    "As camadas de l\u00f3gica de apresenta\u00e7\u00e3o, l\u00f3gica de dom\u00ednio,\n      e acesso a dados",
                    "As aplica\u00e7\u00f5es web tradicionais, os \\emph{mashups}, e as\n      \\emph{rich internet applications} (RIAs)",
                    "O \\emph{browser} web, o servidor web, e a base de dados",
                    "As camadas de \\emph{web services}, l\u00f3gica de dom\u00ednio, e\n      acesso a dados"
                ]
            },
            {
                "questionId": "TempoRespostaAplicacaoEmpresarial",
                "content": "\n    Suponha que est\u00e1 a desenhar a arquitectura de software para uma\n    aplica\u00e7\u00e3o empresarial que tem requisitos sobre o tempo m\u00e1ximo que\n    o sistema deve demorar a responder a um determinado tipo de\n    pedidos por parte dos utilizadores.  Suponha ainda que a\n    frequ\u00eancia desses pedidos \u00e9 previs\u00edvel, mas que os restantes\n    pedidos ao sistema podem variar significativamente.  Finalmente,\n    suponha que o seu sistema vai ter apenas um \u00fanico servidor que se\n    executar\u00e1 numa m\u00e1quina pr\u00e9-definida com um processador AMD de 12\n    cores.  Para mostrar aos \\emph{stakeholders} que o seu sistema\n    satisfaz os requisitos de desempenho ter\u00e1 que usar vistas de que\n    estilo arquitectural?\n\n    ",
                "image": [],
                "options": [
                    "Do estilo Atribui\u00e7\u00e3o de Trabalho",
                    "Do estilo Cliente-Servidor",
                    "Do estilo Instala\u00e7\u00e3o",
                    "Do estilo Processos Comunicantes"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2011/exam1/exame-20120109-companion-pt-b.tex",
        "quizTitle": "..-data-2011-exam1-exame-20120109-companion-pt-b",
        "questions": [
            {
                "questionId": "HadoopTacticasRecuperacaoFaltas",
                "content": "\n    No sistema Hadoop as t\u00e1cticas de recupera\u00e7\u00e3o de faltas usadas s\u00e3o:\n\n    ",
                "image": [],
                "options": [
                    "Replica\u00e7\u00e3o activa e replica\u00e7\u00e3o passiva",
                    "Replica\u00e7\u00e3o activa, replica\u00e7\u00e3o passiva e \\emph{spare}",
                    "Replica\u00e7\u00e3o passiva e \\emph{spare}",
                    "Quorum, replica\u00e7\u00e3o activa e replica\u00e7\u00e3o passiva"
                ]
            },
            {
                "questionId": "HadoopEscalabilidadePossivel",
                "content": "\n    A qualidade de escalabilidade do sistema Hadoop apenas \u00e9 poss\u00edvel\n    porque?\n\n    ",
                "image": [],
                "options": [
                    "Os \\emph{stakeholders} requerem um sistema onde os\n      problemas de desempenho n\u00e3o sejam considerados como os mais\n      relevantes",
                    "Os \\emph{stakeholders} mais importantes s\u00e3o uma pequena\n      equipa de desenvolvimento que tem elevadas compet\u00eancias\n      t\u00e9cnicas",
                    "Os \\emph{stakeholders} aceitam que duas leituras\n      simult\u00e2neas do mesmo ficheiro, efectuadas por aplica\u00e7\u00f5es\n      diferentes, possam retornar resultados diferentes",
                    "O sistema foi desenvolvido usando complexos algoritmos\n      distribu\u00eddos que garantem a escalabilidade"
                ]
            },
            {
                "questionId": "HadoopTacticasRecuperacaoFaltasDois",
                "content": "\n    No sistema Hadoop quando um \\emph{DataNode} que falhou \u00e9\n    reintroduzido s\u00e3o usadas as seguintes t\u00e1cticas:\n\n    ",
                "image": [],
                "options": [
                    "\\emph{Shadow operation}",
                    "Resincroniza\u00e7\u00e3o de estado",
                    "\\emph{Checkpoint/Rollback}",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDesempenho",
                "content": "\n    No sistema Hadoop:\n\n     ",
                "image": [],
                "options": [
                    "As qualidades de disponibilidade e de desempenho s\u00e3o\n       conflituosas",
                    "A qualidade de disponibilidade \u00e9 a mais relevante, pelo\n       que o desempenho \u00e9 tratado a posteriori e em fun\u00e7\u00e3o das\n       t\u00e1cticas escolhidas para a disponibilidade",
                    "As qualidades de disponibilidade e de desempenho n\u00e3o s\u00e3o\n       conflituosas",
                    "\u00c9 ao n\u00edvel da instala\u00e7\u00e3o que se garantem as qualidades\n       de disponibilidade e desempenho"
                ]
            },
            {
                "questionId": "HadoopHeartbeat",
                "content": "\n    Durante a opera\u00e7\u00e3o normal os \\emph{DataNodes} usam a t\u00e1ctica de\n    \\emph{heartbeat}\n\n    ",
                "image": [],
                "options": [
                    "Porque esta t\u00e1ctica \u00e9 aquela que n\u00e3o sobrecarrega o \\emph{NameNode}",
                    "Mas tamb\u00e9m poderiam usar a t\u00e1ctica de \\emph{ping} pois o\n      \\emph{overhead} desta t\u00e1ctica no \\emph{NameNode} seria id\u00eantico",
                    "Mas tamb\u00e9m poderiam usar a t\u00e1ctica de excep\u00e7\u00f5es",
                    "Para informarem os restantes \\emph{DataNodes} que est\u00e3o dispon\u00edveis"
                ]
            },
            {
                "questionId": "HadoopTacticasSeguranca",
                "content": "\n    No sistema Hadoop instalado no Yahoo! as t\u00e1cticas de seguran\u00e7a\n    utilizadas s\u00e3o:\n\n    ",
                "image": [],
                "options": [
                    "Autenticar utilizadores e autorizar utilizadores",
                    "Autenticar utilizadores, autorizar utilizadores e limitar exposi\u00e7\u00e3o",
                    "Autenticar utilizadores, autorizar utilizadores e limitar o acesso",
                    "Autenticar utilizadores, autorizar utilizadores, limitar o acesso e manter integridade"
                ]
            },
            {
                "questionId": "ModulosCamadas",
                "content": "\n    Uma camada, do estilo arquitectural camadas, \u00e9 um m\u00f3dulo:\n\n    ",
                "image": [],
                "options": [
                    "Pois possui uma interface bem definida",
                    "Que agrega m\u00f3dulos de acordo com rela\u00e7\u00f5es de utiliza\u00e7\u00e3o",
                    "Pois possui uma interface bem definida e esconde um comportamento interno",
                    "Que fornece um conjunto de servi\u00e7os completo e coeso"
                ]
            },
            {
                "questionId": "UtilizacaoNotifica",
                "content": "\n    No estilo arquitectural Utiliza\u00e7\u00e3o diz-se que uma invoca\u00e7\u00e3o entre\n    dois m\u00f3dulos n\u00e3o implica uma rela\u00e7\u00e3o de utiliza\u00e7\u00e3o pois:\n\n    ",
                "image": [],
                "options": [
                    "O sucesso da invoca\u00e7\u00e3o pode n\u00e3o ter impacto no correcto funcionamento do m\u00f3dulo invocador",
                    "O sucesso da invoca\u00e7\u00e3o pode n\u00e3o ter impacto no correcto funcionamento do m\u00f3dulo invocado",
                    "A invoca\u00e7\u00e3o pode n\u00e3o passar dados entre os m\u00f3dulos",
                    "A rela\u00e7\u00e3o de utiliza\u00e7\u00e3o requer que as invoca\u00e7\u00f5es devolvam o controlo ao m\u00f3dulo invocador"
                ]
            },
            {
                "questionId": "UtilizacaoImpactoAlteracoes",
                "content": "\n    O estilo arquitectural Utiliza\u00e7\u00e3o permite aferir do impacto de\n    altera\u00e7\u00f5es aos m\u00f3dulos\n\n    ",
                "image": [],
                "options": [
                    "Pois \u00e9 uma extens\u00e3o natural dos casos de uso",
                    "Mas necessita de informa\u00e7\u00e3o sobre a estrutura interna dos m\u00f3dulos",
                    "Mas necessita de ser complementado, para cada rela\u00e7\u00e3o de\n      utiliza, com informa\u00e7\u00e3o sobre o n\u00edvel de liga\u00e7\u00e3o associado",
                    "E fornece toda a informa\u00e7\u00e3o suficiente para medir o impacto"
                ]
            },
            {
                "questionId": "HadoopInteraccaoNameNodeDataNodes",
                "content": "\n    Conforme descrito na sec\u00e7\u00e3o 8.2.3., o componente \\emph{NameNode}\n    d\u00e1 comandos aos \\emph{DataNodes} para que eles procedam a algumas\n    opera\u00e7\u00f5es sobre os seus blocos, ao passo que os \\emph{DataNodes}\n    t\u00eam que enviar relat\u00f3rios regulares para o \\emph{NameNode}.  A\n    arquitectura que melhor descreve a forma como no sistema HDFS\n    estes dois tipos de componentes interagem \u00e9 como\n\n    ",
                "image": [],
                "options": [
                    "Uma arquitectura Cliente-Servidor, em que o\n      \\emph{DataNode} \u00e9 o Cliente e o \\emph{NameNode} \u00e9 o Servidor",
                    "Uma arquitectura Cliente-Servidor, em que o\n      \\emph{NameNode} \u00e9 o Cliente e o \\emph{DataNode} \u00e9 o Servidor",
                    "Uma arquitectura Par-a-Par",
                    "Uma arquitectura Processos Comunicantes"
                ]
            },
            {
                "questionId": "UtilizacaoNotificaDois",
                "content": "\n    De acordo com as t\u00e9cnicas de desenho orientadas aos atributos, uma\n    arquitectura de software deve ser desenhada com base numa lista de\n    requisitos, chamados de \\emph{architectural drivers}. Estes\n    \\emph{architectural drivers} devem ser ordenados de acordo com a\n    sua import\u00e2ncia para os \\emph{stakeholders} pois\n\t\n    ",
                "image": [],
                "options": [
                    "Devemos satisfazer primeiro os requisitos dos\n      \\emph{stakeholders} mais importantes, como por exemplo o\n      cliente",
                    "Se eles n\u00e3o fossem ordenados n\u00e3o saber\u00edamos onde come\u00e7ar\n      o processo de desenho",
                    "Se um dos \\emph{stakeholders} se queixar que o seu\n      requisito n\u00e3o foi satisfeito, podemos explicar-lhe que h\u00e1\n      outros mais importantes",
                    "Quando n\u00e3o \u00e9 poss\u00edvel satisfazer todos os requisitos de\n      forma \u00f3ptima, \u00e9 importante conhecer a sua import\u00e2ncia relativa\n      para que se procure uma solu\u00e7\u00e3o que corresponda a um\n      compromisso satisfat\u00f3rio"
                ]
            },
            {
                "questionId": "HadoopNameNodeThreads",
                "content": "\n    No \u00faltimo par\u00e1grafo da sec\u00e7\u00e3o 8.2.2 descreve-se qual foi a solu\u00e7\u00e3o\n    adoptada pelo \\emph{NameNode} para obter um determinado n\u00edvel de\n    desempenho na escrita para disco.  Que estilo arquitectural \u00e9 mais\n    adequado para representar a solu\u00e7\u00e3o adoptada?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados",
                    "O estilo Processos Comunicantes",
                    "O estilo Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "O estilo Par-a-Par"
                ]
            },
            {
                "questionId": "HadoopInteraccaoDataNodes",
                "content": "\n    No sistema HDFS o componente \\emph{DataNode} tem como principal\n    responsabilidade guardar os blocos de dados correspondentes aos\n    ficheiros dos clientes, existindo tipicamente v\u00e1rias inst\u00e2ncias\n    deste componente num sistema.  O estilo arquitectural que melhor\n    descreve o padr\u00e3o de interac\u00e7\u00e3o existente entre as v\u00e1rias\n    inst\u00e2ncias de \\emph{DataNode} \u00e9\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "HadoopNameNodeComoConector",
                "content": "\n    Suponha que pretende descrever como \u00e9 que um cliente l\u00ea um\n    ficheiro de um sistema HDFS suportando falhas espor\u00e1dicas no\n    hardware de alguns \\emph{DataNodes}, sem que isso afecte a\n    disponibilidade do sistema.  Para isso pretende usar uma vista do\n    tipo componente-e-conector, mas em que os \u00fanicos componentes s\u00e3o o\n    \\emph{HDFS Client} e o \\emph{DataNode}.\n\n    ",
                "image": [],
                "options": [
                    "Essa vista estar\u00e1 sempre incompleta sem o\n      \\emph{NameNode}, visto que o \\emph{HDFS Client} precisa de\n      interagir com ele",
                    "Essa vista estar\u00e1 sempre incompleta sem o\n      \\emph{NameNode}, visto que o \\emph{DataNode} precisa de\n      interagir com ele",
                    "A vista n\u00e3o precisa de incluir o \\emph{NameNode}, mas\n      nesse caso n\u00e3o ser\u00e1 poss\u00edvel raciocinar sobre a disponibilidade\n      do sistema",
                    "A garantia de disponibilidade pode ser dada pela\n      utiliza\u00e7\u00e3o de um conector adequado entre o \\emph{HDFS Client} e os\n      \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "HadoopReplicarNameNode",
                "content": "\n    A arquitectura do sistema HDFS apenas prev\u00ea a exist\u00eancia de um\n    \\emph{NameNode}.  Tendo em conta as responsabilidades deste\n    componente e a actual arquitectura do HDFS, quais seriam as\n    consequ\u00eancias de adicionarmos a possibilidade de termos r\u00e9plicas\n    de \\emph{NameNode} no sistema?\n\n    ",
                "image": [],
                "options": [
                    "O sistema passava a responder em menos tempo a todos os\n      pedidos dos clientes",
                    "O desempenho do sistema n\u00e3o seria alterado",
                    "O sistema passava a poder responder em menos tempo a\n      pedidos de localiza\u00e7\u00f5es de ficheiros",
                    "O sistema passava a poder responder em menos tempo aos\n      pedidos de actualiza\u00e7\u00e3o dos metadados feitos pelos \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "SharedDataAccessorsDirect",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma vista arquitectural onde\n    utiliza o estilo de Dados Partilhados (\\emph{Shared Data}) e que\n    um dos membros da sua equipa prop\u00f5e que dois dos componentes com o\n    papel de \\emph{data accessors} comuniquem directamente entre si.\n    Na sua opini\u00e3o\n\n    ",
                "image": [],
                "options": [
                    "Isso n\u00e3o deve ser permitido porque todas as interac\u00e7\u00f5es\n      entre componentes devem ser feitas atrav\u00e9s do \\emph{Reposit\u00f3rio}",
                    "\u00c9 uma solu\u00e7\u00e3o aceit\u00e1vel se pretendermos reduzir as\n      depend\u00eancias entre os v\u00e1rios componentes do sistema",
                    "Essa \u00e9 a solu\u00e7\u00e3o recomendada se existir um fluxo de\n      controlo que envolva a coreografia dos dois componentes",
                    "Essa interac\u00e7\u00e3o n\u00e3o pode ser representada nesta vista,\n      mas sim numa outra vista da arquitectura do sistema"
                ]
            },
            {
                "questionId": "ServiceLayer",
                "content": "\n    Quando se utiliza o padr\u00e3o Domain Model na implementa\u00e7\u00e3o da camada\n    de l\u00f3gica de dom\u00ednio de uma aplica\u00e7\u00e3o empresarial, \u00e9 comum\n    utilizar-se tamb\u00e9m o padr\u00e3o Service Layer.  O padr\u00e3o Service Layer\n    \u00e9 usado nestes casos para\n    \n    ",
                "image": [],
                "options": [
                    "Controlar e reduzir a interface exposta pela camada de\n      l\u00f3gica de dom\u00ednio, aumentando assim a modificabilidade dessa\n      camada",
                    "Permitir a exist\u00eancia de mais do que uma interface para a\n      camada de l\u00f3gica de dom\u00ednio (para providenciar, por exemplo, uma\n      interface de \\emph{web services})",
                    "Permitir a exist\u00eancia de diferentes camadas de l\u00f3gica de apresenta\u00e7\u00e3o",
                    "Facilitar a utiliza\u00e7\u00e3o da camada de acesso a dados por\n      parte da camada de l\u00f3gica de apresenta\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "WhiteBoxTesting",
                "content": "\n    Considere o seguinte excerto da p\u00e1gina da Wikipedia sobre testes\n    de caixa branca (\\emph{white-box testing}):\n    \\begin{quote}\n      White-box testing is a method of testing software that tests\n      internal structures or workings of an application, as opposed to\n      its functionality. In white-box testing an internal perspective\n      of the system (including the module's code), as well as\n      programming skills, are required and used to design test\n      cases. The tester chooses inputs to exercise paths through the\n      code and determine the appropriate outputs.\n    \\end{quote}\n  \n    Supondo que pertence \u00e0 equipa de testes de um sistema complexo e\n    que \u00e9 respons\u00e1vel por efectuar testes de caixa branca sobre o\n    sistema, quais das seguintes vistas da arquitectura de software do\n    sistema lhe seriam mais \u00fateis?\n\n    ",
                "image": [],
                "options": [
                    "Vistas de Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "Vistas de Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Vistas de Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "Vistas de Implementa\u00e7\u00e3o (\\emph{Implementation})"
                ]
            },
            {
                "questionId": "TempoRespostaAplicacaoEmpresarial",
                "content": "\n    Suponha que est\u00e1 a desenhar a arquitectura de software para uma\n    aplica\u00e7\u00e3o empresarial que tem requisitos sobre o tempo m\u00e1ximo que\n    o sistema deve demorar a responder a um determinado tipo de\n    pedidos por parte dos utilizadores.  Suponha ainda que a\n    frequ\u00eancia desses pedidos \u00e9 previs\u00edvel, mas que os restantes\n    pedidos ao sistema podem variar significativamente.  Finalmente,\n    suponha que o seu sistema vai ter apenas um \u00fanico servidor que se\n    executar\u00e1 numa m\u00e1quina pr\u00e9-definida com um processador AMD de 12\n    cores.  Para mostrar aos \\emph{stakeholders} que o seu sistema\n    satisfaz os requisitos de desempenho ter\u00e1 que usar vistas de que\n    estilo arquitectural?\n\n    ",
                "image": [],
                "options": [
                    "Do estilo Atribui\u00e7\u00e3o de Trabalho",
                    "Do estilo Cliente-Servidor",
                    "Do estilo Instala\u00e7\u00e3o",
                    "Do estilo Processos Comunicantes"
                ]
            },
            {
                "questionId": "TresTiers",
                "content": "\n    Actualmente, a arquitectura mais popular para uma aplica\u00e7\u00e3o\n    empresarial \u00e9 constitu\u00edda por 3 \\emph{tiers}.  Esses tr\u00eas\n    \\emph{tiers} s\u00e3o\n\n    ",
                "image": [],
                "options": [
                    "As camadas de l\u00f3gica de apresenta\u00e7\u00e3o, l\u00f3gica de dom\u00ednio,\n      e acesso a dados",
                    "As aplica\u00e7\u00f5es web tradicionais, os \\emph{mashups}, e as\n      \\emph{rich internet applications} (RIAs)",
                    "O \\emph{browser} web, o servidor web, e a base de dados",
                    "As camadas de \\emph{web services}, l\u00f3gica de dom\u00ednio, e\n      acesso a dados"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2011/exam2/exame-20120203-companion-pt-a.tex",
        "quizTitle": "..-data-2011-exam2-exame-20120203-companion-pt-a",
        "questions": [
            {
                "questionId": "HadoopStakeholdersEuros",
                "content": "\n    Para os \\emph{stakeholders} do sistema Hadoop a solu\u00e7\u00e3o de\n    construir um \\emph{cluster} de servidores usando muitas m\u00e1quinas\n    de baixo custo foi:\n\n    ",
                "image": [],
                "options": [
                    "Determinante para garantir a escalabilidade do sistema",
                    "Determinante para que os custos de falha de um elemento de hardware sejam reduzidos",
                    "Determinante para garantir a portabilidade do sistema",
                    "Determinante para permitir a integra\u00e7\u00e3o com sistemas legados"
                ]
            },
            {
                "questionId": "HadoopCheckpointBackupNode",
                "content": "\n    No sistema Hadoop a utiliza\u00e7\u00e3o de um \\emph{BackupNode} em vez de\n    um \\emph{CheckpointNode}:\n\n    ",
                "image": [],
                "options": [
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} mas tem que pedir toda a informa\u00e7\u00e3o de uma vez s\u00f3 ao \\emph{NameNode}",
                    "N\u00e3o permite a cria\u00e7\u00e3o de \\emph{checkpoints}",
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} com a informa\u00e7\u00e3o que recebe gradualmente do \\emph{NameNode}",
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} sem necessitar de informa\u00e7\u00e3o do \\emph{NameNode}"
                ]
            },
            {
                "questionId": "HadoopCheckpoint",
                "content": "\n    No sistema Hadoop o \\emph{CheckpointNode}, quando executa num n\u00f3\n    diferente do n\u00f3 onde executa o \\emph{NameNode}, suporta:\n\n    ",
                "image": [],
                "options": [
                    "As qualidades de desempenho e disponibilidade",
                    "Apenas a qualidade de desempenho",
                    "Apenas a qualidade de disponibilidade",
                    "As qualidades de desempenho e seguran\u00e7a"
                ]
            },
            {
                "questionId": "HadoopPoliticaLocalizacaoReplicas",
                "content": "\n    No sistema Hadoop a possibilidade de ter v\u00e1rias pol\u00edticas de localiza\u00e7\u00e3o de r\u00e9plicas:\n\n    ",
                "image": [],
                "options": [
                    "Aumenta a facilidade de modifica\u00e7\u00e3o do sistema sempre que se pretenda mudar de pol\u00edtica de localiza\u00e7\u00e3o",
                    "Permite que os \\emph{DataNodes} decidam que r\u00e9plicas possuem",
                    "Aumenta a facilidade de modifica\u00e7\u00e3o do sistema sempre que se altera a estrutura de instala\u00e7\u00e3o",
                    "Permite que as v\u00e1rias r\u00e9plicas sejam colocadas em diferentes \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "HadoopPing",
                "content": "\n    No sistema Hadoop, durante a opera\u00e7\u00e3o normal, o \\emph{NameNode}\n    poderia usar a t\u00e1ctica de \\emph{ping} para saber se os \\emph{DataNodes} est\u00e3o dispon\u00edveis\n\n    ",
                "image": [],
                "options": [
                    "Porque esta t\u00e1ctica \u00e9 aquela que n\u00e3o sobrecarrega o \\emph{NameNode}",
                    "Mas levaria a um maior \\emph{overhead} no \\emph{NameNode}",
                    "Mas tamb\u00e9m poderia usar a t\u00e1ctica de excep\u00e7\u00f5es",
                    "Para informar os restantes \\emph{DataNodes} que est\u00e3o dispon\u00edveis"
                ]
            },
            {
                "questionId": "HadoopInstalacao",
                "content": "\n    O conhecimento da estrutura de instala\u00e7\u00e3o no sistema Hadoop \u00e9\n    relevante para o funcionamento eficaz do sistema.  Para isso o\n    administrador pode configurar, para cada instala\u00e7\u00e3o do sistema, um\n    \\emph{script} que retorna a identifica\u00e7\u00e3o do \\emph{rack} onde se\n    encontra um n\u00f3 (ver sec\u00e7\u00e3o 8.3.2).\n\n    ",
                "image": [],
                "options": [
                    "Este \\emph{script} pertence ao m\u00f3dulo de instala\u00e7\u00e3o do sistema",
                    "Este \\emph{script} \u00e9 um m\u00f3dulo do sistema e implementa uma t\u00e1ctica de seguran\u00e7a",
                    "Este \\emph{script} \u00e9 um m\u00f3dulo do sistema e implementa uma t\u00e1ctica de facilidade de modifica\u00e7\u00e3o",
                    "Este \\emph{script} n\u00e3o pode ser considerado como um m\u00f3dulo do sistema pois \u00e9 apenas un \\emph{script}"
                ]
            },
            {
                "questionId": "TacticaCheckpointRollback",
                "content": "\n    A t\u00e1ctica de \\emph{Checkpoint/rollback} \u00e9 uma t\u00e1ctica de\n\n    ",
                "image": [],
                "options": [
                    "Disponibilidade, seguran\u00e7a, e desempenho",
                    "Apenas de disponibilidade",
                    "Disponibilidade e desempenho",
                    "Disponibilidade e seguran\u00e7a"
                ]
            },
            {
                "questionId": "TiposVistaDesempenho",
                "content": "\n    Para analisar o desempenho de um sistema\n\n    ",
                "image": [],
                "options": [
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-conector",
                    "Todos os tipos vista podem ser necess\u00e1rios",
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-conector e do tipo afecta\u00e7\u00e3o",
                    "Os tipos de vista m\u00f3dulo n\u00e3o s\u00e3o de certeza necess\u00e1rios"
                ]
            },
            {
                "questionId": "UsaCircular",
                "content": "\n    Uma vista onde seja utilizado o estilo Utiliza\u00e7\u00e3o e que possua uma\n    circularidade entre rela\u00e7\u00f5es usa\n\n    ",
                "image": [],
                "options": [
                    "Indica que pode haver problemas para desenvolver testes incrementais",
                    "Indica que se pode seguir um processo de desenvolvimento incremental dos m\u00f3dulos",
                    "Indica que a os m\u00f3dulos que t\u00eam depend\u00eancias circulares entre eles devem ser os primeiros a ser implementados",
                    "Sugere que as rela\u00e7\u00f5es de usa devem ser substitu\u00eddas por rela\u00e7\u00f5es do tipo \u00e9-um"
                ]
            },
            {
                "questionId": "UsaPodeUsar",
                "content": "\n    A diferen\u00e7a entre a rela\u00e7\u00e3o \\emph{usa} do estilo Utiliza\u00e7\u00e3o e a\n    rela\u00e7\u00e3o \\emph{pode usar} do estilo Camadas\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} define uma restri\u00e7\u00e3o para as poss\u00edveis rela\u00e7\u00f5es \\emph{usa} entre m\u00f3dulos pertencentes a camadas diferentes",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{usa} apenas pode ocorrer entre m\u00f3dulos pertencentes \u00e0 mesma camada",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} n\u00e3o indica que o correcto funcionamento da camada acima depende da correcta implementa\u00e7\u00e3o da camada abaixo",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} \u00e9 de facto uma rela\u00e7\u00e3o \\emph{usa} entre camadas"
                ]
            },
            {
                "questionId": "HadoopFileWriteBuffered",
                "content": "\n    No terceiro par\u00e1grafo da sec\u00e7\u00e3o 8.3.1 descreve-se o mecanismo de\n    \\emph{buffering} usado pelo cliente de um sistema HDFS durante a\n    escrita de um ficheiro.  Suponha que quer descrever este mecanismo\n    recorrendo a uma vista arquitectural.  Como \u00e9 que o faria?\n    \n    ",
                "image": [],
                "options": [
                    "N\u00e3o faz sentido usar uma vista arquitectural para isso,\n      visto que \u00e9 um pormenor de implementa\u00e7\u00e3o do sistema que n\u00e3o\n      afecta as suas qualidades",
                    "Usava uma vista do tipo m\u00f3dulo que mostrasse as\n      interfaces providenciadas para o cliente efectuar a escrita",
                    "Usava uma vista do tipo componente-e-conector",
                    "Usava uma vista do estilo arquitectural Instala\u00e7\u00e3o (\\emph{Deployment})"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDados",
                "content": "\n    Um dos principais requisitos para o sistema HDFS \u00e9 a garantia de\n    disponibilidade dos dados armazenados no sistema, mesmo na\n    presen\u00e7a de v\u00e1rios tipos de falhas (n\u00e3o simult\u00e2neas) no\n    \\emph{hardware} em que o sistema executa.  Para mostrar que o\n    sistema satisfaz este requisito\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 necess\u00e1rio recorrer a v\u00e1rios tipos de vistas\n      diferentes, dos tipos de vista componente-e-conector e afecta\u00e7\u00e3o",
                    "Basta mostrar, atrav\u00e9s de vistas do tipo\n      componente-e-conector, que o sistema mant\u00e9m r\u00e9plicas dos dados\n      em diferentes componentes",
                    "Basta mostrar, atrav\u00e9s de vistas do estilo Instala\u00e7\u00e3o,\n      que o componente \\emph{DataNode} executa em mais do que uma\n      m\u00e1quina do \\emph{cluster}",
                    "Basta mostrar, atrav\u00e9s de vistas do estilo Decomposi\u00e7\u00e3o,\n      que existem m\u00f3dulos respons\u00e1veis por fazer a replica\u00e7\u00e3o dos\n      blocos de um ficheiro"
                ]
            },
            {
                "questionId": "HadoopMapReduce",
                "content": "\n    Considere o seguinte excerto do tutorial sobre o Hadoop MapReduce:\n\n    \\begin{quote}\n      Hadoop MapReduce is a software framework for easily writing\n      applications which process vast amounts of data (multi-terabyte\n      data-sets) in-parallel on large clusters (thousands of nodes) of\n      commodity hardware in a reliable, fault-tolerant manner.\n\n      A MapReduce job usually splits the input data-set into\n      independent chunks which are processed by the map tasks in a\n      completely parallel manner.  The framework sorts the outputs of\n      the maps, which are then input to the reduce tasks. Typically\n      both the input and the output of the job are stored in a\n      file-system.  The framework takes care of scheduling tasks,\n      monitoring them and re-executes the failed tasks.\n    \\end{quote}\n\n    Que estilo arquitectural do tipo de vista componente-e-conector\n    lhe parece mais adequado para descrever o funcionamento do\n    MapReduce, tendo em conta as suas principais vantagens na\n    resolu\u00e7\u00e3o de um problema?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "HadoopComoDatabase",
                "content": "\n    Suponha que est\u00e1 a implementar uma aplica\u00e7\u00e3o web e que decidiu\n    usar um sistema HDFS para armazenar os dados da sua aplica\u00e7\u00e3o.  Ou\n    seja, a sua aplica\u00e7\u00e3o web ir\u00e1 ser um cliente do sistema HDFS.\n    Como \u00e9 que esta decis\u00e3o afecta a arquitectura da sua aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "A vista de componente-e-conector da aplica\u00e7\u00e3o tem\n      necessariamente que passar a incluir os componentes \\emph{NameNode} e\n      \\emph{DataNode} com os quais a aplica\u00e7\u00e3o web tem que interagir\n      para aceder aos seus dados",
                    "A vista de camadas da aplica\u00e7\u00e3o web passa a\n      incluir uma camada que corresponde \u00e0 \\emph{framework} Hadoop\n      MapReduce",
                    "A aplica\u00e7\u00e3o continua a ter uma arquitectura de tr\u00eas\n      \\emph{tiers}, em que um deles \u00e9 o sistema HDFS",
                    "A vista de Instala\u00e7\u00e3o do sistema tem que ser alterada\n      para passar a incluir os \\emph{racks} necess\u00e1rios para o\n      funcionamento do HDFS"
                ]
            },
            {
                "questionId": "HadoopCheckpointNode",
                "content": "\n    Tendo em conta a descri\u00e7\u00e3o do \\emph{CheckpointNode} feita na\n    sec\u00e7\u00e3o 8.2.5, qual \u00e9 o estilo arquitectural que melhor representa\n    a interac\u00e7\u00e3o existente entre os componentes \\emph{CheckpointNode}\n    e \\emph{NameNode}?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Canais-e-Filtros (\\emph{Pipes-and-filters})",
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-Subscribe})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client Server})"
                ]
            },
            {
                "questionId": "DomainModel",
                "content": "\n    Dois dos padr\u00f5es existentes para implementar a camada de l\u00f3gica de\n    dom\u00ednio de uma aplica\u00e7\u00e3o empresarial s\u00e3o o Domain Model e o\n    Transaction Script.  A escolha de um ou outro\n    \n    ",
                "image": [],
                "options": [
                    "Apenas afecta a camada de l\u00f3gica de dom\u00ednio",
                    "Pode afectar a camada de acesso a dados porque cada\n      padr\u00e3o coloca requisitos diferentes na interface dessa camada",
                    "N\u00e3o afecta a camada de l\u00f3gica de apresenta\u00e7\u00e3o porque n\u00e3o\n      a pode usar",
                    "N\u00e3o afecta a camada de acesso a dados porque a camada de\n      acesso a dados n\u00e3o usa a camada de l\u00f3gica de dom\u00ednio"
                ]
            },
            {
                "questionId": "RelacaoComponentesMaquinas",
                "content": "\n    Qual das seguintes frases captura melhor as restri\u00e7\u00f5es existentes\n    relativamente a que componentes podem executar em que m\u00e1quinas no\n    estilo Instala\u00e7\u00e3o?\n\n    ",
                "image": [],
                "options": [
                    "Uma m\u00e1quina pode executar apenas um componente, mas um\n      componente pode executar em mais do que uma m\u00e1quina",
                    "Um componente pode executar apenas numa m\u00e1quina, mas uma\n      m\u00e1quina pode executar mais do que um componente",
                    "Cada componente executa numa \u00fanica m\u00e1quina e cada m\u00e1quina\n      executa apenas um componente",
                    "Todos os componentes podem executar em todas as m\u00e1quinas"
                ]
            },
            {
                "questionId": "WebDois",
                "content": "\n    Com a evolu\u00e7\u00e3o das tecnologias para o desenvolvimento de\n    aplica\u00e7\u00f5es web, passou a ser poss\u00edvel desenvolver aplica\u00e7\u00f5es web\n    com uma interface com o utilizador muito mais parecida com a das\n    tradicionais aplica\u00e7\u00f5es de \\emph{desktop}.  No entanto, para isto\n    acontecer, foi necess\u00e1rio que parte do c\u00f3digo que executava no\n    servidor web passasse a ser agora executado no browser.  Como \u00e9\n    que esta mudan\u00e7a se manifesta ao n\u00edvel da arquitectura do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Na vista de Instala\u00e7\u00e3o, visto que o componente\n      de apresenta\u00e7\u00e3o passa a executar-se noutro s\u00edtio",
                    "Na vista de componente-e-conector, porque o\n      conector que liga o cliente web ao servidor web tem que mudar",
                    "Na vista de camadas, porque a ordem das camadas passa a\n      ser outra",
                    "Na correspond\u00eancia entre as camadas do sistema e os\n      componentes onde elas executam"
                ]
            },
            {
                "questionId": "Mashups",
                "content": "\n    Uma das evolu\u00e7\u00f5es no desenvolvimento de aplica\u00e7\u00f5es web foi a\n    cria\u00e7\u00e3o de \\emph{mashups}, que s\u00e3o descritas na Wikipedia da\n    seguinte forma:\n\n    \\begin{quote}\n      In web development, a mashup is a web page or application that\n      uses and combines data, presentation or functionality from two\n      or more sources to create new services.\n    \\end{quote}\n\n    Sabendo que as fontes usadas pelos \\emph{mashups} n\u00e3o t\u00eam\n    conhecimento da exist\u00eancia dos \\emph{mashups} e mudam com\n    frequ\u00eancia, obrigando a altera\u00e7\u00f5es nos \\emph{mashups} para\n    acomodar essas mudan\u00e7as, qual \u00e9 a melhor arquitectura para\n    minimizar o efeito dessas altera\u00e7\u00f5es?\n \n    ",
                "image": [],
                "options": [
                    "Uma arquitectura de \\emph{web services}",
                    "Uma arquitectura Cliente-Servidor, em que o \\emph{mashup}\n      \u00e9 o cliente e as v\u00e1rias fontes s\u00e3o os servidores",
                    "Uma arquitectura de Camadas, em que o acesso \u00e0s fontes\n      \u00e9 a responsabilidade da camada mais abaixo",
                    "Uma arquitectura Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o, em que as v\u00e1rias\n      fontes publicam eventos com as altera\u00e7\u00f5es efectuadas e o\n      \\emph{mashup} subscreve esses eventos"
                ]
            },
            {
                "questionId": "Seguranca",
                "content": "\n    Suponha que est\u00e1 a desenhar a arquitectura de software para uma\n    aplica\u00e7\u00e3o empresarial que tem requisitos de seguran\u00e7a sobre a\n    confidencialidade de parte dos seus dados.  Para mostrar aos\n    \\emph{stakeholders} que o seu sistema satisfaz os requisitos de\n    seguran\u00e7a ter\u00e1 de usar que vistas arquitecturais?\n\n    ",
                "image": [],
                "options": [
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-e-conector",
                    "Apenas s\u00e3o necess\u00e1rias vistas do estilo Instala\u00e7\u00e3o",
                    "Podem ser necess\u00e1rias vistas do tipo componente-e-conector e do estilo Instala\u00e7\u00e3o",
                    "S\u00e3o sempre necess\u00e1rias vistas do tipo componente-e-conector e do estilo Implementa\u00e7\u00e3o"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2011/exam2/exame-20120203-companion-pt-b.tex",
        "quizTitle": "..-data-2011-exam2-exame-20120203-companion-pt-b",
        "questions": [
            {
                "questionId": "HadoopCheckpointBackupNode",
                "content": "\n    No sistema Hadoop a utiliza\u00e7\u00e3o de um \\emph{BackupNode} em vez de\n    um \\emph{CheckpointNode}:\n\n    ",
                "image": [],
                "options": [
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} mas tem que pedir toda a informa\u00e7\u00e3o de uma vez s\u00f3 ao \\emph{NameNode}",
                    "N\u00e3o permite a cria\u00e7\u00e3o de \\emph{checkpoints}",
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} com a informa\u00e7\u00e3o que recebe gradualmente do \\emph{NameNode}",
                    "Permite a cria\u00e7\u00e3o de \\emph{checkpoints} sem necessitar de informa\u00e7\u00e3o do \\emph{NameNode}"
                ]
            },
            {
                "questionId": "HadoopCheckpoint",
                "content": "\n    No sistema Hadoop o \\emph{CheckpointNode}, quando executa num n\u00f3\n    diferente do n\u00f3 onde executa o \\emph{NameNode}, suporta:\n\n    ",
                "image": [],
                "options": [
                    "As qualidades de desempenho e disponibilidade",
                    "Apenas a qualidade de desempenho",
                    "Apenas a qualidade de disponibilidade",
                    "As qualidades de desempenho e seguran\u00e7a"
                ]
            },
            {
                "questionId": "HadoopStakeholdersEuros",
                "content": "\n    Para os \\emph{stakeholders} do sistema Hadoop a solu\u00e7\u00e3o de\n    construir um \\emph{cluster} de servidores usando muitas m\u00e1quinas\n    de baixo custo foi:\n\n    ",
                "image": [],
                "options": [
                    "Determinante para garantir a escalabilidade do sistema",
                    "Determinante para que os custos de falha de um elemento de hardware sejam reduzidos",
                    "Determinante para garantir a portabilidade do sistema",
                    "Determinante para permitir a integra\u00e7\u00e3o com sistemas legados"
                ]
            },
            {
                "questionId": "HadoopPing",
                "content": "\n    No sistema Hadoop, durante a opera\u00e7\u00e3o normal, o \\emph{NameNode}\n    poderia usar a t\u00e1ctica de \\emph{ping} para saber se os \\emph{DataNodes} est\u00e3o dispon\u00edveis\n\n    ",
                "image": [],
                "options": [
                    "Porque esta t\u00e1ctica \u00e9 aquela que n\u00e3o sobrecarrega o \\emph{NameNode}",
                    "Mas levaria a um maior \\emph{overhead} no \\emph{NameNode}",
                    "Mas tamb\u00e9m poderia usar a t\u00e1ctica de excep\u00e7\u00f5es",
                    "Para informar os restantes \\emph{DataNodes} que est\u00e3o dispon\u00edveis"
                ]
            },
            {
                "questionId": "HadoopPoliticaLocalizacaoReplicas",
                "content": "\n    No sistema Hadoop a possibilidade de ter v\u00e1rias pol\u00edticas de localiza\u00e7\u00e3o de r\u00e9plicas:\n\n    ",
                "image": [],
                "options": [
                    "Aumenta a facilidade de modifica\u00e7\u00e3o do sistema sempre que se pretenda mudar de pol\u00edtica de localiza\u00e7\u00e3o",
                    "Permite que os \\emph{DataNodes} decidam que r\u00e9plicas possuem",
                    "Aumenta a facilidade de modifica\u00e7\u00e3o do sistema sempre que se altera a estrutura de instala\u00e7\u00e3o",
                    "Permite que as v\u00e1rias r\u00e9plicas sejam colocadas em diferentes \\emph{DataNodes}"
                ]
            },
            {
                "questionId": "HadoopInstalacao",
                "content": "\n    O conhecimento da estrutura de instala\u00e7\u00e3o no sistema Hadoop \u00e9\n    relevante para o funcionamento eficaz do sistema.  Para isso o\n    administrador pode configurar, para cada instala\u00e7\u00e3o do sistema, um\n    \\emph{script} que retorna a identifica\u00e7\u00e3o do \\emph{rack} onde se\n    encontra um n\u00f3 (ver sec\u00e7\u00e3o 8.3.2).\n\n    ",
                "image": [],
                "options": [
                    "Este \\emph{script} pertence ao m\u00f3dulo de instala\u00e7\u00e3o do sistema",
                    "Este \\emph{script} \u00e9 um m\u00f3dulo do sistema e implementa uma t\u00e1ctica de seguran\u00e7a",
                    "Este \\emph{script} \u00e9 um m\u00f3dulo do sistema e implementa uma t\u00e1ctica de facilidade de modifica\u00e7\u00e3o",
                    "Este \\emph{script} n\u00e3o pode ser considerado como um m\u00f3dulo do sistema pois \u00e9 apenas un \\emph{script}"
                ]
            },
            {
                "questionId": "TacticaCheckpointRollback",
                "content": "\n    A t\u00e1ctica de \\emph{Checkpoint/rollback} \u00e9 uma t\u00e1ctica de\n\n    ",
                "image": [],
                "options": [
                    "Disponibilidade, seguran\u00e7a, e desempenho",
                    "Apenas de disponibilidade",
                    "Disponibilidade e desempenho",
                    "Disponibilidade e seguran\u00e7a"
                ]
            },
            {
                "questionId": "UsaCircular",
                "content": "\n    Uma vista onde seja utilizado o estilo Utiliza\u00e7\u00e3o e que possua uma\n    circularidade entre rela\u00e7\u00f5es usa\n\n    ",
                "image": [],
                "options": [
                    "Indica que pode haver problemas para desenvolver testes incrementais",
                    "Indica que se pode seguir um processo de desenvolvimento incremental dos m\u00f3dulos",
                    "Indica que a os m\u00f3dulos que t\u00eam depend\u00eancias circulares entre eles devem ser os primeiros a ser implementados",
                    "Sugere que as rela\u00e7\u00f5es de usa devem ser substitu\u00eddas por rela\u00e7\u00f5es do tipo \u00e9-um"
                ]
            },
            {
                "questionId": "UsaPodeUsar",
                "content": "\n    A diferen\u00e7a entre a rela\u00e7\u00e3o \\emph{usa} do estilo Utiliza\u00e7\u00e3o e a\n    rela\u00e7\u00e3o \\emph{pode usar} do estilo Camadas\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} define uma restri\u00e7\u00e3o para as poss\u00edveis rela\u00e7\u00f5es \\emph{usa} entre m\u00f3dulos pertencentes a camadas diferentes",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{usa} apenas pode ocorrer entre m\u00f3dulos pertencentes \u00e0 mesma camada",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} n\u00e3o indica que o correcto funcionamento da camada acima depende da correcta implementa\u00e7\u00e3o da camada abaixo",
                    "\u00c9 que a rela\u00e7\u00e3o \\emph{pode usar} \u00e9 de facto uma rela\u00e7\u00e3o \\emph{usa} entre camadas"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDados",
                "content": "\n    Um dos principais requisitos para o sistema HDFS \u00e9 a garantia de\n    disponibilidade dos dados armazenados no sistema, mesmo na\n    presen\u00e7a de v\u00e1rios tipos de falhas (n\u00e3o simult\u00e2neas) no\n    \\emph{hardware} em que o sistema executa.  Para mostrar que o\n    sistema satisfaz este requisito\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 necess\u00e1rio recorrer a v\u00e1rios tipos de vistas\n      diferentes, dos tipos de vista componente-e-conector e afecta\u00e7\u00e3o",
                    "Basta mostrar, atrav\u00e9s de vistas do tipo\n      componente-e-conector, que o sistema mant\u00e9m r\u00e9plicas dos dados\n      em diferentes componentes",
                    "Basta mostrar, atrav\u00e9s de vistas do estilo Instala\u00e7\u00e3o,\n      que o componente \\emph{DataNode} executa em mais do que uma\n      m\u00e1quina do \\emph{cluster}",
                    "Basta mostrar, atrav\u00e9s de vistas do estilo Decomposi\u00e7\u00e3o,\n      que existem m\u00f3dulos respons\u00e1veis por fazer a replica\u00e7\u00e3o dos\n      blocos de um ficheiro"
                ]
            },
            {
                "questionId": "TiposVistaDesempenho",
                "content": "\n    Para analisar o desempenho de um sistema\n\n    ",
                "image": [],
                "options": [
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-conector",
                    "Todos os tipos vista podem ser necess\u00e1rios",
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-conector e do tipo afecta\u00e7\u00e3o",
                    "Os tipos de vista m\u00f3dulo n\u00e3o s\u00e3o de certeza necess\u00e1rios"
                ]
            },
            {
                "questionId": "Seguranca",
                "content": "\n    Suponha que est\u00e1 a desenhar a arquitectura de software para uma\n    aplica\u00e7\u00e3o empresarial que tem requisitos de seguran\u00e7a sobre a\n    confidencialidade de parte dos seus dados.  Para mostrar aos\n    \\emph{stakeholders} que o seu sistema satisfaz os requisitos de\n    seguran\u00e7a ter\u00e1 de usar que vistas arquitecturais?\n\n    ",
                "image": [],
                "options": [
                    "Apenas s\u00e3o necess\u00e1rias vistas do tipo componente-e-conector",
                    "Apenas s\u00e3o necess\u00e1rias vistas do estilo Instala\u00e7\u00e3o",
                    "Podem ser necess\u00e1rias vistas do tipo componente-e-conector e do estilo Instala\u00e7\u00e3o",
                    "S\u00e3o sempre necess\u00e1rias vistas do tipo componente-e-conector e do estilo Implementa\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "HadoopFileWriteBuffered",
                "content": "\n    No terceiro par\u00e1grafo da sec\u00e7\u00e3o 8.3.1 descreve-se o mecanismo de\n    \\emph{buffering} usado pelo cliente de um sistema HDFS durante a\n    escrita de um ficheiro.  Suponha que quer descrever este mecanismo\n    recorrendo a uma vista arquitectural.  Como \u00e9 que o faria?\n    \n    ",
                "image": [],
                "options": [
                    "N\u00e3o faz sentido usar uma vista arquitectural para isso,\n      visto que \u00e9 um pormenor de implementa\u00e7\u00e3o do sistema que n\u00e3o\n      afecta as suas qualidades",
                    "Usava uma vista do tipo m\u00f3dulo que mostrasse as\n      interfaces providenciadas para o cliente efectuar a escrita",
                    "Usava uma vista do tipo componente-e-conector",
                    "Usava uma vista do estilo arquitectural Instala\u00e7\u00e3o (\\emph{Deployment})"
                ]
            },
            {
                "questionId": "HadoopComoDatabase",
                "content": "\n    Suponha que est\u00e1 a implementar uma aplica\u00e7\u00e3o web e que decidiu\n    usar um sistema HDFS para armazenar os dados da sua aplica\u00e7\u00e3o.  Ou\n    seja, a sua aplica\u00e7\u00e3o web ir\u00e1 ser um cliente do sistema HDFS.\n    Como \u00e9 que esta decis\u00e3o afecta a arquitectura da sua aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "A vista de componente-e-conector da aplica\u00e7\u00e3o tem\n      necessariamente que passar a incluir os componentes \\emph{NameNode} e\n      \\emph{DataNode} com os quais a aplica\u00e7\u00e3o web tem que interagir\n      para aceder aos seus dados",
                    "A vista de camadas da aplica\u00e7\u00e3o web passa a\n      incluir uma camada que corresponde \u00e0 \\emph{framework} Hadoop\n      MapReduce",
                    "A aplica\u00e7\u00e3o continua a ter uma arquitectura de tr\u00eas\n      \\emph{tiers}, em que um deles \u00e9 o sistema HDFS",
                    "A vista de Instala\u00e7\u00e3o do sistema tem que ser alterada\n      para passar a incluir os \\emph{racks} necess\u00e1rios para o\n      funcionamento do HDFS"
                ]
            },
            {
                "questionId": "HadoopMapReduce",
                "content": "\n    Considere o seguinte excerto do tutorial sobre o Hadoop MapReduce:\n\n    \\begin{quote}\n      Hadoop MapReduce is a software framework for easily writing\n      applications which process vast amounts of data (multi-terabyte\n      data-sets) in-parallel on large clusters (thousands of nodes) of\n      commodity hardware in a reliable, fault-tolerant manner.\n\n      A MapReduce job usually splits the input data-set into\n      independent chunks which are processed by the map tasks in a\n      completely parallel manner.  The framework sorts the outputs of\n      the maps, which are then input to the reduce tasks. Typically\n      both the input and the output of the job are stored in a\n      file-system.  The framework takes care of scheduling tasks,\n      monitoring them and re-executes the failed tasks.\n    \\end{quote}\n\n    Que estilo arquitectural do tipo de vista componente-e-conector\n    lhe parece mais adequado para descrever o funcionamento do\n    MapReduce, tendo em conta as suas principais vantagens na\n    resolu\u00e7\u00e3o de um problema?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Canais-e-filtros (\\emph{Pipes-and-filters})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "HadoopCheckpointNode",
                "content": "\n    Tendo em conta a descri\u00e7\u00e3o do \\emph{CheckpointNode} feita na\n    sec\u00e7\u00e3o 8.2.5, qual \u00e9 o estilo arquitectural que melhor representa\n    a interac\u00e7\u00e3o existente entre os componentes \\emph{CheckpointNode}\n    e \\emph{NameNode}?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Canais-e-Filtros (\\emph{Pipes-and-filters})",
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-Subscribe})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client Server})"
                ]
            },
            {
                "questionId": "RelacaoComponentesMaquinas",
                "content": "\n    Qual das seguintes frases captura melhor as restri\u00e7\u00f5es existentes\n    relativamente a que componentes podem executar em que m\u00e1quinas no\n    estilo Instala\u00e7\u00e3o?\n\n    ",
                "image": [],
                "options": [
                    "Uma m\u00e1quina pode executar apenas um componente, mas um\n      componente pode executar em mais do que uma m\u00e1quina",
                    "Um componente pode executar apenas numa m\u00e1quina, mas uma\n      m\u00e1quina pode executar mais do que um componente",
                    "Cada componente executa numa \u00fanica m\u00e1quina e cada m\u00e1quina\n      executa apenas um componente",
                    "Todos os componentes podem executar em todas as m\u00e1quinas"
                ]
            },
            {
                "questionId": "DomainModel",
                "content": "\n    Dois dos padr\u00f5es existentes para implementar a camada de l\u00f3gica de\n    dom\u00ednio de uma aplica\u00e7\u00e3o empresarial s\u00e3o o Domain Model e o\n    Transaction Script.  A escolha de um ou outro\n    \n    ",
                "image": [],
                "options": [
                    "Apenas afecta a camada de l\u00f3gica de dom\u00ednio",
                    "Pode afectar a camada de acesso a dados porque cada\n      padr\u00e3o coloca requisitos diferentes na interface dessa camada",
                    "N\u00e3o afecta a camada de l\u00f3gica de apresenta\u00e7\u00e3o porque n\u00e3o\n      a pode usar",
                    "N\u00e3o afecta a camada de acesso a dados porque a camada de\n      acesso a dados n\u00e3o usa a camada de l\u00f3gica de dom\u00ednio"
                ]
            },
            {
                "questionId": "Mashups",
                "content": "\n    Uma das evolu\u00e7\u00f5es no desenvolvimento de aplica\u00e7\u00f5es web foi a\n    cria\u00e7\u00e3o de \\emph{mashups}, que s\u00e3o descritas na Wikipedia da\n    seguinte forma:\n\n    \\begin{quote}\n      In web development, a mashup is a web page or application that\n      uses and combines data, presentation or functionality from two\n      or more sources to create new services.\n    \\end{quote}\n\n    Sabendo que as fontes usadas pelos \\emph{mashups} n\u00e3o t\u00eam\n    conhecimento da exist\u00eancia dos \\emph{mashups} e mudam com\n    frequ\u00eancia, obrigando a altera\u00e7\u00f5es nos \\emph{mashups} para\n    acomodar essas mudan\u00e7as, qual \u00e9 a melhor arquitectura para\n    minimizar o efeito dessas altera\u00e7\u00f5es?\n \n    ",
                "image": [],
                "options": [
                    "Uma arquitectura de \\emph{web services}",
                    "Uma arquitectura Cliente-Servidor, em que o \\emph{mashup}\n      \u00e9 o cliente e as v\u00e1rias fontes s\u00e3o os servidores",
                    "Uma arquitectura de Camadas, em que o acesso \u00e0s fontes\n      \u00e9 a responsabilidade da camada mais abaixo",
                    "Uma arquitectura Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o, em que as v\u00e1rias\n      fontes publicam eventos com as altera\u00e7\u00f5es efectuadas e o\n      \\emph{mashup} subscreve esses eventos"
                ]
            },
            {
                "questionId": "WebDois",
                "content": "\n    Com a evolu\u00e7\u00e3o das tecnologias para o desenvolvimento de\n    aplica\u00e7\u00f5es web, passou a ser poss\u00edvel desenvolver aplica\u00e7\u00f5es web\n    com uma interface com o utilizador muito mais parecida com a das\n    tradicionais aplica\u00e7\u00f5es de \\emph{desktop}.  No entanto, para isto\n    acontecer, foi necess\u00e1rio que parte do c\u00f3digo que executava no\n    servidor web passasse a ser agora executado no browser.  Como \u00e9\n    que esta mudan\u00e7a se manifesta ao n\u00edvel da arquitectura do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Na vista de Instala\u00e7\u00e3o, visto que o componente\n      de apresenta\u00e7\u00e3o passa a executar-se noutro s\u00edtio",
                    "Na vista de componente-e-conector, porque o\n      conector que liga o cliente web ao servidor web tem que mudar",
                    "Na vista de camadas, porque a ordem das camadas passa a\n      ser outra",
                    "Na correspond\u00eancia entre as camadas do sistema e os\n      componentes onde elas executam"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2012/exam1/exame-20130109-companion-pt-a.tex",
        "quizTitle": "..-data-2012-exam1-exame-20130109-companion-pt-a",
        "questions": [
            {
                "questionId": "GHCStakeholders",
                "content": "\n    Dois dos \\emph{stakeholders} identificados para o \\ghc{} foram o\n    governo do Reino Unido e os investigadores que pretendem fazer\n    investiga\u00e7\u00e3o em linguagens de programa\u00e7\u00e3o funcionais.  Qual destes\n    \\emph{stakeholders} teve uma maior influ\u00eancia na arquitectura de\n    software do sistema?\n\n    ",
                "image": [],
                "options": [
                    "O governo do Reino Unido, porque foi quem financiou o\n      projecto",
                    "Os investigadores, porque foram eles que inventaram a\n      linguagem de programa\u00e7\u00e3o Haskell",
                    "O governo do Reino Unido, porque pretendia que o sistema\n      pudesse ser usado para desenvolver a ind\u00fastria de software Brit\u00e2nica",
                    "Os investigadores, porque pretendiam usar o sistema para\n      validar as suas inven\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "GHCChunks",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      At the highest level, GHC can be divided into three distinct\n      chunks:\n      \\begin{itemize}\n      \\item The compiler itself.\n      \\item The Boot Libraries.\n      \\item The Runtime System (RTS). \n      \\end{itemize}\n    \\end{quote}\n    Qual a forma mais correcta de caracterizar arquitecturalmente os\n    tr\u00eas \\emph{chunks} a que este texto se refere?\n\n     ",
                "image": [],
                "options": [
                    "Como m\u00f3dulos do sistema",
                    "Como componentes do sistema",
                    "O compilador e o RTS como componentes e as \\emph{boot\n         libraries} como m\u00f3dulo",
                    "O compilador como componente e os outros dois como m\u00f3dulos"
                ]
            },
            {
                "questionId": "GHCDesugaring",
                "content": "\n    Uma das decis\u00f5es importantes no desenvolvimento do \\ghc{} foi a de\n    se fazer a verifica\u00e7\u00e3o de tipos antes da transforma\u00e7\u00e3o de um\n    programa em Haskell para um programa na linguagem Core\n    (\\emph{type-check-before-desugar}).  Esta decis\u00e3o de desenho\n\n    ",
                "image": [],
                "options": [
                    "Tornou a verifica\u00e7\u00e3o de tipos muito mais simples",
                    "Permitiu satisfazer requisitos de desempenho do sistema",
                    "Tornou a transforma\u00e7\u00e3o para a linguagem Core mais simples",
                    "Permitiu satisfazer requisitos de usabilidade do sistema"
                ]
            },
            {
                "questionId": "GHCRTS",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      The Runtime System is a library of mostly C code that is linked\n      into every Haskell program. It provides the support\n      infrastructure needed for running the compiled Haskell code,\n      including the following main components:\n      \\begin{itemize}\n      \\item Memory management, including a parallel, generational, garbage collector;\n      \\item Thread management and scheduling;\n      \\item The primitive operations provided by GHC;\n      \\item A bytecode interpreter and dynamic linker for GHCi.\n      \\end{itemize}\n    \\end{quote}\n    Que qualidades do sistema s\u00e3o melhoradas pela decis\u00e3o de criar\n    o \\emph{Runtime System} indicado acima?\n\n    ",
                "image": [],
                "options": [
                    "O desempenho do compilador, porque o RTS est\u00e1 escrito de\n      forma muito eficiente em C",
                    "O desempenho dos programas compilados, porque o RTS est\u00e1\n      escrito de forma muito eficiente em C",
                    "A portabilidade, porque o RTS cria uma camada de\n      abstrac\u00e7\u00e3o que esconde alguns detalhes do sistema operativo",
                    "A modificabilidade dos programas compilados, porque se\n      pode alterar o seu comportamento alterando apenas o RTS"
                ]
            },
            {
                "questionId": "GHCPipeAndFilter",
                "content": "\n    Tal como muitos outros compiladores, a compila\u00e7\u00e3o de um programa\n    Haskell com o \\ghc{} utiliza o estilo \\emph{pipe-and-filter},\n    criando um \\emph{pipeline} composto por v\u00e1rias fases de\n    compila\u00e7\u00e3o.  A utiliza\u00e7\u00e3o deste estilo arquitectural no GHC tem\n    como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Permitir a execu\u00e7\u00e3o em paralelo das v\u00e1rias fases de\n      compila\u00e7\u00e3o, melhorando assim o desempenho do compilador",
                    "Permitir a compila\u00e7\u00e3o de programas muito grandes, porque\n      cada fase pode executar de forma incremental sem ser necess\u00e1rio\n      ter o programa todo em mem\u00f3ria ao mesmo tempo",
                    "Permitir a f\u00e1cil altera\u00e7\u00e3o das fases de compila\u00e7\u00e3o que se\n      usam no processo de compila\u00e7\u00e3o, tornando assim o compilador mais\n      modific\u00e1vel",
                    "Todas as outras op\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "ZeroMQApps",
                "content": "\n    Qual das seguintes frases melhor caracteriza o sistema ZeroMQ\n    \n    ",
                "image": [],
                "options": [
                    "\u00c9 um sistema com uma arquitectura Par-a-Par",
                    "\u00c9 um sistema com uma arquitectura Cliente-Servidor",
                    "Permite a implementa\u00e7\u00e3o de sistemas com uma arquitectura Par-a-Par",
                    "Permite a implementa\u00e7\u00e3o de sistemas com arquitecturas\n      Par-a-Par, Cliente-Servidor, ou Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "ZeroMQWorkersPerCore",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      The idea was to launch one worker thread per CPU core---having\n      two threads sharing the same core would only mean a lot of\n      context switching for no particular advantage.\n    \\end{quote}\n    Qual \u00e9 o estilo arquitectural mais adequado para representar esta\n    decis\u00e3o de desenho?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Tiers",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "O estilo Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})"
                ]
            },
            {
                "questionId": "ZeroMQMessagingPatterns",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      Messaging patterns form a layer (the so-called \"scalability\n      layer\") on top of the transport layer (TCP and friends).\n      Individual messaging patterns are implementations of this layer.\n    \\end{quote}\n    Qual \u00e9 a principal vantagem da adop\u00e7\u00e3o desta arquitectura de\n    camadas pelo ZeroMQ?\n\n    ",
                "image": [],
                "options": [
                    "Aumenta a portabilidade para outros sistemas operativos",
                    "Facilita a adi\u00e7\u00e3o de novos messaging patterns",
                    "Torna o sistema mais escal\u00e1vel",
                    "Facilita a reutiliza\u00e7\u00e3o dos messaging patterns"
                ]
            },
            {
                "questionId": "ZeroMQBatching",
                "content": "\n    O ZeroMQ usa \\emph{batching} din\u00e2mico para controlar o desempenho\n    do sistema.  A utiliza\u00e7\u00e3o desta abordagem tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Diminuir a lat\u00eancia do envio de uma mensagem quando o\n      sistema est\u00e1 sobrecarregado",
                    "Aumentar o \\emph{throughput} do sistema quando este est\u00e1\n      sobrecarregado",
                    "Diminuir a quantidade de mem\u00f3ria necess\u00e1ria para o envio\n      de um elevado n\u00famero de mensagens",
                    "Reduzir a utiliza\u00e7\u00e3o do processador quando o sistema tem\n      poucas mensagens para enviar"
                ]
            },
            {
                "questionId": "ZeroMQLockFree",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      \u00d8MQ uses a lock-free queue in pipe objects to pass messages\n      between the user's threads and \u00d8MQ's worker threads.  There are\n      two interesting aspects to how \u00d8MQ uses the lock-free queue.\n      First, each queue has exactly one writer thread and exactly one\n      reader thread.  If there's a need for 1-to-N communication,\n      multiple queues are created.  Given that this way the queue\n      doesn't have to take care of synchronising the writers (there's\n      only one writer) or readers (there's only one reader) it can be\n      implemented in an extra-efficient way.\n    \\end{quote}\n    O estilo arquitectural que melhor representa o padr\u00e3o de\n    interac\u00e7\u00e3o descrito acima \u00e9\n\n    ",
                "image": [],
                "options": [
                    "O estilo Canais-e-Filtros (\\emph{Pipe-and-Filter})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "nginxFirstAD",
                "content": "\n    O principal \\emph{architectural driver} para o sistema nginx foi\n\n    ",
                "image": [],
                "options": [
                    "Ter um \\emph{throughput} maior do que o Apache",
                    "Ter uma lat\u00eancia no processamento de um pedido\n      inferior \u00e0 do Apache",
                    "Ser mais facilmente modific\u00e1vel do que o Apache",
                    "Permitir um n\u00famero simult\u00e2neo de liga\u00e7\u00f5es maior do que o\n      Apache"
                ]
            },
            {
                "questionId": "nginxEventDriven",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      Traditional process- or thread-based models of handling\n      concurrent connections involve handling each connection with a\n      separate process or thread, and blocking on network or\n      input/output operations.  nginx followed a different model.  It\n      was actually inspired by the ongoing development of advanced\n      event-based mechanisms in a variety of operating systems.  What\n      resulted is a modular, event-driven, asynchronous,\n      single-threaded, non-blocking architecture which became the\n      foundation of nginx code.\n    \\end{quote}\n    A decis\u00e3o de fazer o nginx como um sistema \\emph{event-driven},\n    \\emph{asynchronous}, \\emph{single-threaded}, e \\emph{non-blocking}\n    foi porque\n\n    ",
                "image": [],
                "options": [
                    "O c\u00f3digo \u00e9 mais f\u00e1cil de desenvolver por n\u00e3o ser concorrente",
                    "Se pretendia fazer um uso mais eficiente dos recursos\n      computacionais existentes",
                    "Os programas \\emph{event-driven} s\u00e3o mais f\u00e1ceis de\n      modificar",
                    "Num sistema \\emph{event-driven} cada componente pode\n      funcionar independentemente dos restantes"
                ]
            },
            {
                "questionId": "nginxModuleTypes",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      nginx's modular architecture generally allows developers to\n      extend the set of web server features without modifying the\n      nginx core.  nginx modules come in slightly different\n      incarnations, namely core modules, event modules, phase\n      handlers, protocols, variable handlers, filters, upstreams and\n      load balancers.  [...]  Event modules provide a particular\n      OS-dependent event notification mechanism like kqueue or epoll.\n      Protocol modules allow nginx to communicate through HTTPS,\n      TLS/SSL, SMTP, POP3 and IMAP.\n    \\end{quote}\n    Que estilo arquitectural \u00e9 mais adequado para representar a\n    informa\u00e7\u00e3o acima?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Generaliza\u00e7\u00e3o",
                    "O estilo Utiliza\u00e7\u00e3o",
                    "O estilo Camadas",
                    "O estilo Aspectos"
                ]
            },
            {
                "questionId": "nginxOSOptimizations",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      While handling a variety of actions associated with accepting,\n      processing and managing network connections and content\n      retrieval, nginx uses event notification mechanisms and a number\n      of disk I/O performance enhancements in Linux, Solaris and\n      BSD-based operating systems, like kqueue, epoll, and event\n      ports.  The goal is to provide as many hints to the operating\n      system as possible, in regards to obtaining timely asynchronous\n      feedback for inbound and outbound traffic, disk operations,\n      reading from or writing to sockets, timeouts and so on.\n    \\end{quote}\n    Esta abordagem usada no desenvolvimento do nginx tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Tornar o sistema mais facilmente modific\u00e1vel",
                    "Tornar o sistema mais port\u00e1vel para diferentes sistemas operativos",
                    "Tornar o sistema mais r\u00e1pido",
                    "Tornar o sistema mais tolerante a faltas"
                ]
            },
            {
                "questionId": "nginxProcessThread",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      Traditional process- or thread-based models of handling\n      concurrent connections involve handling each connection with a\n      separate process or thread, and blocking on network or\n      input/output operations.\n    \\end{quote}\n    O estilo arquitectural que melhor descreve o modelo descrito acima\n    para o processamento de pedidos \u00e9\n\t\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "WebPartioning",
                "content": "\n    No documento que descreve a arquitectura de um servi\u00e7o web (em\n    anexo), uma das abordagens introduzidas na Sec\u00e7\u00e3o~1.2 \u00e9 a de\n    \\emph{partitioning}, ilustrada na Figura~1.4.  A utiliza\u00e7\u00e3o de\n    \\emph{partitioning} faz com que\n\n    ",
                "image": [],
                "options": [
                    "A disponibilidade aumente",
                    "A capacidade aumente",
                    "A capacidade aumente mas a disponibilidade diminua",
                    "A disponibilidade e a capacidade aumentem"
                ]
            },
            {
                "questionId": "WebPartitioningDois",
                "content": "\n    Considerando ainda o caso da pergunta anterior, compare as\n    arquitecturas esbo\u00e7adas nas Figura~1.3 e Figura~1.4.  A diferen\u00e7a\n    entre as duas arquitecturas manifesta-se\n\n    ",
                "image": [],
                "options": [
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment}), porque\n      apenas se altera o n\u00famero de m\u00e1quinas que v\u00e3o conter as imagens",
                    "Na vista de Utiliza\u00e7\u00e3o (\\emph{Uses}), porque cada\n      \\emph{Image Write/Retrieval Service} vai usar um \\emph{Image\n        File Storage} diferente",
                    "Na vista de Componente-e-Conector, porque \u00e9 preciso\n      alterar os componentes e os conectores do sistema",
                    "Na vista de Decomposi\u00e7\u00e3o, porque precisamos de mais\n      m\u00f3dulos para representar a divis\u00e3o das imagens por diferentes\n      elementos da arquitectura"
                ]
            },
            {
                "questionId": "WebRedundancy",
                "content": "\n    Considere a arquitectura apresentada na Figura~1.3 do caso das\n    perguntas anteriores, em que se introduziu redund\u00e2ncia no sistema.\n    Neste caso particular, a introdu\u00e7\u00e3o de redund\u00e2ncia na arquitectura\n    tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho da opera\u00e7\u00e3o de \\emph{Upload} de uma\n    imagem",
                    "Aumentar o desempenho da opera\u00e7\u00e3o de pesquisa de uma imagem",
                    "Aumentar a escalabilidade do sistema",
                    "Aumentar a toler\u00e2ncia a faltas do sistema"
                ]
            },
            {
                "questionId": "ThreeVsFourTiers",
                "content": "\n    A arquitectura de software t\u00edpica de uma aplica\u00e7\u00e3o empresarial \u00e9\n    composta por tr\u00eas \\emph{tiers} e por tr\u00eas camadas.  No entanto,\n    podemos ter varia\u00e7\u00f5es a esta arquitectura.  Por exemplo, separando\n    o \\emph{tier} do meio em dois \\emph{tiers}.  Neste caso, que\n    altera\u00e7\u00f5es \u00e9 que existem ao n\u00edvel da arquitectura de camadas?\n\n    ",
                "image": [],
                "options": [
                    "Passamos a ter quatro camadas, em que cada camada \u00e9\n      executada no \\emph{tier} correspondente, como anteriormente",
                    "Cada um dos dois \\emph{tiers} do meio executa as tr\u00eas\n      camadas j\u00e1 existentes anteriormente, n\u00e3o sendo necess\u00e1rio\n      alterar a vista de camadas",
                    "N\u00e3o existe qualquer rela\u00e7\u00e3o entre os \\emph{tiers} e as\n      camadas, pelo que a arquitectura de camadas n\u00e3o \u00e9 alterada",
                    "A execu\u00e7\u00e3o das camadas anteriormente existente \u00e9 separada\n      entre os dois novos \\emph{tiers}, podendo aparecer novas camadas\n      pelo meio"
                ]
            },
            {
                "questionId": "WebLoadBalancer",
                "content": "\n    No documento que descreve a arquitectura de servi\u00e7os web pode\n    ler-se o seguinte:\n    \\begin{quote}\n      Another critical piece of any distributed system is a load\n      balancer.  Load balancers are a principal part of any\n      architecture, as their role is to distribute load across a set\n      of nodes responsible for servicing requests.  This allows\n      multiple nodes to transparently service the same function in a\n      system.  Their main purpose is to handle a lot of simultaneous\n      connections and route those connections to one of the request\n      nodes, allowing the system to scale to service more requests by\n      just adding nodes.\n    \\end{quote}\n    Com base na descri\u00e7\u00e3o acima, qual lhe parece ser a melhor forma de\n    representar a arquitectura de um sistema que esteja a usar um\n    \\emph{load balancer}?\n\n    ",
                "image": [],
                "options": [
                    "Com uma vista de componente-e-conector, em que o\n      \\emph{load balancer} \u00e9 um dos componentes do sistema",
                    "Com uma vista de Instala\u00e7\u00e3o (\\emph{Deployment}), em que o\n      \\emph{load balancer} faz parte da infra-estrutura de comunica\u00e7\u00e3o\n      usada para executar o sistema",
                    "Com uma vista de Utiliza\u00e7\u00e3o (\\emph{Uses}), representando\n      as depend\u00eancias existentes entre o \\emph{load balancer} e os\n      servi\u00e7os que ele usa",
                    "Com uma vista de Camadas (\\emph{Layers}), em que o\n      \\emph{load balancer} cria uma camada de abstrac\u00e7\u00e3o entre quem\n      efectua o pedido e quem providencia o servi\u00e7o"
                ]
            },
            {
                "questionId": "DomainLogicFenix",
                "content": "\n    A primeira arquitectura do sistema F\u00e9nix, correspondendo aos seus\n    primeiros anos de desenvolvimento, podia ser descrita como uma\n    arquitectura de tr\u00eas camadas, t\u00edpica de uma aplica\u00e7\u00e3o empresarial.\n    Uma dessas camadas era a camada de l\u00f3gica de dom\u00ednio (\\emph{Domain\n      Logic}).  Qual das seguintes afirma\u00e7\u00f5es melhor caracteriza a\n    arquitectura do F\u00e9nix no que diz respeito a essa camada?\n    \n    ",
                "image": [],
                "options": [
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Domain Model",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Transaction Script",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Service Layer",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada como um\n      modelo de dom\u00ednio rico, em cima do qual existia uma camada de\n      servi\u00e7os fina"
                ]
            },
            {
                "questionId": "IncrementalReleases",
                "content": "\n    Para colocar um produto mais rapidamente no mercado, as empresas\n    de desenvolvimento de software est\u00e3o cada vez mais a usar uma\n    estrat\u00e9gia incremental de desenvolvimento, lan\u00e7ando periodicamente\n    novas vers\u00f5es do produto com novas funcionalidades.  Qual dos\n    estilos arquitecturais \u00e9 melhor para analizar se a arquitectura de\n    software do sistema \u00e9 adequada para o lan\u00e7amento incremental das\n    v\u00e1rias vers\u00f5es?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o",
                    "O estilo Generaliza\u00e7\u00e3o",
                    "O estilo Utiliza\u00e7\u00e3o",
                    "O estilo SOA"
                ]
            },
            {
                "questionId": "Scalability",
                "content": "\n    V\u00e1rios dos casos estudados na cadeira tinham requisitos de\n    escalabilidade.  Isso significa que os sistemas em causa\n    devem ser constru\u00eddos de forma a\n\n    ",
                "image": [],
                "options": [
                    "Ter um elevado \\emph{throughput}",
                    "Ter uma lat\u00eancia baixa",
                    "Ter a capacidade de suportar muitos utilizadores em simult\u00e2neo",
                    "Poderem ser facilmente alterados para aumentar o seu desempenho"
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    No estilo arquitectural \\emph{Service Oriented Architecture} \u00e9\n    comum a exist\u00eancia de um componente especializado, designado por\n    \\emph{Enterprise Service Bus} (ESB).  A utiliza\u00e7\u00e3o de um ESB num\n    sistema tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Facilitar a interac\u00e7\u00e3o entre componentes heterog\u00e9neos que\n      utilizam protocolos de comunica\u00e7\u00e3o distintos",
                    "Promover a utiliza\u00e7\u00e3o de um protocolo de comunica\u00e7\u00e3o\n      comum para todos os restantes componentes do sistema",
                    "Aumentar o desempenho na interac\u00e7\u00e3o entre componentes do\n      sistema",
                    "Criar uma liga\u00e7\u00e3o forte entre os v\u00e1rios servi\u00e7os\n      disponibilizados na organiza\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "Availability",
                "content": "\n    Para satisfazer requisitos de disponibilidade existem diferentes\n    t\u00e1cticas, que podem ser aplicadas dependendo do tipo concreto de\n    requisito que pretendemos satisfazer.  Supondo que pretende\n    detectar faltas do tipo \\emph{resposta} no seu sistema, que\n    t\u00e1ctica \u00e9 mais adequada?\n\n    ",
                "image": [],
                "options": [
                    "A t\u00e1ctica \\emph{Ping/Echo}",
                    "A t\u00e1ctica \\emph{Heartbeat}",
                    "A t\u00e1ctica de \\emph{Voting}",
                    "A t\u00e1ctica de \\emph{Removal from Service}"
                ]
            },
            {
                "questionId": "ChromiumDecomposition",
                "content": "\n    A p\u00e1gina que descreve a arquitectura do Chromium OS (um projecto\n    \\emph{open source} para a implementa\u00e7\u00e3o de um novo sistema\n    operativo) come\u00e7a da seguinte forma:\n    \\begin{quote}\n      Chromium OS consists of three major components: \n      \\begin{itemize}\n      \\item The Chromium-based browser and the window manager\n      \\item System-level software and user-land services: the kernel, drivers, connection manager, and so on\n      \\item Firmware \n      \\end{itemize}\n    \\end{quote}\n\n    Tendo em conta esta breve descri\u00e7\u00e3o da arquitectura de software do\n    Chromium OS, que estilo arquitectural lhe parece mais adequado\n    para a representar?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "Um estilo qualquer do tipo de vista componente-e-conector",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})"
                ]
            },
            {
                "questionId": "Security",
                "content": "\n    Suponha que para satisfazer um requisito de seguran\u00e7a relacionado\n    com a possibilidade de ataques por parte de utilizadores que\n    acedem ao seu sistema pela Internet, pretende utilizar a t\u00e1ctica\n    designada por \\emph{Limit Exposure}.  Como \u00e9 que a utiliza\u00e7\u00e3o\n    dessa t\u00e1ctica se manifesta nas vistas da arquitectura do seu\n    sistema?\n\n    ",
                "image": [],
                "options": [
                    "Na vista de Instala\u00e7\u00e3o",
                    "Na vista de Decomposi\u00e7\u00e3o",
                    "Numa vista de componente-e-conector",
                    "Na vista de Aspectos"
                ]
            },
            {
                "questionId": "SkeletonSystem",
                "content": "\n    Uma das boas pr\u00e1ticas na concep\u00e7\u00e3o de uma arquitectura de software\n    \u00e9 a cria\u00e7\u00e3o de um sistema esqueleto.  Qual o seu objectivo?\n\n    ",
                "image": [],
                "options": [
                    "Criar uma camada de abstrac\u00e7\u00e3o entre a arquitectura do\n      sistema e as suas funcionalidades, de modo a poder-se alterar a\n      arquitectura mais tarde sem afectar as funcionalidades",
                    "Criar um artefacto que pode ser usado para explicar a\n      arquitectura de software do sistema aos v\u00e1rios \\emph{stakeholders}",
                    "Permitir testar e validar a arquitectura de software numa\n      fase inicial do desenvolvimento",
                    "Facilitar a atribui\u00e7\u00e3o de trabalho aos membros da equipa\n      de desenvolvimento que v\u00e3o implementar as funcionalidades do sistema"
                ]
            },
            {
                "questionId": "ArqEmailMTAIMAP",
                "content": "\n    O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n    desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um\n    email, um utilizador usa um \\emph{mail user agent} (MUA), para\n    compor a sua mensagem e envi\u00e1-la.  Para enviar a mensagem,\n    tipicamente o MUA liga-se a um \\emph{mail transfer agent} (MTA),\n    que recebe a mensagem, analisa os cabe\u00e7alhos da mesma para\n    determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do sistema DNS\n    para determinar quais os MTA respons\u00e1veis por cada um dos\n    destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n    destino para entregar a mensagem.  Cada um desses MTAs recebe a\n    mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n    que a mensagem chegue ao MTA do destino.  O utilizador\n    destinat\u00e1rio da mensagem ir\u00e1 depois usar o seu MUA para ver as\n    mensagens que lhe foram enviadas.  Para isso o MUA liga-se a um\n    servidor IMAP ou POP para obter as mensagens que lhe foram\n    destinadas.  Esses servidores IMAP e POP obt\u00eam as mensagens de um\n    utilizador consultando as mensagens armazenadas pelo MTA.\n\n    Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n    sistema de email, qual dos estilos arquitecturais lhe parece mais\n    adequada para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre o\n    MTA e os servidores de IMAP e POP?\n\n    ",
                "image": [],
                "options": [
                    "O estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo arquitectural Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n    O estilo arquitectural Aspectos (\\emph{Aspects}) foi mais\n    recentemente introduzido como um estilo do tipo de vista m\u00f3dulo.\n    A utiliza\u00e7\u00e3o deste estilo na arquitectura de software de um sistema\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o altera os m\u00f3dulos existentes no sistema, visto que\n      isso \u00e9 determinado pela Decomposi\u00e7\u00e3o do sistema, que n\u00e3o sofre\n      altera\u00e7\u00f5es",
                    "Cria restri\u00e7\u00f5es \u00e0s rela\u00e7\u00f5es de depend\u00eancia existentes\n      entre m\u00f3dulos e representadas noutros estilos, tal como o estilo\n      camadas",
                    "Tipicamente d\u00e1 origem \u00e0 cria\u00e7\u00e3o de mais m\u00f3dulos do que os\n      que existiriam se este estilo n\u00e3o fosse usado",
                    "Apenas introduz um novo tipo de rela\u00e7\u00e3o entre os m\u00f3dulos\n      j\u00e1 existentes no sistema, que resultam da aplica\u00e7\u00e3o dos outros\n      estilos do tipo de vista m\u00f3dulo"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2012/exam1/exame-20130109-companion-pt-b.tex",
        "quizTitle": "..-data-2012-exam1-exame-20130109-companion-pt-b",
        "questions": [
            {
                "questionId": "DomainLogicFenix",
                "content": "\n    A primeira arquitectura do sistema F\u00e9nix, correspondendo aos seus\n    primeiros anos de desenvolvimento, podia ser descrita como uma\n    arquitectura de tr\u00eas camadas, t\u00edpica de uma aplica\u00e7\u00e3o empresarial.\n    Uma dessas camadas era a camada de l\u00f3gica de dom\u00ednio (\\emph{Domain\n      Logic}).  Qual das seguintes afirma\u00e7\u00f5es melhor caracteriza a\n    arquitectura do F\u00e9nix no que diz respeito a essa camada?\n    \n    ",
                "image": [],
                "options": [
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Domain Model",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Transaction Script",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada seguindo\n      a abordagem do padr\u00e3o Service Layer",
                    "A camada de l\u00f3gica de dom\u00ednio era implementada como um\n      modelo de dom\u00ednio rico, em cima do qual existia uma camada de\n      servi\u00e7os fina"
                ]
            },
            {
                "questionId": "IncrementalReleases",
                "content": "\n    Para colocar um produto mais rapidamente no mercado, as empresas\n    de desenvolvimento de software est\u00e3o cada vez mais a usar uma\n    estrat\u00e9gia incremental de desenvolvimento, lan\u00e7ando periodicamente\n    novas vers\u00f5es do produto com novas funcionalidades.  Qual dos\n    estilos arquitecturais \u00e9 melhor para analizar se a arquitectura de\n    software do sistema \u00e9 adequada para o lan\u00e7amento incremental das\n    v\u00e1rias vers\u00f5es?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o",
                    "O estilo Generaliza\u00e7\u00e3o",
                    "O estilo Utiliza\u00e7\u00e3o",
                    "O estilo SOA"
                ]
            },
            {
                "questionId": "Scalability",
                "content": "\n    V\u00e1rios dos casos estudados na cadeira tinham requisitos de\n    escalabilidade.  Isso significa que os sistemas em causa\n    devem ser constru\u00eddos de forma a\n\n    ",
                "image": [],
                "options": [
                    "Ter um elevado \\emph{throughput}",
                    "Ter uma lat\u00eancia baixa",
                    "Ter a capacidade de suportar muitos utilizadores em simult\u00e2neo",
                    "Poderem ser facilmente alterados para aumentar o seu desempenho"
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    No estilo arquitectural \\emph{Service Oriented Architecture} \u00e9\n    comum a exist\u00eancia de um componente especializado, designado por\n    \\emph{Enterprise Service Bus} (ESB).  A utiliza\u00e7\u00e3o de um ESB num\n    sistema tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Facilitar a interac\u00e7\u00e3o entre componentes heterog\u00e9neos que\n      utilizam protocolos de comunica\u00e7\u00e3o distintos",
                    "Promover a utiliza\u00e7\u00e3o de um protocolo de comunica\u00e7\u00e3o\n      comum para todos os restantes componentes do sistema",
                    "Aumentar o desempenho na interac\u00e7\u00e3o entre componentes do\n      sistema",
                    "Criar uma liga\u00e7\u00e3o forte entre os v\u00e1rios servi\u00e7os\n      disponibilizados na organiza\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "Availability",
                "content": "\n    Para satisfazer requisitos de disponibilidade existem diferentes\n    t\u00e1cticas, que podem ser aplicadas dependendo do tipo concreto de\n    requisito que pretendemos satisfazer.  Supondo que pretende\n    detectar faltas do tipo \\emph{resposta} no seu sistema, que\n    t\u00e1ctica \u00e9 mais adequada?\n\n    ",
                "image": [],
                "options": [
                    "A t\u00e1ctica \\emph{Ping/Echo}",
                    "A t\u00e1ctica \\emph{Heartbeat}",
                    "A t\u00e1ctica de \\emph{Voting}",
                    "A t\u00e1ctica de \\emph{Removal from Service}"
                ]
            },
            {
                "questionId": "ChromiumDecomposition",
                "content": "\n    A p\u00e1gina que descreve a arquitectura do Chromium OS (um projecto\n    \\emph{open source} para a implementa\u00e7\u00e3o de um novo sistema\n    operativo) come\u00e7a da seguinte forma:\n    \\begin{quote}\n      Chromium OS consists of three major components: \n      \\begin{itemize}\n      \\item The Chromium-based browser and the window manager\n      \\item System-level software and user-land services: the kernel, drivers, connection manager, and so on\n      \\item Firmware \n      \\end{itemize}\n    \\end{quote}\n\n    Tendo em conta esta breve descri\u00e7\u00e3o da arquitectura de software do\n    Chromium OS, que estilo arquitectural lhe parece mais adequado\n    para a representar?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "Um estilo qualquer do tipo de vista componente-e-conector",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})"
                ]
            },
            {
                "questionId": "Security",
                "content": "\n    Suponha que para satisfazer um requisito de seguran\u00e7a relacionado\n    com a possibilidade de ataques por parte de utilizadores que\n    acedem ao seu sistema pela Internet, pretende utilizar a t\u00e1ctica\n    designada por \\emph{Limit Exposure}.  Como \u00e9 que a utiliza\u00e7\u00e3o\n    dessa t\u00e1ctica se manifesta nas vistas da arquitectura do seu\n    sistema?\n\n    ",
                "image": [],
                "options": [
                    "Na vista de Instala\u00e7\u00e3o",
                    "Na vista de Decomposi\u00e7\u00e3o",
                    "Numa vista de componente-e-conector",
                    "Na vista de Aspectos"
                ]
            },
            {
                "questionId": "SkeletonSystem",
                "content": "\n    Uma das boas pr\u00e1ticas na concep\u00e7\u00e3o de uma arquitectura de software\n    \u00e9 a cria\u00e7\u00e3o de um sistema esqueleto.  Qual o seu objectivo?\n\n    ",
                "image": [],
                "options": [
                    "Criar uma camada de abstrac\u00e7\u00e3o entre a arquitectura do\n      sistema e as suas funcionalidades, de modo a poder-se alterar a\n      arquitectura mais tarde sem afectar as funcionalidades",
                    "Criar um artefacto que pode ser usado para explicar a\n      arquitectura de software do sistema aos v\u00e1rios \\emph{stakeholders}",
                    "Permitir testar e validar a arquitectura de software numa\n      fase inicial do desenvolvimento",
                    "Facilitar a atribui\u00e7\u00e3o de trabalho aos membros da equipa\n      de desenvolvimento que v\u00e3o implementar as funcionalidades do sistema"
                ]
            },
            {
                "questionId": "ArqEmailMTAIMAP",
                "content": "\n    O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n    desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um\n    email, um utilizador usa um \\emph{mail user agent} (MUA), para\n    compor a sua mensagem e envi\u00e1-la.  Para enviar a mensagem,\n    tipicamente o MUA liga-se a um \\emph{mail transfer agent} (MTA),\n    que recebe a mensagem, analisa os cabe\u00e7alhos da mesma para\n    determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do sistema DNS\n    para determinar quais os MTA respons\u00e1veis por cada um dos\n    destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n    destino para entregar a mensagem.  Cada um desses MTAs recebe a\n    mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n    que a mensagem chegue ao MTA do destino.  O utilizador\n    destinat\u00e1rio da mensagem ir\u00e1 depois usar o seu MUA para ver as\n    mensagens que lhe foram enviadas.  Para isso o MUA liga-se a um\n    servidor IMAP ou POP para obter as mensagens que lhe foram\n    destinadas.  Esses servidores IMAP e POP obt\u00eam as mensagens de um\n    utilizador consultando as mensagens armazenadas pelo MTA.\n\n    Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n    sistema de email, qual dos estilos arquitecturais lhe parece mais\n    adequada para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre o\n    MTA e os servidores de IMAP e POP?\n\n    ",
                "image": [],
                "options": [
                    "O estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo arquitectural Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n    O estilo arquitectural Aspectos (\\emph{Aspects}) foi mais\n    recentemente introduzido como um estilo do tipo de vista m\u00f3dulo.\n    A utiliza\u00e7\u00e3o deste estilo na arquitectura de software de um sistema\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o altera os m\u00f3dulos existentes no sistema, visto que\n      isso \u00e9 determinado pela Decomposi\u00e7\u00e3o do sistema, que n\u00e3o sofre\n      altera\u00e7\u00f5es",
                    "Cria restri\u00e7\u00f5es \u00e0s rela\u00e7\u00f5es de depend\u00eancia existentes\n      entre m\u00f3dulos e representadas noutros estilos, tal como o estilo\n      camadas",
                    "Tipicamente d\u00e1 origem \u00e0 cria\u00e7\u00e3o de mais m\u00f3dulos do que os\n      que existiriam se este estilo n\u00e3o fosse usado",
                    "Apenas introduz um novo tipo de rela\u00e7\u00e3o entre os m\u00f3dulos\n      j\u00e1 existentes no sistema, que resultam da aplica\u00e7\u00e3o dos outros\n      estilos do tipo de vista m\u00f3dulo"
                ]
            },
            {
                "questionId": "ZeroMQApps",
                "content": "\n    Qual das seguintes frases melhor caracteriza o sistema ZeroMQ\n    \n    ",
                "image": [],
                "options": [
                    "\u00c9 um sistema com uma arquitectura Par-a-Par",
                    "\u00c9 um sistema com uma arquitectura Cliente-Servidor",
                    "Permite a implementa\u00e7\u00e3o de sistemas com uma arquitectura Par-a-Par",
                    "Permite a implementa\u00e7\u00e3o de sistemas com arquitecturas\n      Par-a-Par, Cliente-Servidor, ou Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "ZeroMQWorkersPerCore",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      The idea was to launch one worker thread per CPU core---having\n      two threads sharing the same core would only mean a lot of\n      context switching for no particular advantage.\n    \\end{quote}\n    Qual \u00e9 o estilo arquitectural mais adequado para representar esta\n    decis\u00e3o de desenho?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Tiers",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "O estilo Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})"
                ]
            },
            {
                "questionId": "ZeroMQMessagingPatterns",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      Messaging patterns form a layer (the so-called \"scalability\n      layer\") on top of the transport layer (TCP and friends).\n      Individual messaging patterns are implementations of this layer.\n    \\end{quote}\n    Qual \u00e9 a principal vantagem da adop\u00e7\u00e3o desta arquitectura de\n    camadas pelo ZeroMQ?\n\n    ",
                "image": [],
                "options": [
                    "Aumenta a portabilidade para outros sistemas operativos",
                    "Facilita a adi\u00e7\u00e3o de novos messaging patterns",
                    "Torna o sistema mais escal\u00e1vel",
                    "Facilita a reutiliza\u00e7\u00e3o dos messaging patterns"
                ]
            },
            {
                "questionId": "ZeroMQBatching",
                "content": "\n    O ZeroMQ usa \\emph{batching} din\u00e2mico para controlar o desempenho\n    do sistema.  A utiliza\u00e7\u00e3o desta abordagem tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Diminuir a lat\u00eancia do envio de uma mensagem quando o\n      sistema est\u00e1 sobrecarregado",
                    "Aumentar o \\emph{throughput} do sistema quando este est\u00e1\n      sobrecarregado",
                    "Diminuir a quantidade de mem\u00f3ria necess\u00e1ria para o envio\n      de um elevado n\u00famero de mensagens",
                    "Reduzir a utiliza\u00e7\u00e3o do processador quando o sistema tem\n      poucas mensagens para enviar"
                ]
            },
            {
                "questionId": "ZeroMQLockFree",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      \u00d8MQ uses a lock-free queue in pipe objects to pass messages\n      between the user's threads and \u00d8MQ's worker threads.  There are\n      two interesting aspects to how \u00d8MQ uses the lock-free queue.\n      First, each queue has exactly one writer thread and exactly one\n      reader thread.  If there's a need for 1-to-N communication,\n      multiple queues are created.  Given that this way the queue\n      doesn't have to take care of synchronising the writers (there's\n      only one writer) or readers (there's only one reader) it can be\n      implemented in an extra-efficient way.\n    \\end{quote}\n    O estilo arquitectural que melhor representa o padr\u00e3o de\n    interac\u00e7\u00e3o descrito acima \u00e9\n\n    ",
                "image": [],
                "options": [
                    "O estilo Canais-e-Filtros (\\emph{Pipe-and-Filter})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "nginxFirstAD",
                "content": "\n    O principal \\emph{architectural driver} para o sistema nginx foi\n\n    ",
                "image": [],
                "options": [
                    "Ter um \\emph{throughput} maior do que o Apache",
                    "Ter uma lat\u00eancia no processamento de um pedido\n      inferior \u00e0 do Apache",
                    "Ser mais facilmente modific\u00e1vel do que o Apache",
                    "Permitir um n\u00famero simult\u00e2neo de liga\u00e7\u00f5es maior do que o\n      Apache"
                ]
            },
            {
                "questionId": "nginxEventDriven",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      Traditional process- or thread-based models of handling\n      concurrent connections involve handling each connection with a\n      separate process or thread, and blocking on network or\n      input/output operations.  nginx followed a different model.  It\n      was actually inspired by the ongoing development of advanced\n      event-based mechanisms in a variety of operating systems.  What\n      resulted is a modular, event-driven, asynchronous,\n      single-threaded, non-blocking architecture which became the\n      foundation of nginx code.\n    \\end{quote}\n    A decis\u00e3o de fazer o nginx como um sistema \\emph{event-driven},\n    \\emph{asynchronous}, \\emph{single-threaded}, e \\emph{non-blocking}\n    foi porque\n\n    ",
                "image": [],
                "options": [
                    "O c\u00f3digo \u00e9 mais f\u00e1cil de desenvolver por n\u00e3o ser concorrente",
                    "Se pretendia fazer um uso mais eficiente dos recursos\n      computacionais existentes",
                    "Os programas \\emph{event-driven} s\u00e3o mais f\u00e1ceis de\n      modificar",
                    "Num sistema \\emph{event-driven} cada componente pode\n      funcionar independentemente dos restantes"
                ]
            },
            {
                "questionId": "nginxModuleTypes",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      nginx's modular architecture generally allows developers to\n      extend the set of web server features without modifying the\n      nginx core.  nginx modules come in slightly different\n      incarnations, namely core modules, event modules, phase\n      handlers, protocols, variable handlers, filters, upstreams and\n      load balancers.  [...]  Event modules provide a particular\n      OS-dependent event notification mechanism like kqueue or epoll.\n      Protocol modules allow nginx to communicate through HTTPS,\n      TLS/SSL, SMTP, POP3 and IMAP.\n    \\end{quote}\n    Que estilo arquitectural \u00e9 mais adequado para representar a\n    informa\u00e7\u00e3o acima?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Generaliza\u00e7\u00e3o",
                    "O estilo Utiliza\u00e7\u00e3o",
                    "O estilo Camadas",
                    "O estilo Aspectos"
                ]
            },
            {
                "questionId": "nginxProcessThread",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      Traditional process- or thread-based models of handling\n      concurrent connections involve handling each connection with a\n      separate process or thread, and blocking on network or\n      input/output operations.\n    \\end{quote}\n    O estilo arquitectural que melhor descreve o modelo descrito acima\n    para o processamento de pedidos \u00e9\n\t\n    ",
                "image": [],
                "options": [
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})",
                    "O estilo Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})"
                ]
            },
            {
                "questionId": "nginxOSOptimizations",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      While handling a variety of actions associated with accepting,\n      processing and managing network connections and content\n      retrieval, nginx uses event notification mechanisms and a number\n      of disk I/O performance enhancements in Linux, Solaris and\n      BSD-based operating systems, like kqueue, epoll, and event\n      ports.  The goal is to provide as many hints to the operating\n      system as possible, in regards to obtaining timely asynchronous\n      feedback for inbound and outbound traffic, disk operations,\n      reading from or writing to sockets, timeouts and so on.\n    \\end{quote}\n    Esta abordagem usada no desenvolvimento do nginx tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Tornar o sistema mais facilmente modific\u00e1vel",
                    "Tornar o sistema mais port\u00e1vel para diferentes sistemas operativos",
                    "Tornar o sistema mais r\u00e1pido",
                    "Tornar o sistema mais tolerante a faltas"
                ]
            },
            {
                "questionId": "GHCStakeholders",
                "content": "\n    Dois dos \\emph{stakeholders} identificados para o \\ghc{} foram o\n    governo do Reino Unido e os investigadores que pretendem fazer\n    investiga\u00e7\u00e3o em linguagens de programa\u00e7\u00e3o funcionais.  Qual destes\n    \\emph{stakeholders} teve uma maior influ\u00eancia na arquitectura de\n    software do sistema?\n\n    ",
                "image": [],
                "options": [
                    "O governo do Reino Unido, porque foi quem financiou o\n      projecto",
                    "Os investigadores, porque foram eles que inventaram a\n      linguagem de programa\u00e7\u00e3o Haskell",
                    "O governo do Reino Unido, porque pretendia que o sistema\n      pudesse ser usado para desenvolver a ind\u00fastria de software Brit\u00e2nica",
                    "Os investigadores, porque pretendiam usar o sistema para\n      validar as suas inven\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "GHCChunks",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      At the highest level, GHC can be divided into three distinct\n      chunks:\n      \\begin{itemize}\n      \\item The compiler itself.\n      \\item The Boot Libraries.\n      \\item The Runtime System (RTS). \n      \\end{itemize}\n    \\end{quote}\n    Qual a forma mais correcta de caracterizar arquitecturalmente os\n    tr\u00eas \\emph{chunks} a que este texto se refere?\n\n     ",
                "image": [],
                "options": [
                    "Como m\u00f3dulos do sistema",
                    "Como componentes do sistema",
                    "O compilador e o RTS como componentes e as \\emph{boot\n         libraries} como m\u00f3dulo",
                    "O compilador como componente e os outros dois como m\u00f3dulos"
                ]
            },
            {
                "questionId": "GHCDesugaring",
                "content": "\n    Uma das decis\u00f5es importantes no desenvolvimento do \\ghc{} foi a de\n    se fazer a verifica\u00e7\u00e3o de tipos antes da transforma\u00e7\u00e3o de um\n    programa em Haskell para um programa na linguagem Core\n    (\\emph{type-check-before-desugar}).  Esta decis\u00e3o de desenho\n\n    ",
                "image": [],
                "options": [
                    "Tornou a verifica\u00e7\u00e3o de tipos muito mais simples",
                    "Permitiu satisfazer requisitos de desempenho do sistema",
                    "Tornou a transforma\u00e7\u00e3o para a linguagem Core mais simples",
                    "Permitiu satisfazer requisitos de usabilidade do sistema"
                ]
            },
            {
                "questionId": "GHCRTS",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      The Runtime System is a library of mostly C code that is linked\n      into every Haskell program. It provides the support\n      infrastructure needed for running the compiled Haskell code,\n      including the following main components:\n      \\begin{itemize}\n      \\item Memory management, including a parallel, generational, garbage collector;\n      \\item Thread management and scheduling;\n      \\item The primitive operations provided by GHC;\n      \\item A bytecode interpreter and dynamic linker for GHCi.\n      \\end{itemize}\n    \\end{quote}\n    Que qualidades do sistema s\u00e3o melhoradas pela decis\u00e3o de criar\n    o \\emph{Runtime System} indicado acima?\n\n    ",
                "image": [],
                "options": [
                    "O desempenho do compilador, porque o RTS est\u00e1 escrito de\n      forma muito eficiente em C",
                    "O desempenho dos programas compilados, porque o RTS est\u00e1\n      escrito de forma muito eficiente em C",
                    "A portabilidade, porque o RTS cria uma camada de\n      abstrac\u00e7\u00e3o que esconde alguns detalhes do sistema operativo",
                    "A modificabilidade dos programas compilados, porque se\n      pode alterar o seu comportamento alterando apenas o RTS"
                ]
            },
            {
                "questionId": "GHCPipeAndFilter",
                "content": "\n    Tal como muitos outros compiladores, a compila\u00e7\u00e3o de um programa\n    Haskell com o \\ghc{} utiliza o estilo \\emph{pipe-and-filter},\n    criando um \\emph{pipeline} composto por v\u00e1rias fases de\n    compila\u00e7\u00e3o.  A utiliza\u00e7\u00e3o deste estilo arquitectural no GHC tem\n    como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Permitir a execu\u00e7\u00e3o em paralelo das v\u00e1rias fases de\n      compila\u00e7\u00e3o, melhorando assim o desempenho do compilador",
                    "Permitir a compila\u00e7\u00e3o de programas muito grandes, porque\n      cada fase pode executar de forma incremental sem ser necess\u00e1rio\n      ter o programa todo em mem\u00f3ria ao mesmo tempo",
                    "Permitir a f\u00e1cil altera\u00e7\u00e3o das fases de compila\u00e7\u00e3o que se\n      usam no processo de compila\u00e7\u00e3o, tornando assim o compilador mais\n      modific\u00e1vel",
                    "Todas as outras op\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "WebPartioning",
                "content": "\n    No documento que descreve a arquitectura de um servi\u00e7o web (em\n    anexo), uma das abordagens introduzidas na Sec\u00e7\u00e3o~1.2 \u00e9 a de\n    \\emph{partitioning}, ilustrada na Figura~1.4.  A utiliza\u00e7\u00e3o de\n    \\emph{partitioning} faz com que\n\n    ",
                "image": [],
                "options": [
                    "A disponibilidade aumente",
                    "A capacidade aumente",
                    "A capacidade aumente mas a disponibilidade diminua",
                    "A disponibilidade e a capacidade aumentem"
                ]
            },
            {
                "questionId": "WebPartitioningDois",
                "content": "\n    Considerando ainda o caso da pergunta anterior, compare as\n    arquitecturas esbo\u00e7adas nas Figura~1.3 e Figura~1.4.  A diferen\u00e7a\n    entre as duas arquitecturas manifesta-se\n\n    ",
                "image": [],
                "options": [
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment}), porque\n      apenas se altera o n\u00famero de m\u00e1quinas que v\u00e3o conter as imagens",
                    "Na vista de Utiliza\u00e7\u00e3o (\\emph{Uses}), porque cada\n      \\emph{Image Write/Retrieval Service} vai usar um \\emph{Image\n        File Storage} diferente",
                    "Na vista de Componente-e-Conector, porque \u00e9 preciso\n      alterar os componentes e os conectores do sistema",
                    "Na vista de Decomposi\u00e7\u00e3o, porque precisamos de mais\n      m\u00f3dulos para representar a divis\u00e3o das imagens por diferentes\n      elementos da arquitectura"
                ]
            },
            {
                "questionId": "WebRedundancy",
                "content": "\n    Considere a arquitectura apresentada na Figura~1.3 do caso das\n    perguntas anteriores, em que se introduziu redund\u00e2ncia no sistema.\n    Neste caso particular, a introdu\u00e7\u00e3o de redund\u00e2ncia na arquitectura\n    tem como objectivo\n\n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho da opera\u00e7\u00e3o de \\emph{Upload} de uma\n    imagem",
                    "Aumentar o desempenho da opera\u00e7\u00e3o de pesquisa de uma imagem",
                    "Aumentar a escalabilidade do sistema",
                    "Aumentar a toler\u00e2ncia a faltas do sistema"
                ]
            },
            {
                "questionId": "ThreeVsFourTiers",
                "content": "\n    A arquitectura de software t\u00edpica de uma aplica\u00e7\u00e3o empresarial \u00e9\n    composta por tr\u00eas \\emph{tiers} e por tr\u00eas camadas.  No entanto,\n    podemos ter varia\u00e7\u00f5es a esta arquitectura.  Por exemplo, separando\n    o \\emph{tier} do meio em dois \\emph{tiers}.  Neste caso, que\n    altera\u00e7\u00f5es \u00e9 que existem ao n\u00edvel da arquitectura de camadas?\n\n    ",
                "image": [],
                "options": [
                    "Passamos a ter quatro camadas, em que cada camada \u00e9\n      executada no \\emph{tier} correspondente, como anteriormente",
                    "Cada um dos dois \\emph{tiers} do meio executa as tr\u00eas\n      camadas j\u00e1 existentes anteriormente, n\u00e3o sendo necess\u00e1rio\n      alterar a vista de camadas",
                    "N\u00e3o existe qualquer rela\u00e7\u00e3o entre os \\emph{tiers} e as\n      camadas, pelo que a arquitectura de camadas n\u00e3o \u00e9 alterada",
                    "A execu\u00e7\u00e3o das camadas anteriormente existente \u00e9 separada\n      entre os dois novos \\emph{tiers}, podendo aparecer novas camadas\n      pelo meio"
                ]
            },
            {
                "questionId": "WebLoadBalancer",
                "content": "\n    No documento que descreve a arquitectura de servi\u00e7os web pode\n    ler-se o seguinte:\n    \\begin{quote}\n      Another critical piece of any distributed system is a load\n      balancer.  Load balancers are a principal part of any\n      architecture, as their role is to distribute load across a set\n      of nodes responsible for servicing requests.  This allows\n      multiple nodes to transparently service the same function in a\n      system.  Their main purpose is to handle a lot of simultaneous\n      connections and route those connections to one of the request\n      nodes, allowing the system to scale to service more requests by\n      just adding nodes.\n    \\end{quote}\n    Com base na descri\u00e7\u00e3o acima, qual lhe parece ser a melhor forma de\n    representar a arquitectura de um sistema que esteja a usar um\n    \\emph{load balancer}?\n\n    ",
                "image": [],
                "options": [
                    "Com uma vista de componente-e-conector, em que o\n      \\emph{load balancer} \u00e9 um dos componentes do sistema",
                    "Com uma vista de Instala\u00e7\u00e3o (\\emph{Deployment}), em que o\n      \\emph{load balancer} faz parte da infra-estrutura de comunica\u00e7\u00e3o\n      usada para executar o sistema",
                    "Com uma vista de Utiliza\u00e7\u00e3o (\\emph{Uses}), representando\n      as depend\u00eancias existentes entre o \\emph{load balancer} e os\n      servi\u00e7os que ele usa",
                    "Com uma vista de Camadas (\\emph{Layers}), em que o\n      \\emph{load balancer} cria uma camada de abstrac\u00e7\u00e3o entre quem\n      efectua o pedido e quem providencia o servi\u00e7o"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2012/exam2/exame-20130201-companion-pt-a.tex",
        "quizTitle": "..-data-2012-exam2-exame-20130201-companion-pt-a",
        "questions": [
            {
                "questionId": "GHCBlockLayer",
                "content": "\n    O documento que descreve o \\ghc{} apresenta duas decis\u00f5es de\n    desenho relativamente ao desenvolvimento do \\emph{Runtime System}.\n    A primeira dessas decis\u00f5es \u00e9 descrita da seguinte forma:\n    \\begin{quote}\n      The garbage collector is built on top of a block layer that\n      manages memory in units of blocks, where a block is a multiple\n      of 4 KB in size. The block layer has a very simple API: [...].\n      This is the only API used by the garbage collector for\n      allocating and deallocating memory.  Blocks of memory are\n      allocated with \\texttt{allocGroup} and freed with\n      \\texttt{freeGroup}.\n    \\end{quote}\n    Que estilo arquitectural lhe parece mais adequado para representar\n    esta decis\u00e3o de desenho?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "GHCBlockLayerQualities",
                "content": "\n    Qual foi o principal objectivo dos autores do GHC ao tomar a\n    decis\u00e3o de desenho descrita na pergunta anterior?\n    \n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho do RTS",
                    "Permitir mudar o algoritmo de GC sem afectar o resto do sistema",
                    "Aumentar o desempenho dos programas que s\u00e3o compilados\n      pelo GHC",
                    "Tornar o RTS mais facilmente port\u00e1vel para outros\n      sistemas operativos"
                ]
            },
            {
                "questionId": "GHCRewriteRules",
                "content": "\n    Alguns dos \\emph{architectural drivers} do \\ghc{} est\u00e3o\n    relacionados com a extensibilidade do sistema, e uma das solu\u00e7\u00f5es\n    adoptadas pelos autores do GHC para providenciar essa\n    extensibilidade foi a introdu\u00e7\u00e3o de \\emph{user-defined rewrite\n      rules}, descrita no documento da seguinte forma:\n    \\begin{quote}\n      The core of GHC is a long sequence of optimisation passes, each\n      of which performs some semantics-preserving transformation,\n      \\texttt{Core} into \\texttt{Core}.  But the author of a library\n      defines functions that often have some non-trivial,\n      domain-specific transformations of their own, ones that cannot\n      possibly be predicted by GHC.  So GHC allows library authors to\n      define rewrite rules that are used to rewrite the program during\n      optimisation.  In this way, programmers can, in effect, extend\n      GHC with domain-specific optimisations.\n    \\end{quote}\n    Como \u00e9 que esta solu\u00e7\u00e3o se manifesta ao n\u00edvel da arquitectura do\n    sistema?\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o se manifesta, visto que isso corresponde apenas a\n      mais uma extens\u00e3o \u00e0 linguagem Haskell que o compilador tem que\n      processar",
                    "Na exist\u00eancia de um componente do compilador que \u00e9\n      respons\u00e1vel por interpretar e aplicar as \\emph{rewrite rules}\n      durante a compila\u00e7\u00e3o de um programa",
                    "Numa vista do estilo Generaliza\u00e7\u00e3o que inclui um m\u00f3dulo\n      que define a interface abstracta que todas as \\emph{rewrite\n        rules} devem implementar e do qual os m\u00f3dulos com as\n      \\emph{rewrite rules} s\u00e3o especializa\u00e7\u00f5es",
                    "Numa vista do estilo Canais-e-filtros, correspondendo ao\n      processo de compila\u00e7\u00e3o de um programa Haskell, em que se\n      adiciona um novo filtro sempre que uma nova \\emph{rewrite rule}\n      \u00e9 definida"
                ]
            },
            {
                "questionId": "GHCAsLibrary",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      As the popularity of the Haskell language has grown, there has\n      been an increasing need for tools and infrastructure that\n      understand Haskell source code, and GHC of course contains a lot\n      of the functionality necessary for building these tools: a\n      Haskell parser, abstract syntax, type checker and so on.  With\n      this in mind, we made a simple change to GHC: rather than\n      building GHC as a monolithic program, we build GHC as a library,\n      that is then linked with a small Main module to make the GHC\n      executable itself, but also shipped in library form so that\n      users can call it from their own programs.  At the same time we\n      built an API to expose GHC's functionality to clients.\n    \\end{quote}\n    Supondo que quer apresentar um diagrama arquitectural para\n    representar a descri\u00e7\u00e3o apresentada acima, qual lhe parece mais\n    adequado?\n    \n    ",
                "image": [],
                "options": [
                    "Um diagrama do tipo de vista componente-e-conector",
                    "Um diagrama do tipo de vista m\u00f3dulo",
                    "Um diagrama do estilo Instala\u00e7\u00e3o (\\emph{deployment})",
                    "Um diagrama do estilo Implementa\u00e7\u00e3o (\\emph{Implementation})"
                ]
            },
            {
                "questionId": "GHCCodeGeneration",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      Once the \\texttt{Core} program has been optimised, the process\n      of code generation begins.  The code generator first converts\n      the \\texttt{Core} into a language called \\texttt{STG}, which is\n      essentially just \\texttt{Core} annotated with more information\n      required by the code generator.  Then, \\texttt{STG} is\n      translated to \\texttt{Cmm}, a low-level imperative language with\n      an explicit stack.  From here, the code takes one of three\n      routes:\n      \\begin{itemize}\n      \\item Native code generation: [...]\n      \\item LLVM code generation: [...]\n      \\item C code generation: [...]\n      \\end{itemize}\n    \\end{quote}\n    Ou seja, o GHC pode usar um de tr\u00eas geradores de c\u00f3digo\n    alternativos, que t\u00eam qualidades diferentes (omitidas no excerto\n    apresentado acima).  Supondo que quer apresentar um diagrama\n    arquitectural para representar a descri\u00e7\u00e3o apresentada acima, qual\n    lhe parece mais adequado?\n\n    ",
                "image": [],
                "options": [
                    "Um diagrama do tipo de vista componente-e-conector, onde\n      se mostre o fluxo de dados entre os v\u00e1rios componentes do\n      compilador",
                    "Um diagrama do tipo de vista m\u00f3dulo, onde se mostre a\n      decomposi\u00e7\u00e3o do compilador nos v\u00e1rios m\u00f3dulos que s\u00e3o\n      respons\u00e1veis por cada uma das etapas do processo de compila\u00e7\u00e3o",
                    "Um diagrama do tipo de vista m\u00f3dulo, onde se mostre que\n      m\u00f3dulos usam que outros m\u00f3dulos",
                    "Um diagrama de camadas, onde exista uma camada\n      respons\u00e1vel pela gera\u00e7\u00e3o do c\u00f3digo"
                ]
            },
            {
                "questionId": "ZeroMQScaleMulticore",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      One of the requirements for \u00d8MQ was to take advantage of\n      multi-core boxes; in other words, to scale the throughput\n      linearly with the number of available CPU cores.\n    \\end{quote}\n    Para satisfazer este requisito, a solu\u00e7\u00e3o adoptada pelo ZeroMQ foi\n\n    ",
                "image": [],
                "options": [
                    "Processar todos os pedidos de envio de mensagens com uma\n      \u00fanica \\emph{thread}, para libertar os restantes cores para as\n      \\emph{user threads}",
                    "Lan\u00e7ar uma \\emph{worker thread} por cada \\emph{user\n        thread} para garantir que cada \\emph{user thread} pode enviar\n      mensagens independentemente do que as outras estejam a fazer",
                    "Lan\u00e7ar uma \\emph{worker thread} por cada core, para\n      maximizar a utiliza\u00e7\u00e3o dos cores e minimizar a necessidade de\n      sincroniza\u00e7\u00e3o entre \\emph{threads}",
                    "Lan\u00e7ar uma \\emph{worker thread} para processar o envio de\n      uma nova mensagem, para garantir o m\u00e1ximo de paralelismo no\n      envio de mensagens"
                ]
            },
            {
                "questionId": "ZeroMQBroker",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      It took us several years working on AMQP protocol [...] to\n      realise that there's something wrong with the classic\n      client/server model of smart messaging server (broker) and dumb\n      messaging clients.\n    \\end{quote}\n    Qual \u00e9 o principal problema, segundo os autores, do modelo baseado\n    num \\emph{broker}?\n    \n    ",
                "image": [],
                "options": [
                    "\u00c9 menos robusto, porque uma falta no \\emph{broker} causa\n      uma falha no sistema",
                    "\u00c9 menos modific\u00e1vel, porque todos os componentes dependem\n      do \\emph{broker}",
                    "Tem menor desempenho, porque a exist\u00eancia do\n      \\emph{broker} introduz maior lat\u00eancia na comunica\u00e7\u00e3o",
                    "\u00c9 mais caro, porque obriga \u00e0 exist\u00eancia de\n      \\emph{hardware} adicional para executar o \\emph{broker}"
                ]
            },
            {
                "questionId": "ZeroMQAsLibrary",
                "content": "\n    Sabendo que no documento que descreve o ZeroMQ se encontra a\n    seguinte afirma\u00e7\u00e3o:\n    \\begin{quote}\n      \u00d8MQ is a library, not a messaging server.\n    \\end{quote}\n    Que tipo de vistas s\u00e3o necess\u00e1rias para descrever a arquitectura\n    de software do ZeroMQ?\n\n    ",
                "image": [],
                "options": [
                    "Apenas vistas do tipo m\u00f3dulo",
                    "Apenas vistas do tipo componente-e-conector",
                    "Apenas vistas do tipo afecta\u00e7\u00e3o",
                    "Vistas do tipo m\u00f3dulo e componente-e-conector"
                ]
            },
            {
                "questionId": "ZeroMQExtensibleEngines",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      The objects that handle data transfer are composed of two parts:\n      the session object is responsible for interacting with the \u00d8MQ\n      socket, and the engine object is responsible for communication\n      with the network.  There's only one kind of the session object,\n      but there's a different engine type for each underlying protocol\n      \u00d8MQ supports.  Thus, we have TCP engines, IPC engines, PGM\n      engines, etc.  The set of engines is extensible---in the future\n      we may choose to implement, say, a WebSocket engine or an SCTP\n      engine.\n    \\end{quote}\n    Supondo que o c\u00f3digo que implementa o \\emph{session object} n\u00e3o\n    precisa ser modificado quando um novo tipo de \\emph{engine} \u00e9\n    adicionado ao sistema, que vistas arquitecturais s\u00e3o mais\n    indicadas para mostrar este aspecto de extensibilidade do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do estilo Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Vistas do estilo Camadas (\\emph{Layers})",
                    "Vistas do estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Vistas do estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "ZeroMQBSDSockets",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      In early versions of \u00d8MQ the API was based on AMQP's model of\n      exchanges and queues.  I spent the end of 2009 rewriting it\n      almost from scratch to use the BSD Socket API instead.\n    \\end{quote}\n    Esta mudan\u00e7a no sistema teve como objectivo satisfazer que tipo de\n    requisitos?\n\n    ",
                "image": [],
                "options": [
                    "Usabilidade",
                    "Modificabilidade",
                    "Desempenho",
                    "Seguran\u00e7a"
                ]
            },
            {
                "questionId": "nginxProcesses",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      nginx runs several processes in memory; there is a single master\n      process and several worker processes.  There are also a couple\n      of special purpose processes, specifically a cache loader and\n      cache manager.  All processes are single-threaded in version 1.x\n      of nginx.  All processes primarily use shared-memory mechanisms\n      for inter-process communication.\n    \\end{quote}\n    Supondo que pretende dar \u00eanfase \u00e0 forma como os v\u00e1rios processos\n    do nginx comunicam entre si, que estilo arquitectural lhe parece\n    mais adequado para representar a informa\u00e7\u00e3o acima?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-Subscribe})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "nginxCaching",
                "content": "\n    Na continua\u00e7\u00e3o da descri\u00e7\u00e3o apresentada na pergunta anterior, mais\n    abaixo no documento pode ler-se o seguinte:\n    \\begin{quote}\n      Caching in nginx is implemented in the form of hierarchical data\n      storage on a filesystem.  Cache keys are configurable, and\n      different request-specific parameters can be used to control\n      what gets into the cache.  Cache keys and cache metadata are\n      stored in the shared memory segments, which the cache loader,\n      cache manager and workers can access.\n    \\end{quote}\n    Que estilo arquitectural lhe parece mais adequado para representar\n    a utiliza\u00e7\u00e3o da \\emph{cache} no nginx?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "nginxWorkers",
                "content": "\n    Tal como mencionado nas perguntas anteriores, a utiliza\u00e7\u00e3o de\n    \\emph{workers} \u00e9 um dos elementos cruciais na arquitectura de\n    software do nginx.  Qual das seguintes afirma\u00e7\u00f5es melhor descreve\n    o funcionamento dos \\emph{workers} no nginx?\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 criado um \\emph{worker} de cada vez que \u00e9 estabelecida\n      uma nova liga\u00e7\u00e3o ao servidor, e esse \\emph{worker} processa\n      todos os pedidos dessa liga\u00e7\u00e3o, sendo destru\u00eddo no fim da liga\u00e7\u00e3o",
                    "Existe uma \\emph{pool} de \\emph{workers} que s\u00e3o\n      reutilizados entre liga\u00e7\u00f5es, mas cada \\emph{worker} apenas\n      processa pedidos de uma liga\u00e7\u00e3o de cada vez",
                    "Cada \\emph{worker} \u00e9 respons\u00e1vel por v\u00e1rias liga\u00e7\u00f5es,\n      processando todos os pedidos dessas liga\u00e7\u00f5es",
                    "Cada \\emph{worker} processa pedidos que obt\u00e9m de uma\n      \\emph{pool de pedidos} partilhada por todos os \\emph{workers}"
                ]
            },
            {
                "questionId": "nginxWorkerParallel",
                "content": "\n    Uma vez que um \\emph{worker} processa v\u00e1rios pedidos ao longo da\n    sua vida, como \u00e9 que o faz?\n\t\n    ",
                "image": [],
                "options": [
                    "Intercalando as v\u00e1rias fases do processamento de cada\n      pedido num processo sequencial",
                    "Executando em paralelo cada fase do pipeline do\n      processamento de um pedido",
                    "Executando em paralelo o processamento de v\u00e1rios pedidos",
                    "Processando completamente cada pedido antes de passar\n      para o pr\u00f3ximo, num processo sequencial"
                ]
            },
            {
                "questionId": "nginxCTenKProblem",
                "content": "\n    O principal \\emph{architectural driver} para o sistema nginx foi\n    conseguir resolver o \\emph{problema C10K}: conseguir manter 10.000\n    liga\u00e7\u00f5es simult\u00e2neas num \u00fanico servidor a executar em\n    \\emph{hardware} convencional.  Para isso acontecer, foi preciso\n    que o nginx\n\n    ",
                "image": [],
                "options": [
                    "Tivesse um \\emph{throughput} maior do que o Apache",
                    "Conseguisse processar cada pedido mais rapidamente do que\n      o Apache",
                    "Conseguisse lan\u00e7ar mais \\emph{threads} simult\u00e2neas do que\n      o Apache",
                    "Conseguisse reduzir a quantidade de mem\u00f3ria necess\u00e1ria\n      para cada liga\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "WebCacheModule",
                "content": "\n    Considere a figura 1.8 no documento que descreve a utiliza\u00e7\u00e3o de\n    caches em servi\u00e7os web (em anexo).  Nessa figura, aparece um\n    rect\u00e2ngulo com a designa\u00e7\u00e3o \\emph{Cache} dentro de um rect\u00e2ngulo\n    designado \\emph{Request Node}.  Tendo em conta a descri\u00e7\u00e3o feita\n    no texto e o objectivo dessa figura, esses rect\u00e2ngulos\n    correspondem a que tipo de elementos de software na arquitectura\n    de software apresentada?\n\n    ",
                "image": [],
                "options": [
                    "S\u00e3o ambos m\u00f3dulos",
                    "S\u00e3o ambos componentes",
                    "O \\emph{Request Node} \u00e9 um componente e a \\emph{Cache} \u00e9\n      um m\u00f3dulo",
                    "O \\emph{Request Node} \u00e9 um m\u00f3dulo e a \\emph{Cache} \u00e9 um\n      componente"
                ]
            },
            {
                "questionId": "WebCacheGlobal",
                "content": "\n    Considere a altera\u00e7\u00e3o na arquitectura introduzida com a passagem\n    da figura 1.9 para a figura 1.10 no documento que descreve a\n    utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo).  Essa altera\u00e7\u00e3o\n    tem como objectivo e consequ\u00eancia, respectivamente\n\n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho e a disponibilidade",
                    "Aumentar a disponibilidade e diminuir o desempenho",
                    "Aumentar o desempenho e diminuir a disponibilidade",
                    "Aumentar a escalabilidade e a disponibilidade"
                ]
            },
            {
                "questionId": "WebDistributedCache",
                "content": "\n    Considere o par\u00e1grafo assinalado com o n\u00famero 1 no documento que\n    descreve a utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo), onde\n    se introduz o conceito de \\emph{distributed cache}.  Que estilo\n    arquitectural melhor representa o padr\u00e3o de interac\u00e7\u00e3o existente\n    entre os v\u00e1rios \\emph{request nodes}?\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "WebMissingCacheNode",
                "content": "\n    Considere o par\u00e1grafo assinalado com o n\u00famero 2 no documento que\n    descreve a utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo), onde\n    se fala sobre a falha de um dos n\u00f3s da \\emph{cache} distribu\u00edda.\n    Quando isso acontece, que consequ\u00eancias existem para o servi\u00e7o\n    web?\n\n    ",
                "image": [],
                "options": [
                    "O desempenho do sistema diminui",
                    "A disponibilidade dos dados do sistema diminui",
                    "A disponibilidade dos servi\u00e7os do sistema diminui",
                    "O sistema n\u00e3o \u00e9 afectado de forma nenhuma"
                ]
            },
            {
                "questionId": "DomainLogicFenix",
                "content": "\n    Uma das principais mudan\u00e7as introduzidas na arquitectura do\n    sistema F\u00e9nix, relativamente \u00e0 sua primeira arquitectura foi\n    \n    ",
                "image": [],
                "options": [
                    "Passar a usar o padr\u00e3o Transaction Script na camada de l\u00f3gica de dom\u00ednio",
                    "Passar a usar o padr\u00e3o Service Layer numa nova camada",
                    "Passar de um modelo de dom\u00ednio an\u00e9mico para um modelo de\n      dom\u00ednio rico",
                    "Eliminar a camada de servi\u00e7os"
                ]
            },
            {
                "questionId": "Performance",
                "content": "\n    V\u00e1rios dos casos estudados na cadeira tinham requisitos de\n    desempenho.  Que vistas arquitecturais s\u00e3o normalmente necess\u00e1rias\n    para mostrar a satisfa\u00e7\u00e3o desses requisitos?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do tipo m\u00f3dulo",
                    "Vistas do tipo componente-e-conector",
                    "Vistas do tipo afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Vistas do tipo componente-e-conector e afecta\u00e7\u00e3o (\\emph{Allocation})"
                ]
            },
            {
                "questionId": "MemcachedModules",
                "content": "\n    Considere a seguinte descri\u00e7\u00e3o do \\emph{Memcached}, que \u00e9 uma\n    adapta\u00e7\u00e3o do que aparece no seu Wiki:\n    \\begin{quote}\n      Memcached is an in-memory key-value store for small chunks of\n      arbitrary data from results of database calls, API calls, or\n      page rendering.  It is made up of:\n      \\begin{itemize}\n      \\item Client software, which is given a list of available memcached servers.\n      \\item A client-based hashing algorithm, which chooses a server\n        based on the \"key\" input.\n      \\item Server software, which stores your values with their keys\n        into an internal hash table.\n      \\item Server algorithms, which determine when to throw out old\n        data (if out of memory), or reuse memory.\n      \\end{itemize}\n    \\end{quote}\n    Suponha que pretendia apresentar uma vista arquitectural para o\n    \\emph{Memcached} que represente a informa\u00e7\u00e3o acima.  Que vista \u00e9\n    mais adequada?\n\n    ",
                "image": [],
                "options": [
                    "Uma vista do estilo \\emph{Data Model}",
                    "Uma vista do estilo Camadas (\\emph{Layers})",
                    "Uma vista do estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Uma vista do estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "Subcontractors",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma arquitectura de software para\n    um novo sistema de grandes dimens\u00f5es e que no desenvolvimento se\n    pretende recorrer extensivamente a empresas subcontratadas para o\n    desenvolvimento de v\u00e1rias partes do sistema.  Que estilos\n    arquitecturais s\u00e3o mais \u00fateis para planear o desenvolvimento do\n    sistema neste cen\u00e1rio?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Camadas (\\emph{Layers})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo SOA"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n    A utiliza\u00e7\u00e3o do estilo arquitectural Aspectos (\\emph{Aspects})\n    promove a modificabilidade de um sistema porque\n\n    ",
                "image": [],
                "options": [
                    "Estabelece restri\u00e7\u00f5es \u00e0s rela\u00e7\u00f5es de utiliza\u00e7\u00e3o\n      (\\emph{uses}) que podem existir entre os m\u00f3dulos do sistema",
                    "Facilita a cria\u00e7\u00e3o de rela\u00e7\u00f5es de generaliza\u00e7\u00e3o\n      (\\emph{Generalization}) entre os m\u00f3dulos do sistema",
                    "Isola em novos m\u00f3dulos responsabilidades que se\n      encontravam espalhadas por v\u00e1rios m\u00f3dulos do sistema",
                    "Permite decompor cada m\u00f3dulo do sistema em m\u00f3dulos de\n      gr\u00e3o mais fino"
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    Suponha que est\u00e1 a desenvolver a arquitectura de software de um\n    novo sistema para uma organiza\u00e7\u00e3o que tem v\u00e1rias unidades\n    organizacionais, cada uma das quais com os seus sistemas de\n    informa\u00e7\u00e3o, que foram desenvolvidos independentemente uns dos\n    outros ao longo de v\u00e1rios anos e dependendo das necessidades\n    particulares de cada unidade.  O seu sistema tem como objectivo\n    integrar os v\u00e1rios sistemas existentes, providenciando desta forma\n    n\u00e3o s\u00f3 uma vis\u00e3o consolidada do funcionamento da organiza\u00e7\u00e3o, mas\n    tamb\u00e9m permitir a cria\u00e7\u00e3o de novos processos dentro da organiza\u00e7\u00e3o\n    que envolvam mais do que uma unidade.  Que estilo arquitectural\n    lhe parece mais adequado para desenhar o seu sistema?\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo SOA (\\emph{Service Oriented Architecture})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "Availability",
                "content": "\n    Suponha que para satisfazer um requisito de disponibilidade\n    relacionado com a exist\u00eancia de faltas ao n\u00edvel da infraestrutura\n    de rede usada pelo seu sistema, pretende utilizar a t\u00e1ctica\n    designada por \\emph{Ping/Echo}.  Como \u00e9 que a utiliza\u00e7\u00e3o dessa\n    t\u00e1ctica se manifesta nas vistas da arquitectura do seu sistema?\n\n    ",
                "image": [],
                "options": [
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "Apenas na vista de Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Apenas numa vista de componente-e-conector",
                    "Numa vista de componente-e-conector e numa vista de\n      Instala\u00e7\u00e3o (\\emph{Deployment})"
                ]
            },
            {
                "questionId": "Security",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma aplica\u00e7\u00e3o web que mant\u00e9m numa\n    base de dados alguma informa\u00e7\u00e3o introduzida pelos utilizadores, e\n    que um dos requisitos \u00e9 que essa informa\u00e7\u00e3o seja mantida\n    confidencial, n\u00e3o podendo ser vista por ningu\u00e9m para al\u00e9m do\n    utilizador que a produziu (e que deve poder aceder a essa\n    informa\u00e7\u00e3o novamente sempre que quiser).  Como \u00e9 que satisfazia\n    este requisito?\n\n    ",
                "image": [],
                "options": [
                    "Utilizava HTTPS na comunica\u00e7\u00e3o entre o \\emph{browser} e o\n      servidor web",
                    "Utilizava mecanismos de autentica\u00e7\u00e3o robustos para\n      identificar os utilizadores do sistema com confian\u00e7a",
                    "Cifrava a informa\u00e7\u00e3o na base de dados com uma password\n      conhecida apenas pelo servidor web",
                    "Nenhuma das outras op\u00e7\u00f5es apresentada resolve o problema"
                ]
            },
            {
                "questionId": "WebEvolution",
                "content": "\n    As aplica\u00e7\u00f5es web t\u00eam sofrido v\u00e1rias evolu\u00e7\u00f5es ao longo dos\n    \u00faltimos anos.  Uma dessas evolu\u00e7\u00f5es foi o enriquecimento da sua\n    interface com o utilizador, que tira partida de novas tecnologias\n    existentes nos \\emph{browsers}, como, por exemplo, o Javascript,\n    para providenciar uma experi\u00eancia de utiliza\u00e7\u00e3o mais rica.  Quais\n    foram as consequ\u00eancias mais vis\u00edveis desta evolu\u00e7\u00e3o na t\u00edpica\n    arquitectura de software de uma aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Alterou-se a camada da l\u00f3gica de apresenta\u00e7\u00e3o e a forma\n      como ela se relaciona com a camada de baixo",
                    "Alterou-se o conector usado para representar a\n      interac\u00e7\u00e3o entre o \\emph{browser} e o \\emph{web server}",
                    "O \\emph{browser} passou a ser um componente de um tipo\n      diferente",
                    "Esta evolu\u00e7\u00e3o n\u00e3o teve consequ\u00eancias nenhumas na\n      arquitectura de software de uma aplica\u00e7\u00e3o web"
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n    Um dos termos frequentemente utilizado para descrever a\n    arquitectura de software de um sistema \u00e9 o termo \\emph{tier},\n    sendo comum, por exemplo, falar-se em sistemas \\emph{multi-tier}.\n    Tendo em conta os v\u00e1rios tipos de elementos de software que\n    comp\u00f5em uma arquitectura de software, um \\emph{tier} \u00e9 \n\n    ",
                "image": [],
                "options": [
                    "Um componente",
                    "Um agrupamento de componentes",
                    "Um m\u00f3dulo",
                    "Uma camada"
                ]
            },
            {
                "questionId": "ArqEmailMUAMTA",
                "content": "\n    O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n    desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um\n    email, um utilizador usa um \\emph{mail user agent} (MUA), para\n    compor a sua mensagem e envi\u00e1-la.  Para enviar a mensagem,\n    tipicamente o MUA liga-se a um \\emph{mail transfer agent} (MTA),\n    que recebe a mensagem, analisa os cabe\u00e7alhos da mesma para\n    determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do sistema DNS\n    para determinar quais os MTA respons\u00e1veis por cada um dos\n    destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n    destino para entregar a mensagem.  Cada um desses MTAs recebe a\n    mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n    que a mensagem chegue ao MTA do destino.  O utilizador\n    destinat\u00e1rio da mensagem ir\u00e1 depois usar o seu MUA para ver as\n    mensagens que lhe foram enviadas.  Para isso o MUA liga-se a um\n    servidor IMAP ou POP para obter as mensagens que lhe foram\n    destinadas.  Esses servidores IMAP e POP obt\u00eam as mensagens de um\n    utilizador consultando as mensagens armazenadas pelo MTA.\n\n    Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n    sistema de email, qual dos estilos arquitecturais lhe parece mais\n    adequada para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre o\n    MUA e o MTA?\n\n    ",
                "image": [],
                "options": [
                    "O estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo arquitectural Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2012/exam2/exame-20130201-companion-pt-b.tex",
        "quizTitle": "..-data-2012-exam2-exame-20130201-companion-pt-b",
        "questions": [
            {
                "questionId": "ZeroMQScaleMulticore",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      One of the requirements for \u00d8MQ was to take advantage of\n      multi-core boxes; in other words, to scale the throughput\n      linearly with the number of available CPU cores.\n    \\end{quote}\n    Para satisfazer este requisito, a solu\u00e7\u00e3o adoptada pelo ZeroMQ foi\n\n    ",
                "image": [],
                "options": [
                    "Processar todos os pedidos de envio de mensagens com uma\n      \u00fanica \\emph{thread}, para libertar os restantes cores para as\n      \\emph{user threads}",
                    "Lan\u00e7ar uma \\emph{worker thread} por cada \\emph{user\n        thread} para garantir que cada \\emph{user thread} pode enviar\n      mensagens independentemente do que as outras estejam a fazer",
                    "Lan\u00e7ar uma \\emph{worker thread} por cada core, para\n      maximizar a utiliza\u00e7\u00e3o dos cores e minimizar a necessidade de\n      sincroniza\u00e7\u00e3o entre \\emph{threads}",
                    "Lan\u00e7ar uma \\emph{worker thread} para processar o envio de\n      uma nova mensagem, para garantir o m\u00e1ximo de paralelismo no\n      envio de mensagens"
                ]
            },
            {
                "questionId": "ZeroMQAsLibrary",
                "content": "\n    Sabendo que no documento que descreve o ZeroMQ se encontra a\n    seguinte afirma\u00e7\u00e3o:\n    \\begin{quote}\n      \u00d8MQ is a library, not a messaging server.\n    \\end{quote}\n    Que tipo de vistas s\u00e3o necess\u00e1rias para descrever a arquitectura\n    de software do ZeroMQ?\n\n    ",
                "image": [],
                "options": [
                    "Apenas vistas do tipo m\u00f3dulo",
                    "Apenas vistas do tipo componente-e-conector",
                    "Apenas vistas do tipo afecta\u00e7\u00e3o",
                    "Vistas do tipo m\u00f3dulo e componente-e-conector"
                ]
            },
            {
                "questionId": "ZeroMQBroker",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      It took us several years working on AMQP protocol [...] to\n      realise that there's something wrong with the classic\n      client/server model of smart messaging server (broker) and dumb\n      messaging clients.\n    \\end{quote}\n    Qual \u00e9 o principal problema, segundo os autores, do modelo baseado\n    num \\emph{broker}?\n    \n    ",
                "image": [],
                "options": [
                    "\u00c9 menos robusto, porque uma falta no \\emph{broker} causa\n      uma falha no sistema",
                    "\u00c9 menos modific\u00e1vel, porque todos os componentes dependem\n      do \\emph{broker}",
                    "Tem menor desempenho, porque a exist\u00eancia do\n      \\emph{broker} introduz maior lat\u00eancia na comunica\u00e7\u00e3o",
                    "\u00c9 mais caro, porque obriga \u00e0 exist\u00eancia de\n      \\emph{hardware} adicional para executar o \\emph{broker}"
                ]
            },
            {
                "questionId": "ZeroMQExtensibleEngines",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      The objects that handle data transfer are composed of two parts:\n      the session object is responsible for interacting with the \u00d8MQ\n      socket, and the engine object is responsible for communication\n      with the network.  There's only one kind of the session object,\n      but there's a different engine type for each underlying protocol\n      \u00d8MQ supports.  Thus, we have TCP engines, IPC engines, PGM\n      engines, etc.  The set of engines is extensible---in the future\n      we may choose to implement, say, a WebSocket engine or an SCTP\n      engine.\n    \\end{quote}\n    Supondo que o c\u00f3digo que implementa o \\emph{session object} n\u00e3o\n    precisa ser modificado quando um novo tipo de \\emph{engine} \u00e9\n    adicionado ao sistema, que vistas arquitecturais s\u00e3o mais\n    indicadas para mostrar este aspecto de extensibilidade do sistema?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do estilo Generaliza\u00e7\u00e3o (\\emph{Generalization})",
                    "Vistas do estilo Camadas (\\emph{Layers})",
                    "Vistas do estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Vistas do estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "ZeroMQBSDSockets",
                "content": "\n    No documento que descreve o ZeroMQ pode ler-se o seguinte:\n    \\begin{quote}\n      In early versions of \u00d8MQ the API was based on AMQP's model of\n      exchanges and queues.  I spent the end of 2009 rewriting it\n      almost from scratch to use the BSD Socket API instead.\n    \\end{quote}\n    Esta mudan\u00e7a no sistema teve como objectivo satisfazer que tipo de\n    requisitos?\n\n    ",
                "image": [],
                "options": [
                    "Usabilidade",
                    "Modificabilidade",
                    "Desempenho",
                    "Seguran\u00e7a"
                ]
            },
            {
                "questionId": "nginxProcesses",
                "content": "\n    No documento que descreve o nginx pode ler-se o seguinte:\n    \\begin{quote}\n      nginx runs several processes in memory; there is a single master\n      process and several worker processes.  There are also a couple\n      of special purpose processes, specifically a cache loader and\n      cache manager.  All processes are single-threaded in version 1.x\n      of nginx.  All processes primarily use shared-memory mechanisms\n      for inter-process communication.\n    \\end{quote}\n    Supondo que pretende dar \u00eanfase \u00e0 forma como os v\u00e1rios processos\n    do nginx comunicam entre si, que estilo arquitectural lhe parece\n    mais adequado para representar a informa\u00e7\u00e3o acima?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-Subscribe})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "nginxCaching",
                "content": "\n    Na continua\u00e7\u00e3o da descri\u00e7\u00e3o apresentada na pergunta anterior, mais\n    abaixo no documento pode ler-se o seguinte:\n    \\begin{quote}\n      Caching in nginx is implemented in the form of hierarchical data\n      storage on a filesystem.  Cache keys are configurable, and\n      different request-specific parameters can be used to control\n      what gets into the cache.  Cache keys and cache metadata are\n      stored in the shared memory segments, which the cache loader,\n      cache manager and workers can access.\n    \\end{quote}\n    Que estilo arquitectural lhe parece mais adequado para representar\n    a utiliza\u00e7\u00e3o da \\emph{cache} no nginx?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Dados Partilhados (\\emph{Shared data})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "nginxWorkers",
                "content": "\n    Tal como mencionado nas perguntas anteriores, a utiliza\u00e7\u00e3o de\n    \\emph{workers} \u00e9 um dos elementos cruciais na arquitectura de\n    software do nginx.  Qual das seguintes afirma\u00e7\u00f5es melhor descreve\n    o funcionamento dos \\emph{workers} no nginx?\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 criado um \\emph{worker} de cada vez que \u00e9 estabelecida\n      uma nova liga\u00e7\u00e3o ao servidor, e esse \\emph{worker} processa\n      todos os pedidos dessa liga\u00e7\u00e3o, sendo destru\u00eddo no fim da liga\u00e7\u00e3o",
                    "Existe uma \\emph{pool} de \\emph{workers} que s\u00e3o\n      reutilizados entre liga\u00e7\u00f5es, mas cada \\emph{worker} apenas\n      processa pedidos de uma liga\u00e7\u00e3o de cada vez",
                    "Cada \\emph{worker} \u00e9 respons\u00e1vel por v\u00e1rias liga\u00e7\u00f5es,\n      processando todos os pedidos dessas liga\u00e7\u00f5es",
                    "Cada \\emph{worker} processa pedidos que obt\u00e9m de uma\n      \\emph{pool de pedidos} partilhada por todos os \\emph{workers}"
                ]
            },
            {
                "questionId": "nginxWorkerParallel",
                "content": "\n    Uma vez que um \\emph{worker} processa v\u00e1rios pedidos ao longo da\n    sua vida, como \u00e9 que o faz?\n\t\n    ",
                "image": [],
                "options": [
                    "Intercalando as v\u00e1rias fases do processamento de cada\n      pedido num processo sequencial",
                    "Executando em paralelo cada fase do pipeline do\n      processamento de um pedido",
                    "Executando em paralelo o processamento de v\u00e1rios pedidos",
                    "Processando completamente cada pedido antes de passar\n      para o pr\u00f3ximo, num processo sequencial"
                ]
            },
            {
                "questionId": "nginxCTenKProblem",
                "content": "\n    O principal \\emph{architectural driver} para o sistema nginx foi\n    conseguir resolver o \\emph{problema C10K}: conseguir manter 10.000\n    liga\u00e7\u00f5es simult\u00e2neas num \u00fanico servidor a executar em\n    \\emph{hardware} convencional.  Para isso acontecer, foi preciso\n    que o nginx\n\n    ",
                "image": [],
                "options": [
                    "Tivesse um \\emph{throughput} maior do que o Apache",
                    "Conseguisse processar cada pedido mais rapidamente do que\n      o Apache",
                    "Conseguisse lan\u00e7ar mais \\emph{threads} simult\u00e2neas do que\n      o Apache",
                    "Conseguisse reduzir a quantidade de mem\u00f3ria necess\u00e1ria\n      para cada liga\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GHCBlockLayer",
                "content": "\n    O documento que descreve o \\ghc{} apresenta duas decis\u00f5es de\n    desenho relativamente ao desenvolvimento do \\emph{Runtime System}.\n    A primeira dessas decis\u00f5es \u00e9 descrita da seguinte forma:\n    \\begin{quote}\n      The garbage collector is built on top of a block layer that\n      manages memory in units of blocks, where a block is a multiple\n      of 4 KB in size. The block layer has a very simple API: [...].\n      This is the only API used by the garbage collector for\n      allocating and deallocating memory.  Blocks of memory are\n      allocated with \\texttt{allocGroup} and freed with\n      \\texttt{freeGroup}.\n    \\end{quote}\n    Que estilo arquitectural lhe parece mais adequado para representar\n    esta decis\u00e3o de desenho?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Camadas (\\emph{Layers})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "GHCBlockLayerQualities",
                "content": "\n    Qual foi o principal objectivo dos autores do GHC ao tomar a\n    decis\u00e3o de desenho descrita na pergunta anterior?\n    \n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho do RTS",
                    "Permitir mudar o algoritmo de GC sem afectar o resto do sistema",
                    "Aumentar o desempenho dos programas que s\u00e3o compilados\n      pelo GHC",
                    "Tornar o RTS mais facilmente port\u00e1vel para outros\n      sistemas operativos"
                ]
            },
            {
                "questionId": "GHCRewriteRules",
                "content": "\n    Alguns dos \\emph{architectural drivers} do \\ghc{} est\u00e3o\n    relacionados com a extensibilidade do sistema, e uma das solu\u00e7\u00f5es\n    adoptadas pelos autores do GHC para providenciar essa\n    extensibilidade foi a introdu\u00e7\u00e3o de \\emph{user-defined rewrite\n      rules}, descrita no documento da seguinte forma:\n    \\begin{quote}\n      The core of GHC is a long sequence of optimisation passes, each\n      of which performs some semantics-preserving transformation,\n      \\texttt{Core} into \\texttt{Core}.  But the author of a library\n      defines functions that often have some non-trivial,\n      domain-specific transformations of their own, ones that cannot\n      possibly be predicted by GHC.  So GHC allows library authors to\n      define rewrite rules that are used to rewrite the program during\n      optimisation.  In this way, programmers can, in effect, extend\n      GHC with domain-specific optimisations.\n    \\end{quote}\n    Como \u00e9 que esta solu\u00e7\u00e3o se manifesta ao n\u00edvel da arquitectura do\n    sistema?\n\n    ",
                "image": [],
                "options": [
                    "N\u00e3o se manifesta, visto que isso corresponde apenas a\n      mais uma extens\u00e3o \u00e0 linguagem Haskell que o compilador tem que\n      processar",
                    "Na exist\u00eancia de um componente do compilador que \u00e9\n      respons\u00e1vel por interpretar e aplicar as \\emph{rewrite rules}\n      durante a compila\u00e7\u00e3o de um programa",
                    "Numa vista do estilo Generaliza\u00e7\u00e3o que inclui um m\u00f3dulo\n      que define a interface abstracta que todas as \\emph{rewrite\n        rules} devem implementar e do qual os m\u00f3dulos com as\n      \\emph{rewrite rules} s\u00e3o especializa\u00e7\u00f5es",
                    "Numa vista do estilo Canais-e-filtros, correspondendo ao\n      processo de compila\u00e7\u00e3o de um programa Haskell, em que se\n      adiciona um novo filtro sempre que uma nova \\emph{rewrite rule}\n      \u00e9 definida"
                ]
            },
            {
                "questionId": "GHCAsLibrary",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      As the popularity of the Haskell language has grown, there has\n      been an increasing need for tools and infrastructure that\n      understand Haskell source code, and GHC of course contains a lot\n      of the functionality necessary for building these tools: a\n      Haskell parser, abstract syntax, type checker and so on.  With\n      this in mind, we made a simple change to GHC: rather than\n      building GHC as a monolithic program, we build GHC as a library,\n      that is then linked with a small Main module to make the GHC\n      executable itself, but also shipped in library form so that\n      users can call it from their own programs.  At the same time we\n      built an API to expose GHC's functionality to clients.\n    \\end{quote}\n    Supondo que quer apresentar um diagrama arquitectural para\n    representar a descri\u00e7\u00e3o apresentada acima, qual lhe parece mais\n    adequado?\n    \n    ",
                "image": [],
                "options": [
                    "Um diagrama do tipo de vista componente-e-conector",
                    "Um diagrama do tipo de vista m\u00f3dulo",
                    "Um diagrama do estilo Instala\u00e7\u00e3o (\\emph{deployment})",
                    "Um diagrama do estilo Implementa\u00e7\u00e3o (\\emph{Implementation})"
                ]
            },
            {
                "questionId": "GHCCodeGeneration",
                "content": "\n    No documento que descreve o \\ghc{} pode ler-se o seguinte:\n    \\begin{quote}\n      Once the \\texttt{Core} program has been optimised, the process\n      of code generation begins.  The code generator first converts\n      the \\texttt{Core} into a language called \\texttt{STG}, which is\n      essentially just \\texttt{Core} annotated with more information\n      required by the code generator.  Then, \\texttt{STG} is\n      translated to \\texttt{Cmm}, a low-level imperative language with\n      an explicit stack.  From here, the code takes one of three\n      routes:\n      \\begin{itemize}\n      \\item Native code generation: [...]\n      \\item LLVM code generation: [...]\n      \\item C code generation: [...]\n      \\end{itemize}\n    \\end{quote}\n    Ou seja, o GHC pode usar um de tr\u00eas geradores de c\u00f3digo\n    alternativos, que t\u00eam qualidades diferentes (omitidas no excerto\n    apresentado acima).  Supondo que quer apresentar um diagrama\n    arquitectural para representar a descri\u00e7\u00e3o apresentada acima, qual\n    lhe parece mais adequado?\n\n    ",
                "image": [],
                "options": [
                    "Um diagrama do tipo de vista componente-e-conector, onde\n      se mostre o fluxo de dados entre os v\u00e1rios componentes do\n      compilador",
                    "Um diagrama do tipo de vista m\u00f3dulo, onde se mostre a\n      decomposi\u00e7\u00e3o do compilador nos v\u00e1rios m\u00f3dulos que s\u00e3o\n      respons\u00e1veis por cada uma das etapas do processo de compila\u00e7\u00e3o",
                    "Um diagrama do tipo de vista m\u00f3dulo, onde se mostre que\n      m\u00f3dulos usam que outros m\u00f3dulos",
                    "Um diagrama de camadas, onde exista uma camada\n      respons\u00e1vel pela gera\u00e7\u00e3o do c\u00f3digo"
                ]
            },
            {
                "questionId": "WebCacheModule",
                "content": "\n    Considere a figura 1.8 no documento que descreve a utiliza\u00e7\u00e3o de\n    caches em servi\u00e7os web (em anexo).  Nessa figura, aparece um\n    rect\u00e2ngulo com a designa\u00e7\u00e3o \\emph{Cache} dentro de um rect\u00e2ngulo\n    designado \\emph{Request Node}.  Tendo em conta a descri\u00e7\u00e3o feita\n    no texto e o objectivo dessa figura, esses rect\u00e2ngulos\n    correspondem a que tipo de elementos de software na arquitectura\n    de software apresentada?\n\n    ",
                "image": [],
                "options": [
                    "S\u00e3o ambos m\u00f3dulos",
                    "S\u00e3o ambos componentes",
                    "O \\emph{Request Node} \u00e9 um componente e a \\emph{Cache} \u00e9\n      um m\u00f3dulo",
                    "O \\emph{Request Node} \u00e9 um m\u00f3dulo e a \\emph{Cache} \u00e9 um\n      componente"
                ]
            },
            {
                "questionId": "WebCacheGlobal",
                "content": "\n    Considere a altera\u00e7\u00e3o na arquitectura introduzida com a passagem\n    da figura 1.9 para a figura 1.10 no documento que descreve a\n    utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo).  Essa altera\u00e7\u00e3o\n    tem como objectivo e consequ\u00eancia, respectivamente\n\n    ",
                "image": [],
                "options": [
                    "Aumentar o desempenho e a disponibilidade",
                    "Aumentar a disponibilidade e diminuir o desempenho",
                    "Aumentar o desempenho e diminuir a disponibilidade",
                    "Aumentar a escalabilidade e a disponibilidade"
                ]
            },
            {
                "questionId": "WebDistributedCache",
                "content": "\n    Considere o par\u00e1grafo assinalado com o n\u00famero 1 no documento que\n    descreve a utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo), onde\n    se introduz o conceito de \\emph{distributed cache}.  Que estilo\n    arquitectural melhor representa o padr\u00e3o de interac\u00e7\u00e3o existente\n    entre os v\u00e1rios \\emph{request nodes}?\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo Par-a-par (\\emph{Peer-to-Peer})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "WebMissingCacheNode",
                "content": "\n    Considere o par\u00e1grafo assinalado com o n\u00famero 2 no documento que\n    descreve a utiliza\u00e7\u00e3o de caches em servi\u00e7os web (em anexo), onde\n    se fala sobre a falha de um dos n\u00f3s da \\emph{cache} distribu\u00edda.\n    Quando isso acontece, que consequ\u00eancias existem para o servi\u00e7o\n    web?\n\n    ",
                "image": [],
                "options": [
                    "O desempenho do sistema diminui",
                    "A disponibilidade dos dados do sistema diminui",
                    "A disponibilidade dos servi\u00e7os do sistema diminui",
                    "O sistema n\u00e3o \u00e9 afectado de forma nenhuma"
                ]
            },
            {
                "questionId": "MemcachedModules",
                "content": "\n    Considere a seguinte descri\u00e7\u00e3o do \\emph{Memcached}, que \u00e9 uma\n    adapta\u00e7\u00e3o do que aparece no seu Wiki:\n    \\begin{quote}\n      Memcached is an in-memory key-value store for small chunks of\n      arbitrary data from results of database calls, API calls, or\n      page rendering.  It is made up of:\n      \\begin{itemize}\n      \\item Client software, which is given a list of available memcached servers.\n      \\item A client-based hashing algorithm, which chooses a server\n        based on the \"key\" input.\n      \\item Server software, which stores your values with their keys\n        into an internal hash table.\n      \\item Server algorithms, which determine when to throw out old\n        data (if out of memory), or reuse memory.\n      \\end{itemize}\n    \\end{quote}\n    Suponha que pretendia apresentar uma vista arquitectural para o\n    \\emph{Memcached} que represente a informa\u00e7\u00e3o acima.  Que vista \u00e9\n    mais adequada?\n\n    ",
                "image": [],
                "options": [
                    "Uma vista do estilo \\emph{Data Model}",
                    "Uma vista do estilo Camadas (\\emph{Layers})",
                    "Uma vista do estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Uma vista do estilo Utiliza\u00e7\u00e3o (\\emph{Uses})"
                ]
            },
            {
                "questionId": "DomainLogicFenix",
                "content": "\n    Uma das principais mudan\u00e7as introduzidas na arquitectura do\n    sistema F\u00e9nix, relativamente \u00e0 sua primeira arquitectura foi\n    \n    ",
                "image": [],
                "options": [
                    "Passar a usar o padr\u00e3o Transaction Script na camada de l\u00f3gica de dom\u00ednio",
                    "Passar a usar o padr\u00e3o Service Layer numa nova camada",
                    "Passar de um modelo de dom\u00ednio an\u00e9mico para um modelo de\n      dom\u00ednio rico",
                    "Eliminar a camada de servi\u00e7os"
                ]
            },
            {
                "questionId": "Performance",
                "content": "\n    V\u00e1rios dos casos estudados na cadeira tinham requisitos de\n    desempenho.  Que vistas arquitecturais s\u00e3o normalmente necess\u00e1rias\n    para mostrar a satisfa\u00e7\u00e3o desses requisitos?\n\n    ",
                "image": [],
                "options": [
                    "Vistas do tipo m\u00f3dulo",
                    "Vistas do tipo componente-e-conector",
                    "Vistas do tipo afecta\u00e7\u00e3o (\\emph{Allocation})",
                    "Vistas do tipo componente-e-conector e afecta\u00e7\u00e3o (\\emph{Allocation})"
                ]
            },
            {
                "questionId": "Subcontractors",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma arquitectura de software para\n    um novo sistema de grandes dimens\u00f5es e que no desenvolvimento se\n    pretende recorrer extensivamente a empresas subcontratadas para o\n    desenvolvimento de v\u00e1rias partes do sistema.  Que estilos\n    arquitecturais s\u00e3o mais \u00fateis para planear o desenvolvimento do\n    sistema neste cen\u00e1rio?\n\n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Atribui\u00e7\u00e3o de Trabalho (\\emph{Work Assignment})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Camadas (\\emph{Layers})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo\n      Utiliza\u00e7\u00e3o (\\emph{Uses})",
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition}) e o estilo SOA"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n    A utiliza\u00e7\u00e3o do estilo arquitectural Aspectos (\\emph{Aspects})\n    promove a modificabilidade de um sistema porque\n\n    ",
                "image": [],
                "options": [
                    "Estabelece restri\u00e7\u00f5es \u00e0s rela\u00e7\u00f5es de utiliza\u00e7\u00e3o\n      (\\emph{uses}) que podem existir entre os m\u00f3dulos do sistema",
                    "Facilita a cria\u00e7\u00e3o de rela\u00e7\u00f5es de generaliza\u00e7\u00e3o\n      (\\emph{Generalization}) entre os m\u00f3dulos do sistema",
                    "Isola em novos m\u00f3dulos responsabilidades que se\n      encontravam espalhadas por v\u00e1rios m\u00f3dulos do sistema",
                    "Permite decompor cada m\u00f3dulo do sistema em m\u00f3dulos de\n      gr\u00e3o mais fino"
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    Suponha que est\u00e1 a desenvolver a arquitectura de software de um\n    novo sistema para uma organiza\u00e7\u00e3o que tem v\u00e1rias unidades\n    organizacionais, cada uma das quais com os seus sistemas de\n    informa\u00e7\u00e3o, que foram desenvolvidos independentemente uns dos\n    outros ao longo de v\u00e1rios anos e dependendo das necessidades\n    particulares de cada unidade.  O seu sistema tem como objectivo\n    integrar os v\u00e1rios sistemas existentes, providenciando desta forma\n    n\u00e3o s\u00f3 uma vis\u00e3o consolidada do funcionamento da organiza\u00e7\u00e3o, mas\n    tamb\u00e9m permitir a cria\u00e7\u00e3o de novos processos dentro da organiza\u00e7\u00e3o\n    que envolvam mais do que uma unidade.  Que estilo arquitectural\n    lhe parece mais adequado para desenhar o seu sistema?\n    \n    ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "O estilo Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo SOA (\\emph{Service Oriented Architecture})",
                    "O estilo Processos Comunicantes (\\emph{Communicating Processes})"
                ]
            },
            {
                "questionId": "ArqEmailMUAMTA",
                "content": "\n    O sistema de email \u00e9 composto por v\u00e1rios tipos de componentes que\n    desempenham diferentes fun\u00e7\u00f5es.  Por exemplo, para enviar um\n    email, um utilizador usa um \\emph{mail user agent} (MUA), para\n    compor a sua mensagem e envi\u00e1-la.  Para enviar a mensagem,\n    tipicamente o MUA liga-se a um \\emph{mail transfer agent} (MTA),\n    que recebe a mensagem, analisa os cabe\u00e7alhos da mesma para\n    determinar os v\u00e1rios destinat\u00e1rios e, ap\u00f3s consulta do sistema DNS\n    para determinar quais os MTA respons\u00e1veis por cada um dos\n    destinat\u00e1rios, liga-se aos MTAs respons\u00e1veis pelos endere\u00e7os de\n    destino para entregar a mensagem.  Cada um desses MTAs recebe a\n    mensagem e armazena-a localmente ou reenvia-a para outros MTAs at\u00e9\n    que a mensagem chegue ao MTA do destino.  O utilizador\n    destinat\u00e1rio da mensagem ir\u00e1 depois usar o seu MUA para ver as\n    mensagens que lhe foram enviadas.  Para isso o MUA liga-se a um\n    servidor IMAP ou POP para obter as mensagens que lhe foram\n    destinadas.  Esses servidores IMAP e POP obt\u00eam as mensagens de um\n    utilizador consultando as mensagens armazenadas pelo MTA.\n\n    Tendo em conta esta descri\u00e7\u00e3o simplificada do funcionamento do\n    sistema de email, qual dos estilos arquitecturais lhe parece mais\n    adequada para representar o padr\u00e3o de interac\u00e7\u00e3o existente entre o\n    MUA e o MTA?\n\n    ",
                "image": [],
                "options": [
                    "O estilo arquitectural Par-a-Par (\\emph{Peer-to-Peer})",
                    "O estilo arquitectural Cliente-Servidor (\\emph{Client-Server})",
                    "O estilo arquitectural Dados-Partilhados \\emph{Shared-Data}",
                    "O estilo arquitectural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o (\\emph{Publish-subscribe})"
                ]
            },
            {
                "questionId": "Availability",
                "content": "\n    Suponha que para satisfazer um requisito de disponibilidade\n    relacionado com a exist\u00eancia de faltas ao n\u00edvel da infraestrutura\n    de rede usada pelo seu sistema, pretende utilizar a t\u00e1ctica\n    designada por \\emph{Ping/Echo}.  Como \u00e9 que a utiliza\u00e7\u00e3o dessa\n    t\u00e1ctica se manifesta nas vistas da arquitectura do seu sistema?\n\n    ",
                "image": [],
                "options": [
                    "Apenas na vista de Instala\u00e7\u00e3o (\\emph{Deployment})",
                    "Apenas na vista de Decomposi\u00e7\u00e3o (\\emph{Decomposition})",
                    "Apenas numa vista de componente-e-conector",
                    "Numa vista de componente-e-conector e numa vista de\n      Instala\u00e7\u00e3o (\\emph{Deployment})"
                ]
            },
            {
                "questionId": "Security",
                "content": "\n    Suponha que est\u00e1 a desenvolver uma aplica\u00e7\u00e3o web que mant\u00e9m numa\n    base de dados alguma informa\u00e7\u00e3o introduzida pelos utilizadores, e\n    que um dos requisitos \u00e9 que essa informa\u00e7\u00e3o seja mantida\n    confidencial, n\u00e3o podendo ser vista por ningu\u00e9m para al\u00e9m do\n    utilizador que a produziu (e que deve poder aceder a essa\n    informa\u00e7\u00e3o novamente sempre que quiser).  Como \u00e9 que satisfazia\n    este requisito?\n\n    ",
                "image": [],
                "options": [
                    "Utilizava HTTPS na comunica\u00e7\u00e3o entre o \\emph{browser} e o\n      servidor web",
                    "Utilizava mecanismos de autentica\u00e7\u00e3o robustos para\n      identificar os utilizadores do sistema com confian\u00e7a",
                    "Cifrava a informa\u00e7\u00e3o na base de dados com uma password\n      conhecida apenas pelo servidor web",
                    "Nenhuma das outras op\u00e7\u00f5es apresentada resolve o problema"
                ]
            },
            {
                "questionId": "WebEvolution",
                "content": "\n    As aplica\u00e7\u00f5es web t\u00eam sofrido v\u00e1rias evolu\u00e7\u00f5es ao longo dos\n    \u00faltimos anos.  Uma dessas evolu\u00e7\u00f5es foi o enriquecimento da sua\n    interface com o utilizador, que tira partida de novas tecnologias\n    existentes nos \\emph{browsers}, como, por exemplo, o Javascript,\n    para providenciar uma experi\u00eancia de utiliza\u00e7\u00e3o mais rica.  Quais\n    foram as consequ\u00eancias mais vis\u00edveis desta evolu\u00e7\u00e3o na t\u00edpica\n    arquitectura de software de uma aplica\u00e7\u00e3o web?\n\n    ",
                "image": [],
                "options": [
                    "Alterou-se a camada da l\u00f3gica de apresenta\u00e7\u00e3o e a forma\n      como ela se relaciona com a camada de baixo",
                    "Alterou-se o conector usado para representar a\n      interac\u00e7\u00e3o entre o \\emph{browser} e o \\emph{web server}",
                    "O \\emph{browser} passou a ser um componente de um tipo\n      diferente",
                    "Esta evolu\u00e7\u00e3o n\u00e3o teve consequ\u00eancias nenhumas na\n      arquitectura de software de uma aplica\u00e7\u00e3o web"
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n    Um dos termos frequentemente utilizado para descrever a\n    arquitectura de software de um sistema \u00e9 o termo \\emph{tier},\n    sendo comum, por exemplo, falar-se em sistemas \\emph{multi-tier}.\n    Tendo em conta os v\u00e1rios tipos de elementos de software que\n    comp\u00f5em uma arquitectura de software, um \\emph{tier} \u00e9 \n\n    ",
                "image": [],
                "options": [
                    "Um componente",
                    "Um agrupamento de componentes",
                    "Um m\u00f3dulo",
                    "Uma camada"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2013/20140110/exame-20140110-companion-pt-a.tex",
        "quizTitle": "..-data-2013-20140110-exame-20140110-companion-pt-a",
        "questions": [
            {
                "questionId": "GPReceiverWriterStyle",
                "content": "\n    No sistema \\gp{} as \\emph{receiver} e as \\emph{writer threads} suportam a escrita ass\u00edncrona de m\u00e9tricas de forma a otimizar os acessos a disco. A intera\u00e7\u00e3o entre estes dois componentes segue o estilo arquitetural\n\n    ",
                "image": [],
                "options": [
                    "Cliente-servidor",
                    "Processos-comunicantes",
                    "Reposit\u00f3rio",
                    "Canais-e-filtros"
                ]
            },
            {
                "questionId": "GPCarbonRelay",
                "content": "\n    No sistema \\gp{} o componente \\emph{carbon-relay} implementa uma t\u00e1tica de\n\n    ",
                "image": [],
                "options": [
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Manter M\u00faltiplas C\u00f3pias de Dados",
                    "Redund\u00e2ncia Passiva",
                    "Redund\u00e2ncia Ativa"
                ]
            },
            {
                "questionId": "GPComposerUIQuality",
                "content": "\n    Que qualidade, ou qualidades, do sistema \\gp{} \u00e9(s\u00e3o) expressa(s) na frase: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usabilidade e desempenho",
                    "Usabilidade",
                    "Desempenho",
                    "Facilidade de teste"
                ]
            },
            {
                "questionId": "MWQualities",
                "content": "\n\t  Quais s\u00e3o as principais qualidades do sistema \\mw{}?\n    \n    ",
                "image": [],
                "options": [
                    "Desempenho, disponibilidade e usabilidade",
                    "Desempenho, disponibilidade e facilidade de teste",
                    "Fiabilidade, desempenho e usabilidade",
                    "Desempenho e usabilidade"
                ]
            },
            {
                "questionId": "MWArchitecuralStyle",
                "content": "\n\t  Os estilos arquiteturais que melhor descrevem o sistema \\mw{} do ponto de vista do utilizador final s\u00e3o\n    \n    ",
                "image": [],
                "options": [
                    "Cliente-Servidor e Reposit\u00f3rio",
                    "Reposit\u00f3rio e Arquitetura Orientada aos Servi\u00e7os",
                    "Cliente-Servidor, Reposit\u00f3rio, Processos-Comunicantes e Arquitetura Orientada aos Servi\u00e7os",
                    "Cliente-Servidor, Reposit\u00f3rio e Processos-Comunicantes"
                ]
            },
            {
                "questionId": "MWReliabilityTactics",
                "content": "\n\t  O sistema \\mw{} procura manter um crit\u00e9rio de fiabilidade segundo o qual as altera\u00e7\u00f5es efetuadas por um escritor s\u00e3o consistentemente visualizadas nas suas subsequentes leituras\n    \n    ",
                "image": [],
                "options": [
                    "Atrav\u00e9s de uma t\u00e1tica de Marca de Tempo (\\emph{timestamp})",
                    "Atrav\u00e9s de uma t\u00e1tica de Reinvoca\u00e7\u00e3o (\\emph{retry})",
                    "Guardando a informa\u00e7\u00e3o junto do cliente usando \\emph{cookies}",
                    "Atrav\u00e9s de uma t\u00e1tica de Transa\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "MWReliabilityReadsImplementation",
                "content": "\n\t  O sistema \\mw{} procura assegurar um crit\u00e9rio de fiabilidade segundo o qual a informa\u00e7\u00e3o escrita h\u00e1 mais de 30 segundos est\u00e1 dispon\u00edvel para leitura para todos os leitores, para se alcan\u00e7ar este crit\u00e9rio o distribuidor de carga  \n    \n    ",
                "image": [],
                "options": [
                    "Pode deixar de aceitar leituras",
                    "Pode deixar de aceitar escritas",
                    "Pode deixar de aceitar leituras e escritas",
                    "Pode ter de adicionar mais servidores ao \\emph{cluster}"
                ]
            },
            {
                "questionId": "MWResourceLoaderTactic",
                "content": "\n\t  Na descri\u00e7\u00e3o do sistema \\mw{} indica-se que:\n\t  \\newline\n\t  \n\t  \\emph{To optimize the delivery of JavaScript and CSS assets, the ResourceLoader module was developed to optimize delivery of JS and CSS. Started in 2009, it was completed in 2011 and has been a core feature of MediaWiki since version 1.17. ResourceLoader works by loading JS and CSS assets on demand, thus reducing loading and parsing time when features are unused, for example by older browsers. It also minifies the code, groups resources to save requests, and can embed images as data URIs.}\n\t  \\newline\n\t  \n\t  O \\emph{ResourceLoader} implementa uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Aumentar a Efici\u00eancia dos Recursos",
                    "Aumentar os Recursos",
                    "Priorizar Eventos",
                    "Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "CHSecurityQuality",
                "content": "\n\t  No \\ch{}, para se atingir a qualidade da seguran\u00e7a, o processo \\emph{Browser} implementa uma t\u00e1tica de\n    \n    ",
                "image": [],
                "options": [
                    "Encripta\u00e7\u00e3o dos Dados",
                    "Dete\u00e7\u00e3o de Intrus\u00e3o",
                    "Limitar Acesso",
                    "Autorizar Atores"
                ]
            },
            {
                "questionId": "CHPerformanceQuality",
                "content": "\n\t  No \\ch{} pode-se associar um processo \\emph{Renderer} a cada \\emph{Tab}, o que resulta no aumento do desempenho atrav\u00e9s de uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Introduzir Concorr\u00eancia",
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Limitar a Exposi\u00e7\u00e3o",
                    "Redund\u00e2ncia Ativa"
                ]
            },
            {
                "questionId": "CHMobilityArchitecturalStyle",
                "content": "\n\t  \n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{On Android devices, Chrome leverages the same multi-process architecture as the desktop version - there is a browser process, and one or more renderer processes. The one difference is that due to memory constraints of the mobile device, Chrome may not be able to run a dedicated renderer for each open tab. Instead, Chrome determines the optimal number of renderer processes based on available memory, and other constraints of the device, and shares the renderer process between the multiple tabs.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima pode ser representada numa vista do tipo Componente-e-Conetor utilizando o estilo arquitetural\t  \n\t  \n    ",
                "image": [],
                "options": [
                    "Publica\u00e7\u00e3o-subscri\u00e7\u00e3o",
                    "Canais-e-filtros",
                    "Cria\u00e7\u00e3o e destrui\u00e7\u00e3o din\u00e2mica",
                    "Cliente-servidor"
                ]
            },
            {
                "questionId": "CHAmazonSilkTwo",
                "content": "\n\t  Uma vantagem do \\ch{} relativamente ao Amazon Silk est\u00e1 relacionada com \n\t      \n    ",
                "image": [],
                "options": [
                    "Poder tirar partido da concorr\u00eancia",
                    "O \\emph{browser} ter que efetuar mais pedidos ao servidor",
                    "Utilizar t\u00e9cnicas de aprendizagem",
                    "N\u00e3o depender de um servi\u00e7o propriet\u00e1rio"
                ]
            },
            {
                "questionId": "CHSecurityLevel",
                "content": "\n\t  Uma das qualidades do \\ch{} \u00e9 executar o c\u00f3digo JavaScript dentro de um processo, permitindo isolar poss\u00edveis interfer\u00eancias entre a execu\u00e7\u00e3o de JavaScripts com diferentes origens. O grau de isolamento\n\t      \n    ",
                "image": [],
                "options": [
                    "\u00c9 sempre o mesmo para todas as inst\u00e2ncias do \\ch{}",
                    "\u00c9 definido em tempo de compila\u00e7\u00e3o do c\u00f3digo do \\ch{}",
                    "\u00c9 definido em tempo de inicializa\u00e7\u00e3o de uma inst\u00e2ncia do \\ch{}",
                    "Pode variar durante a execu\u00e7\u00e3o de cada inst\u00e2ncia do \\ch{}"
                ]
            },
            {
                "questionId": "CHOmniboxTactics",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Typing in the Omnibox (URL) bar triggers high-likelihood suggestions, which may similarly kick off a DNS lookup, TCP pre-connect, and even prerender the page in a hidden tab.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere\n\t      \n    ",
                "image": [],
                "options": [
                    "A t\u00e1tica de Manter Modelo de Utilizador",
                    "A t\u00e1tica de Manter Modelo de Tarefa",
                    "A t\u00e1tica de Manter Modelo de Sistema",
                    "T\u00e1ticas de Suportar a Iniciativa do Utilizador"
                ]
            },
            {
                "questionId": "GMPicklePerformance",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{In Mailman 2, the MailList object's state is stored in a file called config.pck, which is just the pickled representation of the MailList object's dictionary. Every Python object has an attribute dictionary called \\_\\_dict\\_\\_. So saving a mailing list object then is simply a matter of pickling its \\_\\_dict\\_\\_ to a file, and loading it just involves reading the pickle from the file and reconstituting its \\_\\_dict\\_\\_.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o, n\u00e3o obstante simples, trouxe diversos problemas pois a qualidade do desempenho \u00e9 penalizada devido:\n\t  \n\t      \n    ",
                "image": [],
                "options": [
                    "A ser necess\u00e1rio descomprimir todo o ficheiro, mesmo que para obter apenas parte da sua informa\u00e7\u00e3o",
                    "A defici\u00eancias do algoritmo de compress\u00e3o e descompress\u00e3o do \\emph{pickle}",
                    "A ser uma solu\u00e7\u00e3o espec\u00edfica de Python",
                    "\u00c0s limita\u00e7\u00f5es de acesso concorrente a ficheiros "
                ]
            },
            {
                "questionId": "GMRestModularity",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Mailman 3 has adopted the Representational State Transfer (REST) model for external administrative control. REST is based on HTTP, and Mailman's default object representation is JSON. These protocols are ubiquitous and well-supported in a large variety of programming languages and environments, making it fairly easy to integrate Mailman with third party systems. REST was the perfect fit for Mailman 3, and now much of its functionality is exposed through a REST API.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o permitiu:\n\t      \n    ",
                "image": [],
                "options": [
                    "Aumentar a qualidade da facilidade de modifica\u00e7\u00e3o pois a nova interface utilizador passou a usar a interface REST",
                    "Aumentar a qualidade da facilidade de modifica\u00e7\u00e3o pois as aplica\u00e7\u00f5es externas deixaram de usar as funcionalidade de administra\u00e7\u00e3o",
                    "Aumentar a qualidade da interoperabilidade pois aplica\u00e7\u00f5es externas podem passar a ler e enviar mensagens para o \\gm{}",
                    "Nenhuma das anteriores"
                ]
            },
            {
                "questionId": "GMPipesFiltersData",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Once a message has made its way through the chains and rules and is accepted for posting, the message must be further processed before it can be delivered to the final recipients. For example, some headers may get added or deleted, and some messages may get some extra decorations that provide important disclaimers or information, such as how to leave the mailing list.}\n  \\newline\n\t  \n\t  Em que o estilo arquitetural Canais-e-Filtros \u00e9 usado no tratamento das mensagens. Neste contexto o tipo de dados que \u00e9 passado entre os filtros \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Uma sequ\u00eancia de bytes para permitir independ\u00eancia entre os filtros",
                    "Um objeto estruturado em \u00e1rvore para possibilitar a execu\u00e7\u00e3o simult\u00e2nea de diversos filtros",
                    "Uma sequ\u00eancia de bytes para permitir que a ordem de aplica\u00e7\u00e3o dos filtros n\u00e3o seja relevante",
                    "Um objeto estruturado em \u00e1rvore para facilitar o processamento de cada um dos filtros"
                ]
            },
            {
                "questionId": "GMReliabilityFIFO",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} prop\u00f5e-se uma solu\u00e7\u00e3o para garantir que nas situa\u00e7\u00f5es em que v\u00e1rios \\emph{queue runners} executam sobre a mesma \\emph{queue} a entrega de mensagens \u00e9 feita por ordem de chegada.\n  \\newline\n  \n  \\emph{There's another side effect of this algorithm that did cause problems during the early design of this system. Despite the unpredictability of email delivery in general, the best user experience is provided by processing the queue files in FIFO order, so that replies to a mailing list get sent out in roughly chronological order.}\n\t      \n    ",
                "image": [],
                "options": [
                    "A solu\u00e7\u00e3o proposta assegura efetivamente a entrega FIFO de mensagens e os v\u00e1rios processos n\u00e3o necessitam de se sincronizar",
                    "A solu\u00e7\u00e3o proposta assegura a entrega FIFO de mensagens mas os v\u00e1rios processos necessitam de se sincronizar",
                    "A solu\u00e7\u00e3o proposta n\u00e3o assegura a entrega FIFO de mensagens, podendo algumas mensagens ser entregues por outra ordem",
                    "A solu\u00e7\u00e3o proposta assegura a entrega FIFO de mensagens pois em cada \\emph{queue} apenas s\u00e3o colocadas mensagens com intervalos de tempo suficientemente espa\u00e7ados"
                ]
            },
            {
                "questionId": "GMMasterRunner",
                "content": "\n\t  A fun\u00e7\u00e3o do componente \\emph{Master Runner} do \\gm{} pode ser representada usando o estilo arquitetural\n\t      \n    ",
                "image": [],
                "options": [
                    "Cliente-Servidor",
                    "Par-a-Par",
                    "Cria\u00e7\u00e3o e Destrui\u00e7\u00e3o Din\u00e2mica",
                    "\\emph{Tiers}"
                ]
            },
            {
                "questionId": "GMMessagesPersistence",
                "content": "\n\t  No Mailman 3 as mensagens continuam a ser guardadas persistentemente usando \\emph{pickle} pois\n\t      \n    ",
                "image": [],
                "options": [
                    "Pois cada mensagem n\u00e3o necessita de ser acedida simultaneamente por diversos processos",
                    "Pois \\emph{pickle} \u00e9 eficiente a escrever e a ler mensagens",
                    "Pois cada mensagem \u00e9 guardada como um ficheiro num diret\u00f3rio",
                    "Todas as op\u00e7\u00f5es anteriores"
                ]
            },
            {
                "questionId": "InstallImplementationStyles",
                "content": "\n\t  Os estilos arquiteturais Instala\u00e7\u00e3o (\\emph{Install}) e Implementa\u00e7\u00e3o (\\emph{Implementation})\n\t      \n      ",
                "image": [],
                "options": [
                    "Afetam m\u00f3dulos ao sistema de ficheiros",
                    "Diferem no \u00eanfase dado \u00e0 fase de produ\u00e7\u00e3o e \u00e0 fase de desenvolvimento do processo de software",
                    "Aplicam-se a conjuntos completamente distintos de ficheiros",
                    "Aplicam-se ao mesmo conjunto de ficheiros"
                ]
            },
            {
                "questionId": "FenixTwo",
                "content": "\n\t  As qualidades arquiteturalmente significativas da segunda arquitetura do sistema F\u00e9nix s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Interoperabilidade e Desempenho",
                    "Desempenho e Disponibilidade",
                    "Facilidade de Desenvolvimento e Desempenho",
                    "Facilidade de Modifica\u00e7\u00e3o e Desempenho"
                ]
            },
            {
                "questionId": "ElasticityDeferBinding",
                "content": "\n\t  A elasticidade de um sistema, entendida como a capacidade do sistema se adaptar com facilidade a altera\u00e7\u00f5es de carga, \u00e9 muitas vezes apresentada como uma caracter\u00edstica necess\u00e1ria para a qualidade da escalabilidade. Para o grau dessa facilidade de adapta\u00e7\u00e3o contribuem solu\u00e7\u00f5es arquiteturais associadas\n\t      \n      ",
                "image": [],
                "options": [
                    "\u00c0 t\u00e1tica de Liga\u00e7\u00e3o Diferida (\\emph{Defer Binding})",
                    "\u00c0 t\u00e1tica de Redund\u00e2ncia Passiva",
                    "\u00c0 t\u00e1tica de Redund\u00e2ncia Ativa",
                    "\u00c0s t\u00e1ticas de Redund\u00e2ncia Passiva e Redund\u00e2ncia Ativa"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n\t  O padr\u00e3o Unidade de Trabalho (\\emph{Unit of Work}) pode ser implementado no servidor aplicacional, enquanto que no reposit\u00f3rio continua a ser necess\u00e1rio usar transa\u00e7\u00f5es para aceder aos dados. Neste caso\n\t      \n      ",
                "image": [],
                "options": [
                    "Apenas pode ser usada uma pol\u00edtica otimista de controlo de concorr\u00eancia pois as transa\u00e7\u00f5es n\u00e3o podem estar abertas durante muito tempo",
                    "Apenas pode ser usada uma pol\u00edtica pessimista de controlo de concorr\u00eancia para evitar os frequentes conflitos nas transa\u00e7\u00f5es",
                    "Podem ser usadas pol\u00edticas pessimistas ou otimistas de controlo de concorr\u00eancia",
                    "A gest\u00e3o transacional \u00e9 da inteira responsabilidade do reposit\u00f3rio"
                ]
            },
            {
                "questionId": "AvailabilityVoting",
                "content": "\n\t  A qualidade da disponibilidade pode ser suportada pela t\u00e1tica de vota\u00e7\u00e3o de forma a identificar faltas de \n\t      \n      ",
                "image": [],
                "options": [
                    "Codifica\u00e7\u00e3o, se os componentes executarem m\u00f3dulos desenvolvidos por diferentes equipas de desenvolvimento",
                    "Hardware, se houver redund\u00e2ncia de hardware",
                    "Sistema Operativo, se componentes executarem em diferentes sistemas operativos",
                    "Todas as op\u00e7\u00f5es anteriores"
                ]
            },
            {
                "questionId": "SecurityInternalSource",
                "content": "\n\t  Nos casos em que a fonte dos ataques \u00e9 interna \u00e0 organiza\u00e7\u00e3o as t\u00e1ticas mais eficazes s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Detetar e Recuperar do Ataque",
                    "Resistir ao Ataque",
                    "Reagir ao Ataque",
                    "Resistir e Reagir ao Ataque"
                ]
            },
            {
                "questionId": "DataModel",
                "content": "\n\t  O detalhe em que se aplica o estilo arquitetural Modelo de Dados pode ser ao n\u00edvel conceptual, l\u00f3gico ou f\u00edsico.\n\t  \n      ",
                "image": [],
                "options": [
                    "Se houver requisitos arquiteturais de desempenho relativos aos acessos aos dados ent\u00e3o deve ser feito at\u00e9 ao n\u00edvel f\u00edsico",
                    "Deve ser sempre feito at\u00e9 ao n\u00edvel f\u00edsico",
                    "S\u00f3 deve ser at\u00e9 ao n\u00edvel l\u00f3gico nos casos em que o alvo da implementa\u00e7\u00e3o for uma base de dados relacional",
                    "Apenas o n\u00edvel conceptual \u00e9 efetivamente necess\u00e1rio, sendo os restantes opcionais"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\t  No estilo arquitetural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o os componentes, do ponto de vista da facilidade de modifica\u00e7\u00e3o dos m\u00f3dulos que executam\n\t  \n      ",
                "image": [],
                "options": [
                    "Dependem dos tipos de componentes publicadores",
                    "Dependem apenas dos tipos de eventos",
                    "S\u00e3o totalmente independentes entre si",
                    "Necessitam que seja suportada Liga\u00e7\u00e3o Diferida (\\emph{Defer Binding}) din\u00e2mica dos componentes, publicadores e subscritores, ao conetor para serem totalmente independentes entre si"
                ]
            },
            {
                "questionId": "UsabilityNonArchitectural",
                "content": "\n\t  Algumas qualidades de usabilidade n\u00e3o s\u00e3o arquiteturais pois\n\t  \n      ",
                "image": [],
                "options": [
                    "Apenas dizem respeito aos \\emph{web designers}",
                    "Dependem de t\u00e1ticas de desempenho",
                    "Dependem de t\u00e1ticas de disponibilidade",
                    "N\u00e3o s\u00e3o implementadas por nenhuma t\u00e1tica de usabilidade"
                ]
            },
            {
                "questionId": "WorldWide",
                "content": "\n\t  Num sistema \\emph{world-wide}, como o Facebook ou o Amazon\n\t  \n      ",
                "image": [],
                "options": [
                    "Todas as funcionalidades podem ser transacionais",
                    "Apenas um conjunto restrito de funcionalidades \u00e9 transacional",
                    "N\u00e3o \u00e9 necess\u00e1rio ter propriedades transacionais pois todos os dados est\u00e3o em mem\u00f3ria",
                    "Apenas a propriedade transacional do isolamento \u00e9 assegurada"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2013/20140110/exame-20140110-companion-pt-b.tex",
        "quizTitle": "..-data-2013-20140110-exame-20140110-companion-pt-b",
        "questions": [
            {
                "questionId": "InstallImplementationStyles",
                "content": "\n\t  Os estilos arquiteturais Instala\u00e7\u00e3o (\\emph{Install}) e Implementa\u00e7\u00e3o (\\emph{Implementation})\n\t      \n      ",
                "image": [],
                "options": [
                    "Afetam m\u00f3dulos ao sistema de ficheiros",
                    "Diferem no \u00eanfase dado \u00e0 fase de produ\u00e7\u00e3o e \u00e0 fase de desenvolvimento do processo de software",
                    "Aplicam-se a conjuntos completamente distintos de ficheiros",
                    "Aplicam-se ao mesmo conjunto de ficheiros"
                ]
            },
            {
                "questionId": "FenixTwo",
                "content": "\n\t  As qualidades arquiteturalmente significativas da segunda arquitetura do sistema F\u00e9nix s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Interoperabilidade e Desempenho",
                    "Desempenho e Disponibilidade",
                    "Facilidade de Desenvolvimento e Desempenho",
                    "Facilidade de Modifica\u00e7\u00e3o e Desempenho"
                ]
            },
            {
                "questionId": "MWQualities",
                "content": "\n\t  Quais s\u00e3o as principais qualidades do sistema \\mw{}?\n    \n    ",
                "image": [],
                "options": [
                    "Desempenho, disponibilidade e usabilidade",
                    "Desempenho, disponibilidade e facilidade de teste",
                    "Fiabilidade, desempenho e usabilidade",
                    "Desempenho e usabilidade"
                ]
            },
            {
                "questionId": "MWArchitecuralStyle",
                "content": "\n\t  Os estilos arquiteturais que melhor descrevem o sistema \\mw{} do ponto de vista do utilizador final s\u00e3o\n    \n    ",
                "image": [],
                "options": [
                    "Cliente-Servidor e Reposit\u00f3rio",
                    "Reposit\u00f3rio e Arquitetura Orientada aos Servi\u00e7os",
                    "Cliente-Servidor, Reposit\u00f3rio, Processos-Comunicantes e Arquitetura Orientada aos Servi\u00e7os",
                    "Cliente-Servidor, Reposit\u00f3rio e Processos-Comunicantes"
                ]
            },
            {
                "questionId": "MWReliabilityTactics",
                "content": "\n\t  O sistema \\mw{} procura manter um crit\u00e9rio de fiabilidade segundo o qual as altera\u00e7\u00f5es efetuadas por um escritor s\u00e3o consistentemente visualizadas nas suas subsequentes leituras\n    \n    ",
                "image": [],
                "options": [
                    "Atrav\u00e9s de uma t\u00e1tica de Marca de Tempo (\\emph{timestamp})",
                    "Atrav\u00e9s de uma t\u00e1tica de Reinvoca\u00e7\u00e3o (\\emph{retry})",
                    "Guardando a informa\u00e7\u00e3o junto do cliente usando \\emph{cookies}",
                    "Atrav\u00e9s de uma t\u00e1tica de Transa\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "MWReliabilityReadsImplementation",
                "content": "\n\t  O sistema \\mw{} procura assegurar um crit\u00e9rio de fiabilidade segundo o qual a informa\u00e7\u00e3o escrita h\u00e1 mais de 30 segundos est\u00e1 dispon\u00edvel para leitura para todos os leitores, para se alcan\u00e7ar este crit\u00e9rio o distribuidor de carga  \n    \n    ",
                "image": [],
                "options": [
                    "Pode deixar de aceitar leituras",
                    "Pode deixar de aceitar escritas",
                    "Pode deixar de aceitar leituras e escritas",
                    "Pode ter de adicionar mais servidores ao \\emph{cluster}"
                ]
            },
            {
                "questionId": "MWResourceLoaderTactic",
                "content": "\n\t  Na descri\u00e7\u00e3o do sistema \\mw{} indica-se que:\n\t  \\newline\n\t  \n\t  \\emph{To optimize the delivery of JavaScript and CSS assets, the ResourceLoader module was developed to optimize delivery of JS and CSS. Started in 2009, it was completed in 2011 and has been a core feature of MediaWiki since version 1.17. ResourceLoader works by loading JS and CSS assets on demand, thus reducing loading and parsing time when features are unused, for example by older browsers. It also minifies the code, groups resources to save requests, and can embed images as data URIs.}\n\t  \\newline\n\t  \n\t  O \\emph{ResourceLoader} implementa uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Aumentar a Efici\u00eancia dos Recursos",
                    "Aumentar os Recursos",
                    "Priorizar Eventos",
                    "Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "UnitOfWork",
                "content": "\n\t  O padr\u00e3o Unidade de Trabalho (\\emph{Unit of Work}) pode ser implementado no servidor aplicacional, enquanto que no reposit\u00f3rio continua a ser necess\u00e1rio usar transa\u00e7\u00f5es para aceder aos dados. Neste caso\n\t      \n      ",
                "image": [],
                "options": [
                    "Apenas pode ser usada uma pol\u00edtica otimista de controlo de concorr\u00eancia pois as transa\u00e7\u00f5es n\u00e3o podem estar abertas durante muito tempo",
                    "Apenas pode ser usada uma pol\u00edtica pessimista de controlo de concorr\u00eancia para evitar os frequentes conflitos nas transa\u00e7\u00f5es",
                    "Podem ser usadas pol\u00edticas pessimistas ou otimistas de controlo de concorr\u00eancia",
                    "A gest\u00e3o transacional \u00e9 da inteira responsabilidade do reposit\u00f3rio"
                ]
            },
            {
                "questionId": "AvailabilityVoting",
                "content": "\n\t  A qualidade da disponibilidade pode ser suportada pela t\u00e1tica de vota\u00e7\u00e3o de forma a identificar faltas de \n\t      \n      ",
                "image": [],
                "options": [
                    "Codifica\u00e7\u00e3o, se os componentes executarem m\u00f3dulos desenvolvidos por diferentes equipas de desenvolvimento",
                    "Hardware, se houver redund\u00e2ncia de hardware",
                    "Sistema Operativo, se componentes executarem em diferentes sistemas operativos",
                    "Todas as op\u00e7\u00f5es anteriores"
                ]
            },
            {
                "questionId": "CHSecurityQuality",
                "content": "\n\t  No \\ch{}, para se atingir a qualidade da seguran\u00e7a, o processo \\emph{Browser} implementa uma t\u00e1tica de\n    \n    ",
                "image": [],
                "options": [
                    "Encripta\u00e7\u00e3o dos Dados",
                    "Dete\u00e7\u00e3o de Intrus\u00e3o",
                    "Limitar Acesso",
                    "Autorizar Atores"
                ]
            },
            {
                "questionId": "CHPerformanceQuality",
                "content": "\n\t  No \\ch{} pode-se associar um processo \\emph{Renderer} a cada \\emph{Tab}, o que resulta no aumento do desempenho atrav\u00e9s de uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Introduzir Concorr\u00eancia",
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Limitar a Exposi\u00e7\u00e3o",
                    "Redund\u00e2ncia Ativa"
                ]
            },
            {
                "questionId": "CHMobilityArchitecturalStyle",
                "content": "\n\t  \n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{On Android devices, Chrome leverages the same multi-process architecture as the desktop version - there is a browser process, and one or more renderer processes. The one difference is that due to memory constraints of the mobile device, Chrome may not be able to run a dedicated renderer for each open tab. Instead, Chrome determines the optimal number of renderer processes based on available memory, and other constraints of the device, and shares the renderer process between the multiple tabs.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima pode ser representada numa vista do tipo Componente-e-Conetor utilizando o estilo arquitetural\t  \n\t  \n    ",
                "image": [],
                "options": [
                    "Publica\u00e7\u00e3o-subscri\u00e7\u00e3o",
                    "Canais-e-filtros",
                    "Cria\u00e7\u00e3o e destrui\u00e7\u00e3o din\u00e2mica",
                    "Cliente-servidor"
                ]
            },
            {
                "questionId": "CHAmazonSilkTwo",
                "content": "\n\t  Uma vantagem do \\ch{} relativamente ao Amazon Silk est\u00e1 relacionada com \n\t      \n    ",
                "image": [],
                "options": [
                    "Poder tirar partido da concorr\u00eancia",
                    "O \\emph{browser} ter que efetuar mais pedidos ao servidor",
                    "Utilizar t\u00e9cnicas de aprendizagem",
                    "N\u00e3o depender de um servi\u00e7o propriet\u00e1rio"
                ]
            },
            {
                "questionId": "CHSecurityLevel",
                "content": "\n\t  Uma das qualidades do \\ch{} \u00e9 executar o c\u00f3digo JavaScript dentro de um processo, permitindo isolar poss\u00edveis interfer\u00eancias entre a execu\u00e7\u00e3o de JavaScripts com diferentes origens. O grau de isolamento\n\t      \n    ",
                "image": [],
                "options": [
                    "\u00c9 sempre o mesmo para todas as inst\u00e2ncias do \\ch{}",
                    "\u00c9 definido em tempo de compila\u00e7\u00e3o do c\u00f3digo do \\ch{}",
                    "\u00c9 definido em tempo de inicializa\u00e7\u00e3o de uma inst\u00e2ncia do \\ch{}",
                    "Pode variar durante a execu\u00e7\u00e3o de cada inst\u00e2ncia do \\ch{}"
                ]
            },
            {
                "questionId": "CHOmniboxTactics",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Typing in the Omnibox (URL) bar triggers high-likelihood suggestions, which may similarly kick off a DNS lookup, TCP pre-connect, and even prerender the page in a hidden tab.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere\n\t      \n    ",
                "image": [],
                "options": [
                    "A t\u00e1tica de Manter Modelo de Utilizador",
                    "A t\u00e1tica de Manter Modelo de Tarefa",
                    "A t\u00e1tica de Manter Modelo de Sistema",
                    "T\u00e1ticas de Suportar a Iniciativa do Utilizador"
                ]
            },
            {
                "questionId": "SecurityInternalSource",
                "content": "\n\t  Nos casos em que a fonte dos ataques \u00e9 interna \u00e0 organiza\u00e7\u00e3o as t\u00e1ticas mais eficazes s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Detetar e Recuperar do Ataque",
                    "Resistir ao Ataque",
                    "Reagir ao Ataque",
                    "Resistir e Reagir ao Ataque"
                ]
            },
            {
                "questionId": "DataModel",
                "content": "\n\t  O detalhe em que se aplica o estilo arquitetural Modelo de Dados pode ser ao n\u00edvel conceptual, l\u00f3gico ou f\u00edsico.\n\t  \n      ",
                "image": [],
                "options": [
                    "Se houver requisitos arquiteturais de desempenho relativos aos acessos aos dados ent\u00e3o deve ser feito at\u00e9 ao n\u00edvel f\u00edsico",
                    "Deve ser sempre feito at\u00e9 ao n\u00edvel f\u00edsico",
                    "S\u00f3 deve ser at\u00e9 ao n\u00edvel l\u00f3gico nos casos em que o alvo da implementa\u00e7\u00e3o for uma base de dados relacional",
                    "Apenas o n\u00edvel conceptual \u00e9 efetivamente necess\u00e1rio, sendo os restantes opcionais"
                ]
            },
            {
                "questionId": "GPReceiverWriterStyle",
                "content": "\n    No sistema \\gp{} as \\emph{receiver} e as \\emph{writer threads} suportam a escrita ass\u00edncrona de m\u00e9tricas de forma a otimizar os acessos a disco. A intera\u00e7\u00e3o entre estes dois componentes segue o estilo arquitetural\n\n    ",
                "image": [],
                "options": [
                    "Cliente-servidor",
                    "Processos-comunicantes",
                    "Reposit\u00f3rio",
                    "Canais-e-filtros"
                ]
            },
            {
                "questionId": "GPCarbonRelay",
                "content": "\n    No sistema \\gp{} o componente \\emph{carbon-relay} implementa uma t\u00e1tica de\n\n    ",
                "image": [],
                "options": [
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Manter M\u00faltiplas C\u00f3pias de Dados",
                    "Redund\u00e2ncia Passiva",
                    "Redund\u00e2ncia Ativa"
                ]
            },
            {
                "questionId": "GPComposerUIQuality",
                "content": "\n    Que qualidade, ou qualidades, do sistema \\gp{} \u00e9(s\u00e3o) expressa(s) na frase: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usabilidade e desempenho",
                    "Usabilidade",
                    "Desempenho",
                    "Facilidade de teste"
                ]
            },
            {
                "questionId": "UsabilityNonArchitectural",
                "content": "\n\t  Algumas qualidades de usabilidade n\u00e3o s\u00e3o arquiteturais pois\n\t  \n      ",
                "image": [],
                "options": [
                    "Apenas dizem respeito aos \\emph{web designers}",
                    "Dependem de t\u00e1ticas de desempenho",
                    "Dependem de t\u00e1ticas de disponibilidade",
                    "N\u00e3o s\u00e3o implementadas por nenhuma t\u00e1tica de usabilidade"
                ]
            },
            {
                "questionId": "WorldWide",
                "content": "\n\t  Num sistema \\emph{world-wide}, como o Facebook ou o Amazon\n\t  \n      ",
                "image": [],
                "options": [
                    "Todas as funcionalidades podem ser transacionais",
                    "Apenas um conjunto restrito de funcionalidades \u00e9 transacional",
                    "N\u00e3o \u00e9 necess\u00e1rio ter propriedades transacionais pois todos os dados est\u00e3o em mem\u00f3ria",
                    "Apenas a propriedade transacional do isolamento \u00e9 assegurada"
                ]
            },
            {
                "questionId": "GMPicklePerformance",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{In Mailman 2, the MailList object's state is stored in a file called config.pck, which is just the pickled representation of the MailList object's dictionary. Every Python object has an attribute dictionary called \\_\\_dict\\_\\_. So saving a mailing list object then is simply a matter of pickling its \\_\\_dict\\_\\_ to a file, and loading it just involves reading the pickle from the file and reconstituting its \\_\\_dict\\_\\_.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o, n\u00e3o obstante simples, trouxe diversos problemas pois a qualidade do desempenho \u00e9 penalizada devido:\n\t  \n\t      \n    ",
                "image": [],
                "options": [
                    "A ser necess\u00e1rio descomprimir todo o ficheiro, mesmo que para obter apenas parte da sua informa\u00e7\u00e3o",
                    "A defici\u00eancias do algoritmo de compress\u00e3o e descompress\u00e3o do \\emph{pickle}",
                    "A ser uma solu\u00e7\u00e3o espec\u00edfica de Python",
                    "\u00c0s limita\u00e7\u00f5es de acesso concorrente a ficheiros "
                ]
            },
            {
                "questionId": "GMRestModularity",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Mailman 3 has adopted the Representational State Transfer (REST) model for external administrative control. REST is based on HTTP, and Mailman's default object representation is JSON. These protocols are ubiquitous and well-supported in a large variety of programming languages and environments, making it fairly easy to integrate Mailman with third party systems. REST was the perfect fit for Mailman 3, and now much of its functionality is exposed through a REST API.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o permitiu:\n\t      \n    ",
                "image": [],
                "options": [
                    "Aumentar a qualidade da facilidade de modifica\u00e7\u00e3o pois a nova interface utilizador passou a usar a interface REST",
                    "Aumentar a qualidade da facilidade de modifica\u00e7\u00e3o pois as aplica\u00e7\u00f5es externas deixaram de usar as funcionalidade de administra\u00e7\u00e3o",
                    "Aumentar a qualidade da interoperabilidade pois aplica\u00e7\u00f5es externas podem passar a ler e enviar mensagens para o \\gm{}",
                    "Nenhuma das anteriores"
                ]
            },
            {
                "questionId": "GMPipesFiltersData",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Once a message has made its way through the chains and rules and is accepted for posting, the message must be further processed before it can be delivered to the final recipients. For example, some headers may get added or deleted, and some messages may get some extra decorations that provide important disclaimers or information, such as how to leave the mailing list.}\n  \\newline\n\t  \n\t  Em que o estilo arquitetural Canais-e-Filtros \u00e9 usado no tratamento das mensagens. Neste contexto o tipo de dados que \u00e9 passado entre os filtros \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Uma sequ\u00eancia de bytes para permitir independ\u00eancia entre os filtros",
                    "Um objeto estruturado em \u00e1rvore para possibilitar a execu\u00e7\u00e3o simult\u00e2nea de diversos filtros",
                    "Uma sequ\u00eancia de bytes para permitir que a ordem de aplica\u00e7\u00e3o dos filtros n\u00e3o seja relevante",
                    "Um objeto estruturado em \u00e1rvore para facilitar o processamento de cada um dos filtros"
                ]
            },
            {
                "questionId": "GMReliabilityFIFO",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} prop\u00f5e-se uma solu\u00e7\u00e3o para garantir que nas situa\u00e7\u00f5es em que v\u00e1rios \\emph{queue runners} executam sobre a mesma \\emph{queue} a entrega de mensagens \u00e9 feita por ordem de chegada.\n  \\newline\n  \n  \\emph{There's another side effect of this algorithm that did cause problems during the early design of this system. Despite the unpredictability of email delivery in general, the best user experience is provided by processing the queue files in FIFO order, so that replies to a mailing list get sent out in roughly chronological order.}\n\t      \n    ",
                "image": [],
                "options": [
                    "A solu\u00e7\u00e3o proposta assegura efetivamente a entrega FIFO de mensagens e os v\u00e1rios processos n\u00e3o necessitam de se sincronizar",
                    "A solu\u00e7\u00e3o proposta assegura a entrega FIFO de mensagens mas os v\u00e1rios processos necessitam de se sincronizar",
                    "A solu\u00e7\u00e3o proposta n\u00e3o assegura a entrega FIFO de mensagens, podendo algumas mensagens ser entregues por outra ordem",
                    "A solu\u00e7\u00e3o proposta assegura a entrega FIFO de mensagens pois em cada \\emph{queue} apenas s\u00e3o colocadas mensagens com intervalos de tempo suficientemente espa\u00e7ados"
                ]
            },
            {
                "questionId": "GMMasterRunner",
                "content": "\n\t  A fun\u00e7\u00e3o do componente \\emph{Master Runner} do \\gm{} pode ser representada usando o estilo arquitetural\n\t      \n    ",
                "image": [],
                "options": [
                    "Cliente-Servidor",
                    "Par-a-Par",
                    "Cria\u00e7\u00e3o e Destrui\u00e7\u00e3o Din\u00e2mica",
                    "\\emph{Tiers}"
                ]
            },
            {
                "questionId": "GMMessagesPersistence",
                "content": "\n\t  No Mailman 3 as mensagens continuam a ser guardadas persistentemente usando \\emph{pickle} pois\n\t      \n    ",
                "image": [],
                "options": [
                    "Pois cada mensagem n\u00e3o necessita de ser acedida simultaneamente por diversos processos",
                    "Pois \\emph{pickle} \u00e9 eficiente a escrever e a ler mensagens",
                    "Pois cada mensagem \u00e9 guardada como um ficheiro num diret\u00f3rio",
                    "Todas as op\u00e7\u00f5es anteriores"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\t  No estilo arquitetural Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o os componentes, do ponto de vista da facilidade de modifica\u00e7\u00e3o dos m\u00f3dulos que executam\n\t  \n      ",
                "image": [],
                "options": [
                    "Dependem dos tipos de componentes publicadores",
                    "Dependem apenas dos tipos de eventos",
                    "S\u00e3o totalmente independentes entre si",
                    "Necessitam que seja suportada Liga\u00e7\u00e3o Diferida (\\emph{Defer Binding}) din\u00e2mica dos componentes, publicadores e subscritores, ao conetor para serem totalmente independentes entre si"
                ]
            },
            {
                "questionId": "ElasticityDeferBinding",
                "content": "\n\t  A elasticidade de um sistema, entendida como a capacidade do sistema se adaptar com facilidade a altera\u00e7\u00f5es de carga, \u00e9 muitas vezes apresentada como uma caracter\u00edstica necess\u00e1ria para a qualidade da escalabilidade. Para o grau dessa facilidade de adapta\u00e7\u00e3o contribuem solu\u00e7\u00f5es arquiteturais associadas\n\t      \n      ",
                "image": [],
                "options": [
                    "\u00c0 t\u00e1tica de Liga\u00e7\u00e3o Diferida (\\emph{Defer Binding})",
                    "\u00c0 t\u00e1tica de Redund\u00e2ncia Passiva",
                    "\u00c0 t\u00e1tica de Redund\u00e2ncia Ativa",
                    "\u00c0s t\u00e1ticas de Redund\u00e2ncia Passiva e Redund\u00e2ncia Ativa"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2013/20140130/exame-20140130-companion-pt-a.tex",
        "quizTitle": "..-data-2013-20140130-exame-20140130-companion-pt-a",
        "questions": [
            {
                "questionId": "GPCarbonBufferInterface",
                "content": "\n    No sistema \\gp{} o componente \\emph{carbon} fornece aos componentes \\emph{webapp} uma interface de acesso aos \\emph{buffers} com o objetivo de melhorar a(s) qualidade(s) de\n\n    ",
                "image": [],
                "options": [
                    "Desempenho",
                    "Fiabilidade e Desempenho",
                    "Fiabilidade",
                    "Seguran\u00e7a"
                ]
            },
            {
                "questionId": "GPCCView",
                "content": "\n    Uma vista arquitetural de mais alto n\u00edvel do tipo Componente-e-Conetor do sistema \\gp{} pode ser desenhada usando apenas o(s) estilo(s) arquitetural(ais)\n\n    ",
                "image": [],
                "options": [
                    "Reposit\u00f3rio e Processos-Comunicantes",
                    "Processos-Comunicantes",
                    "\\emph{Tiers}",
                    "Cliente-Servidor e Reposit\u00f3rio"
                ]
            },
            {
                "questionId": "GPComposerUIPerformance",
                "content": "\n    O componente \\emph{Composer UI} do sistema \\gp{}, descrito como - \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL} - para ser eficaz necessita de mostrar ao utilizador as altera\u00e7\u00f5es que efetua ao gr\u00e1fico de modo a que este obtenha retorno imediato sobre o resultado de cada uma das altera\u00e7\u00f5es que acaba de fazer. Para isso o sistema deve implementar t\u00e1ticas de\n\n    ",
                "image": [],
                "options": [
                    "Modelo de Tarefa",
                    "Modelo do Sistema",
                    "Desempenho",
                    "Modelo de Utilizador"
                ]
            },
            {
                "questionId": "MWLowCost",
                "content": "\n\t  O desenho da arquitetura do sistema \\mw{} foi condicionado por uma restri\u00e7\u00e3o associada \u00e0 necessidade de ter uma solu\u00e7\u00e3o de baixo custo. Para isso foi tomada a decis\u00e3o arquitetural de\n    \n    ",
                "image": [],
                "options": [
                    "Ter apenas um servidor para escrita",
                    "Guardar toda a informa\u00e7\u00e3o de forma est\u00e1tica",
                    "Dar prioridade ao desempenho e disponibilidade em detrimento da funcionalidade",
                    "Usar v\u00e1rios n\u00edveis de \\emph{cache}"
                ]
            },
            {
                "questionId": "MWTactics",
                "content": "\n\t  Considere uma vista arquitetural do tipo Componente-e-Conetor do sistema \\mw{} em que todos os clientes est\u00e3o ligados a um servidor atrav\u00e9s de um conetor de pedido-resposta que suporta as qualidades de disponibilidade e desempenho. Este conetor implementa uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Redund\u00e2ncia Passiva e Aumento da Efici\u00eancia dos Recursos",
                    "Redund\u00e2ncia Ativa e Aumento da Efici\u00eancia dos Recursos",
                    "Redund\u00e2ncia Ativa e Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Redund\u00e2ncia Passiva e Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "MWReliabilityImplementation",
                "content": "\n\t  O crit\u00e9rio de fiabilidade do sistema \\mw{}, segundo o qual as altera\u00e7\u00f5es efetuadas por um escritor s\u00e3o consistentemente preservadas nas suas subsequentes leituras, \u00e9 implementado \n    \n    ",
                "image": [],
                "options": [
                    "No servidor",
                    "Pelo distribuidor de carga (\\emph{load balancer})",
                    "Pelo reposit\u00f3rio",
                    "No cliente"
                ]
            },
            {
                "questionId": "MWReliabilityReadsTactic",
                "content": "\n\t  O sistema \\mw{} procura assegurar um crit\u00e9rio de fiabilidade segundo o qual a informa\u00e7\u00e3o escrita h\u00e1 mais de 30 segundos dever\u00e1 estar dispon\u00edvel para leitura para todos os leitores. Para se alcan\u00e7ar este crit\u00e9rio \u00e9 implementada uma t\u00e1tica de  \n    \n    ",
                "image": [],
                "options": [
                    "Rein\u00edcio Escalonado",
                    "Vota\u00e7\u00e3o",
                    "Funcionamento Degradado",
                    "Tratamento de Exce\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "MWVerBlobTactic",
                "content": "\n\t  Na descri\u00e7\u00e3o do sistema \\mw{} indica-se que:\n\t  \\newline\n\t  \n\t  \\emph{The first revision of the blob is stored in full, and following revisions to the same page are stored as diffs relative to the previous revision; the blobs are then gzipped. Because the revisions are grouped per page, they tend to be similar, so the diffs are relatively small and gzip works well. The compression ratio achieved on Wikimedia sites nears 98\\%.}\n\t  \\newline\n\t  \n\t  A transcri\u00e7\u00e3o refere uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Priorizar Eventos",
                    "Aumentar os Recursos",
                    "Aumentar a Efici\u00eancia dos Recursos",
                    "Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "CHQualities",
                "content": "\n\t  O \\ch{}, tal como descrito no caso estudado durante o semestre, foi desenhado para suportar as seguintes qualidades arquiteturais:\n    \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a e Mobilidade",
                    "Desempenho, Seguran\u00e7a e Interoperabilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade, Interoperabilidade e Mobilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade e Mobilidade"
                ]
            },
            {
                "questionId": "CHPerformanceQualityTwo",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Chrome maintains a single instance of the resource dispatcher, which is shared across all render processes, and runs within the browser kernel process.}\n\t  \\newline\n\t  \n\t  O \\emph{Resource Dispatcher} contribui para aumentar a qualidade do desempenho pois implementa uma t\u00e1tica de\n\t      \n    ",
                "image": [],
                "options": [
                    "Escalonamento de Recursos",
                    "Aumento de Recursos",
                    "Introdu\u00e7\u00e3o de Concorr\u00eancia",
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "CHAmazonSilk",
                "content": "\n\t  Uma vantagem do Amazon Silk relativamente ao \\ch{} est\u00e1 relacionada com \n\t      \n    ",
                "image": [],
                "options": [
                    "Separar o processo de \\emph{Renderer} dos restantes processos",
                    "O \\emph{browser} efetuar menos pedidos ao servidor",
                    "Utilizar t\u00e9cnicas de aprendizagem",
                    "Fazer \\emph{prefetching}"
                ]
            },
            {
                "questionId": "CHRenderStyle",
                "content": "\n\t  Uma vista arquitetural do tipo Componente-e-Conetor que descreva as intera\u00e7\u00f5es dentro do componente \\emph{Renderer Process} do \\ch{} utiliza um estilo arquitetural\n\t      \n    ",
                "image": [],
                "options": [
                    "Reposit\u00f3rio",
                    "Processos-comunicantes",
                    "Arquitetura orientada aos servi\u00e7os",
                    "Cliente-servidor"
                ]
            },
            {
                "questionId": "CHPrerenderTactics",
                "content": "\n\t  O \\ch{} faz em algumas situa\u00e7\u00f5es \\emph{prerender} de p\u00e1ginas. Para isso tira partido da\n\t      \n    ",
                "image": [],
                "options": [
                    "T\u00e1tica de Introduzir Concorr\u00eancia",
                    "P\u00e1gina estar em \\emph{cache}",
                    "T\u00e1tica de Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "T\u00e1tica de Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "CHOmniboxQualities",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Typing in the Omnibox (URL) bar triggers high-likelihood suggestions, which may similarly kick off a DNS lookup, TCP pre-connect, and even prerender the page in a hidden tab.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere qualidades de\n\t      \n    ",
                "image": [],
                "options": [
                    "Usabilidade e Facilidade de Modifica\u00e7\u00e3o",
                    "Desempenho e Usabilidade",
                    "Disponibilidade e Usabilidade",
                    "Disponibilidade e Desempenho"
                ]
            },
            {
                "questionId": "GMRestInteroperability",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Mailman 3 has adopted the Representational State Transfer (REST) model for external administrative control. REST is based on HTTP, and Mailman's default object representation is JSON. These protocols are ubiquitous and well-supported in a large variety of programming languages and environments, making it fairly easy to integrate Mailman with third party systems. REST was the perfect fit for Mailman 3, and now much of its functionality is exposed through a REST API.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o permitiu aumentar a qualidade da interoperabilidade pois \n\t      \n    ",
                "image": [],
                "options": [
                    "A nova interface utilizador passou a usar a interface REST",
                    "Aplica\u00e7\u00f5es externas podem passar a fazer administra\u00e7\u00e3o de listas de correio eletr\u00f3nico residentes no GNU Mailman",
                    "Aplica\u00e7\u00f5es externas podem passar a ler e enviar mensagens para o \\gm{}",
                    "A interface do \\gm{} ficou p\u00fablica"
                ]
            },
            {
                "questionId": "GMPipesFilters",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Once a message has made its way through the chains and rules and is accepted for posting, the message must be further processed before it can be delivered to the final recipients. For example, some headers may get added or deleted, and some messages may get some extra decorations that provide important disclaimers or information, such as how to leave the mailing list.}\n  \\newline\n\t  \n\t  O estilo arquitetural que se adequa a um processamento flex\u00edvel das mensagens \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Processos-Comunicantes",
                    "Cliente-Servidor",
                    "Canais-e-Filtros",
                    "Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GMDataModel",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Email messages can act as containers for other types of data, as defined in the various MIME standards. A container message part can encode an image, some audio, or just about any type of binary or text data, including other container parts.}\n  \\newline\n\t  \n\t  O estilo arquitetural que mais se adequa \u00e0 representa\u00e7\u00e3o da transcri\u00e7\u00e3o acima \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Modelo de Dados",
                    "Decomposi\u00e7\u00e3o",
                    "Aspetos",
                    "Canais-e-Filtros"
                ]
            },
            {
                "questionId": "GMPerformance",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{...Mailman supports running more than one runner process per queue directory...}\n  \\newline\n  \n  Com o objetivo de assegurar\n\t      \n    ",
                "image": [],
                "options": [
                    "A qualidade do desempenho",
                    "A qualidade da disponibilidade",
                    "A qualidade da fiabilidade",
                    "A entrega FIFO de mensagens"
                ]
            },
            {
                "questionId": "GMReliabilityBounce",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{VERP stands for Variable Envelope Return Path, and it is a well-known technique that mailing lists use to unambiguously determine bouncing recipient addresses. When an address on a mailing list is no longer active, the recipient's mail server will send a notification back to the sender. In the case of a mailing list, you want this bounce to go back to the mailing list, not to the original author of the message; the author can't do anything about the bounce, and worse, sending the bounce back to the author can leak information about who is subscribed to the mailing list. When the mailing list gets the bounce, however, it can do something useful, such as disable the bouncing address or remove it from the list's membership.}\n  \\newline\n  \n  Esta transcri\u00e7\u00e3o descreve qualidade(s) de\n\t      \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a",
                    "Seguran\u00e7a e Facilidade de Teste",
                    "Fiabilidade e Facilidade de Modifica\u00e7\u00e3o",
                    "Fiabilidade e Facilidade de Teste"
                ]
            },
            {
                "questionId": "GMSwitchboard",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{There is a core Mailman class called Switchboard which provides an interface for enqueuing (i.e., writing) and dequeuing (i.e., reading) the message object tree and metadata dictionary to files in a specific queue directory. Every queue directory has at least one switchboard instance, and every queue runner instance has exactly one switchboard.}\n  \\newline\n  \n  Esta transcri\u00e7\u00e3o cont\u00e9m informa\u00e7\u00e3o \u00fatil para vistas do tipo\n\t      \n      ",
                "image": [],
                "options": [
                    "M\u00f3dulo",
                    "Componente-e-Conetor",
                    "M\u00f3dulo e Componente-e-Conetor",
                    "M\u00f3dulo mas apenas para o estilo arquitetural Decomposi\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "FenixThree",
                "content": "\n\t  Os requisitos arquiteturalmente significativos da terceira arquitetura do sistema F\u00e9nix s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Facilidade de Modifica\u00e7\u00e3o e Interoperabilidade",
                    "Desempenho e Interoperabilidade",
                    "Facilidade de Desenvolvimento e Desempenho",
                    "Interoperabilidade"
                ]
            },
            {
                "questionId": "FenixOne",
                "content": "\n\t  Na primeira arquitetura do sistema F\u00e9nix era frequente os programadores esquecerem-se de reservar (\\emph{lock}) um objeto no contexto de uma transa\u00e7\u00e3o. Uma solu\u00e7\u00e3o para esta situa\u00e7\u00e3o pode ser arquiteturalmente descrita usando uma vista com o estilo arquitetural\n\t      \n      ",
                "image": [],
                "options": [
                    "Decomposi\u00e7\u00e3o",
                    "Aspetos",
                    "Utiliza\u00e7\u00e3o",
                    "Modelo de Dados"
                ]
            },
            {
                "questionId": "InternationalizationTactics",
                "content": "\n\t  A internacionaliza\u00e7\u00e3o da interface utilizador \u00e9 suportada pela(s) t\u00e1tica(s)\n\t      \n      ",
                "image": [],
                "options": [
                    "Modelo de Utilizador e \\emph{Undo}",
                    "Modelo de Utilizador",
                    "Modelo de Utilizador e Modelo de Sistema",
                    "Modelo de Sistema"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n\t  Para se poder implementar o padr\u00e3o Mapa de Identidades (\\emph{Identity Map}) \n\t      \n      ",
                "image": [],
                "options": [
                    "N\u00e3o \u00e9 poss\u00edvel suportar pesquisas SQL no servidor aplicacional",
                    "\u00c9 necess\u00e1rio fazer sempre uma pesquisa na base de dados antes de aceder a um objeto",
                    "Todos os acessos aos objetos t\u00eam que ser feitos atrav\u00e9s das suas inter-refer\u00eancias",
                    "\u00c9 necess\u00e1rio que cada objeto da base de dados possua um identificador \u00fanico"
                ]
            },
            {
                "questionId": "AvailabilityDefensive",
                "content": "\n\t  Na programa\u00e7\u00e3o defensiva o programador verifica se todos as condi\u00e7\u00f5es em que os m\u00f3dulos s\u00e3o invocados est\u00e3o de acordo com a sua especifica\u00e7\u00e3o, devendo, caso contr\u00e1rio, lan\u00e7ar uma exce\u00e7\u00e3o por forma a evitar a propaga\u00e7\u00e3o da falta. Quando a programa\u00e7\u00e3o defensiva \u00e9 aplicada no contexto da qualidade da disponibilidade est\u00e1-se a usar uma t\u00e1tica de\n\t      \n      ",
                "image": [],
                "options": [
                    "Tratamento de Exce\u00e7\u00f5es",
                    "Aumentar o Conjunto de Compet\u00eancias (\\emph{Increase Competence Set})",
                    "Preven\u00e7\u00e3o de Exce\u00e7\u00f5es",
                    "Dete\u00e7\u00e3o de Exce\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "ObserverUses",
                "content": "\n\t  No padr\u00e3o de desenho Observador, em que o modelo invoca um m\u00e9todo de notifica\u00e7\u00e3o nos seus observadores sempre que sofre altera\u00e7\u00f5es, pode-se afirmar em termos da rela\u00e7\u00e3o de Usa do estilo arquitetural Utiliza\u00e7\u00e3o que\n\t      \n      ",
                "image": [],
                "options": [
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador",
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador se forem passados dados na notifica\u00e7\u00e3o",
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador se forem passados dados complexos na notifica\u00e7\u00e3o",
                    "No que diz respeito \u00e0 notifica\u00e7\u00e3o, o m\u00f3dulo Modelo n\u00e3o usa o m\u00f3dulo Observador"
                ]
            },
            {
                "questionId": "UsesLayers",
                "content": "\n\t  Considere os estilos arquiteturais Utiliza\u00e7\u00e3o e Camadas.\n\t  \n      ",
                "image": [],
                "options": [
                    "Primeiro devem ser desenhadas vistas de Utiliza\u00e7\u00e3o e de seguida de Camadas",
                    "Primeiro devem ser desenhadas vistas de Camadas e depois de Utiliza\u00e7\u00e3o",
                    "As vistas de Camadas e de Utiliza\u00e7\u00e3o n\u00e3o necessitam de ser desenhadas por uma ordem pr\u00e9-definida",
                    "Sempre que h\u00e1 vistas de Utiliza\u00e7\u00e3o tem que haver pelo menos uma vista de camadas"
                ]
            },
            {
                "questionId": "SeveralStylesView",
                "content": "\n\t  Uma vista arquitetural\n\t  \n      ",
                "image": [],
                "options": [
                    "Apenas pode possuir um \u00fanico estilo arquitetural",
                    "Pode possuir v\u00e1rios estilos arquiteturais, mas apenas se forem dos tipos vista Componente-e-Conetor e Afeta\u00e7\u00e3o",
                    "Pode possuir v\u00e1rios estilos arquiteturais, mas apenas se forem do mesmo tipo vista",
                    "Pode possuir v\u00e1rios estilos arquiteturais, desde que essa seja a melhor forma de comunicar com um particular grupo de \\emph{stakeholders}"
                ]
            },
            {
                "questionId": "ApplyUses",
                "content": "\n\t  O estilo arquitetural Utiliza\u00e7\u00e3o\n\t  \n      ",
                "image": [],
                "options": [
                    "Deve ser aplicado apenas ap\u00f3s a vista de decomposi\u00e7\u00e3o estar terminada",
                    "Pode ser aplicado antes de haver uma vista de decomposi\u00e7\u00e3o",
                    "Uma vez aplicado numa vista pode levar \u00e0 revis\u00e3o da vista de decomposi\u00e7\u00e3o",
                    "Deve ser sempre aplicado em pelo menos numa vista do sistema"
                ]
            },
            {
                "questionId": "EnterpriseWide",
                "content": "\n\t  Num sistema \\emph{enterprise-wide}, como o sistema F\u00e9nix,\n\t  \n      ",
                "image": [],
                "options": [
                    "O comportamento transacional suportado de uma forma transparente \u00e9 uma vantagem para os programadores",
                    "N\u00e3o \u00e9 necess\u00e1rio ter comportamento transacional associado \u00e0 l\u00f3gica de neg\u00f3cio",
                    "A arquitetura componente-e-conetor tem que ter tr\u00eas \\emph{Tiers}",
                    "A arquitetura m\u00f3dulo tem que ter tr\u00eas Camadas"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2013/20140130/exame-20140130-companion-pt-b.tex",
        "quizTitle": "..-data-2013-20140130-exame-20140130-companion-pt-b",
        "questions": [
            {
                "questionId": "MWLowCost",
                "content": "\n\t  O desenho da arquitetura do sistema \\mw{} foi condicionado por uma restri\u00e7\u00e3o associada \u00e0 necessidade de ter uma solu\u00e7\u00e3o de baixo custo. Para isso foi tomada a decis\u00e3o arquitetural de\n    \n    ",
                "image": [],
                "options": [
                    "Ter apenas um servidor para escrita",
                    "Guardar toda a informa\u00e7\u00e3o de forma est\u00e1tica",
                    "Dar prioridade ao desempenho e disponibilidade em detrimento da funcionalidade",
                    "Usar v\u00e1rios n\u00edveis de \\emph{cache}"
                ]
            },
            {
                "questionId": "MWTactics",
                "content": "\n\t  Considere uma vista arquitetural do tipo Componente-e-Conetor do sistema \\mw{} em que todos os clientes est\u00e3o ligados a um servidor atrav\u00e9s de um conetor de pedido-resposta que suporta as qualidades de disponibilidade e desempenho. Este conetor implementa uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Redund\u00e2ncia Passiva e Aumento da Efici\u00eancia dos Recursos",
                    "Redund\u00e2ncia Ativa e Aumento da Efici\u00eancia dos Recursos",
                    "Redund\u00e2ncia Ativa e Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "Redund\u00e2ncia Passiva e Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "MWReliabilityImplementation",
                "content": "\n\t  O crit\u00e9rio de fiabilidade do sistema \\mw{}, segundo o qual as altera\u00e7\u00f5es efetuadas por um escritor s\u00e3o consistentemente preservadas nas suas subsequentes leituras, \u00e9 implementado \n    \n    ",
                "image": [],
                "options": [
                    "No servidor",
                    "Pelo distribuidor de carga (\\emph{load balancer})",
                    "Pelo reposit\u00f3rio",
                    "No cliente"
                ]
            },
            {
                "questionId": "MWReliabilityReadsTactic",
                "content": "\n\t  O sistema \\mw{} procura assegurar um crit\u00e9rio de fiabilidade segundo o qual a informa\u00e7\u00e3o escrita h\u00e1 mais de 30 segundos dever\u00e1 estar dispon\u00edvel para leitura para todos os leitores. Para se alcan\u00e7ar este crit\u00e9rio \u00e9 implementada uma t\u00e1tica de  \n    \n    ",
                "image": [],
                "options": [
                    "Rein\u00edcio Escalonado",
                    "Vota\u00e7\u00e3o",
                    "Funcionamento Degradado",
                    "Tratamento de Exce\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "MWVerBlobTactic",
                "content": "\n\t  Na descri\u00e7\u00e3o do sistema \\mw{} indica-se que:\n\t  \\newline\n\t  \n\t  \\emph{The first revision of the blob is stored in full, and following revisions to the same page are stored as diffs relative to the previous revision; the blobs are then gzipped. Because the revisions are grouped per page, they tend to be similar, so the diffs are relatively small and gzip works well. The compression ratio achieved on Wikimedia sites nears 98\\%.}\n\t  \\newline\n\t  \n\t  A transcri\u00e7\u00e3o refere uma t\u00e1tica de \n    \n    ",
                "image": [],
                "options": [
                    "Priorizar Eventos",
                    "Aumentar os Recursos",
                    "Aumentar a Efici\u00eancia dos Recursos",
                    "Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "InternationalizationTactics",
                "content": "\n\t  A internacionaliza\u00e7\u00e3o da interface utilizador \u00e9 suportada pela(s) t\u00e1tica(s)\n\t      \n      ",
                "image": [],
                "options": [
                    "Modelo de Utilizador e \\emph{Undo}",
                    "Modelo de Utilizador",
                    "Modelo de Utilizador e Modelo de Sistema",
                    "Modelo de Sistema"
                ]
            },
            {
                "questionId": "IdentityMap",
                "content": "\n\t  Para se poder implementar o padr\u00e3o Mapa de Identidades (\\emph{Identity Map}) \n\t      \n      ",
                "image": [],
                "options": [
                    "N\u00e3o \u00e9 poss\u00edvel suportar pesquisas SQL no servidor aplicacional",
                    "\u00c9 necess\u00e1rio fazer sempre uma pesquisa na base de dados antes de aceder a um objeto",
                    "Todos os acessos aos objetos t\u00eam que ser feitos atrav\u00e9s das suas inter-refer\u00eancias",
                    "\u00c9 necess\u00e1rio que cada objeto da base de dados possua um identificador \u00fanico"
                ]
            },
            {
                "questionId": "GPCarbonBufferInterface",
                "content": "\n    No sistema \\gp{} o componente \\emph{carbon} fornece aos componentes \\emph{webapp} uma interface de acesso aos \\emph{buffers} com o objetivo de melhorar a(s) qualidade(s) de\n\n    ",
                "image": [],
                "options": [
                    "Desempenho",
                    "Fiabilidade e Desempenho",
                    "Fiabilidade",
                    "Seguran\u00e7a"
                ]
            },
            {
                "questionId": "GPCCView",
                "content": "\n    Uma vista arquitetural de mais alto n\u00edvel do tipo Componente-e-Conetor do sistema \\gp{} pode ser desenhada usando apenas o(s) estilo(s) arquitetural(ais)\n\n    ",
                "image": [],
                "options": [
                    "Reposit\u00f3rio e Processos-Comunicantes",
                    "Processos-Comunicantes",
                    "\\emph{Tiers}",
                    "Cliente-Servidor e Reposit\u00f3rio"
                ]
            },
            {
                "questionId": "GPComposerUIPerformance",
                "content": "\n    O componente \\emph{Composer UI} do sistema \\gp{}, descrito como - \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL} - para ser eficaz necessita de mostrar ao utilizador as altera\u00e7\u00f5es que efetua ao gr\u00e1fico de modo a que este obtenha retorno imediato sobre o resultado de cada uma das altera\u00e7\u00f5es que acaba de fazer. Para isso o sistema deve implementar t\u00e1ticas de\n\n    ",
                "image": [],
                "options": [
                    "Modelo de Tarefa",
                    "Modelo do Sistema",
                    "Desempenho",
                    "Modelo de Utilizador"
                ]
            },
            {
                "questionId": "AvailabilityDefensive",
                "content": "\n\t  Na programa\u00e7\u00e3o defensiva o programador verifica se todos as condi\u00e7\u00f5es em que os m\u00f3dulos s\u00e3o invocados est\u00e3o de acordo com a sua especifica\u00e7\u00e3o, devendo, caso contr\u00e1rio, lan\u00e7ar uma exce\u00e7\u00e3o por forma a evitar a propaga\u00e7\u00e3o da falta. Quando a programa\u00e7\u00e3o defensiva \u00e9 aplicada no contexto da qualidade da disponibilidade est\u00e1-se a usar uma t\u00e1tica de\n\t      \n      ",
                "image": [],
                "options": [
                    "Tratamento de Exce\u00e7\u00f5es",
                    "Aumentar o Conjunto de Compet\u00eancias (\\emph{Increase Competence Set})",
                    "Preven\u00e7\u00e3o de Exce\u00e7\u00f5es",
                    "Dete\u00e7\u00e3o de Exce\u00e7\u00f5es"
                ]
            },
            {
                "questionId": "ObserverUses",
                "content": "\n\t  No padr\u00e3o de desenho Observador, em que o modelo invoca um m\u00e9todo de notifica\u00e7\u00e3o nos seus observadores sempre que sofre altera\u00e7\u00f5es, pode-se afirmar em termos da rela\u00e7\u00e3o de Usa do estilo arquitetural Utiliza\u00e7\u00e3o que\n\t      \n      ",
                "image": [],
                "options": [
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador",
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador se forem passados dados na notifica\u00e7\u00e3o",
                    "O m\u00f3dulo Modelo usa o m\u00f3dulo Observador se forem passados dados complexos na notifica\u00e7\u00e3o",
                    "No que diz respeito \u00e0 notifica\u00e7\u00e3o, o m\u00f3dulo Modelo n\u00e3o usa o m\u00f3dulo Observador"
                ]
            },
            {
                "questionId": "UsesLayers",
                "content": "\n\t  Considere os estilos arquiteturais Utiliza\u00e7\u00e3o e Camadas.\n\t  \n      ",
                "image": [],
                "options": [
                    "Primeiro devem ser desenhadas vistas de Utiliza\u00e7\u00e3o e de seguida de Camadas",
                    "Primeiro devem ser desenhadas vistas de Camadas e depois de Utiliza\u00e7\u00e3o",
                    "As vistas de Camadas e de Utiliza\u00e7\u00e3o n\u00e3o necessitam de ser desenhadas por uma ordem pr\u00e9-definida",
                    "Sempre que h\u00e1 vistas de Utiliza\u00e7\u00e3o tem que haver pelo menos uma vista de camadas"
                ]
            },
            {
                "questionId": "GMRestInteroperability",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Mailman 3 has adopted the Representational State Transfer (REST) model for external administrative control. REST is based on HTTP, and Mailman's default object representation is JSON. These protocols are ubiquitous and well-supported in a large variety of programming languages and environments, making it fairly easy to integrate Mailman with third party systems. REST was the perfect fit for Mailman 3, and now much of its functionality is exposed through a REST API.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o permitiu aumentar a qualidade da interoperabilidade pois \n\t      \n    ",
                "image": [],
                "options": [
                    "A nova interface utilizador passou a usar a interface REST",
                    "Aplica\u00e7\u00f5es externas podem passar a fazer administra\u00e7\u00e3o de listas de correio eletr\u00f3nico residentes no GNU Mailman",
                    "Aplica\u00e7\u00f5es externas podem passar a ler e enviar mensagens para o \\gm{}",
                    "A interface do \\gm{} ficou p\u00fablica"
                ]
            },
            {
                "questionId": "GMPipesFilters",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Once a message has made its way through the chains and rules and is accepted for posting, the message must be further processed before it can be delivered to the final recipients. For example, some headers may get added or deleted, and some messages may get some extra decorations that provide important disclaimers or information, such as how to leave the mailing list.}\n  \\newline\n\t  \n\t  O estilo arquitetural que se adequa a um processamento flex\u00edvel das mensagens \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Processos-Comunicantes",
                    "Cliente-Servidor",
                    "Canais-e-Filtros",
                    "Publica\u00e7\u00e3o-Subscri\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GMDataModel",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Email messages can act as containers for other types of data, as defined in the various MIME standards. A container message part can encode an image, some audio, or just about any type of binary or text data, including other container parts.}\n  \\newline\n\t  \n\t  O estilo arquitetural que mais se adequa \u00e0 representa\u00e7\u00e3o da transcri\u00e7\u00e3o acima \u00e9\n\t      \n    ",
                "image": [],
                "options": [
                    "Modelo de Dados",
                    "Decomposi\u00e7\u00e3o",
                    "Aspetos",
                    "Canais-e-Filtros"
                ]
            },
            {
                "questionId": "GMPerformance",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{...Mailman supports running more than one runner process per queue directory...}\n  \\newline\n  \n  Com o objetivo de assegurar\n\t      \n    ",
                "image": [],
                "options": [
                    "A qualidade do desempenho",
                    "A qualidade da disponibilidade",
                    "A qualidade da fiabilidade",
                    "A entrega FIFO de mensagens"
                ]
            },
            {
                "questionId": "GMReliabilityBounce",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{VERP stands for Variable Envelope Return Path, and it is a well-known technique that mailing lists use to unambiguously determine bouncing recipient addresses. When an address on a mailing list is no longer active, the recipient's mail server will send a notification back to the sender. In the case of a mailing list, you want this bounce to go back to the mailing list, not to the original author of the message; the author can't do anything about the bounce, and worse, sending the bounce back to the author can leak information about who is subscribed to the mailing list. When the mailing list gets the bounce, however, it can do something useful, such as disable the bouncing address or remove it from the list's membership.}\n  \\newline\n  \n  Esta transcri\u00e7\u00e3o descreve qualidade(s) de\n\t      \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a",
                    "Seguran\u00e7a e Facilidade de Teste",
                    "Fiabilidade e Facilidade de Modifica\u00e7\u00e3o",
                    "Fiabilidade e Facilidade de Teste"
                ]
            },
            {
                "questionId": "GMSwitchboard",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{There is a core Mailman class called Switchboard which provides an interface for enqueuing (i.e., writing) and dequeuing (i.e., reading) the message object tree and metadata dictionary to files in a specific queue directory. Every queue directory has at least one switchboard instance, and every queue runner instance has exactly one switchboard.}\n  \\newline\n  \n  Esta transcri\u00e7\u00e3o cont\u00e9m informa\u00e7\u00e3o \u00fatil para vistas do tipo\n\t      \n      ",
                "image": [],
                "options": [
                    "M\u00f3dulo",
                    "Componente-e-Conetor",
                    "M\u00f3dulo e Componente-e-Conetor",
                    "M\u00f3dulo mas apenas para o estilo arquitetural Decomposi\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "SeveralStylesView",
                "content": "\n\t  Uma vista arquitetural\n\t  \n      ",
                "image": [],
                "options": [
                    "Apenas pode possuir um \u00fanico estilo arquitetural",
                    "Pode possuir v\u00e1rios estilos arquiteturais, mas apenas se forem dos tipos vista Componente-e-Conetor e Afeta\u00e7\u00e3o",
                    "Pode possuir v\u00e1rios estilos arquiteturais, mas apenas se forem do mesmo tipo vista",
                    "Pode possuir v\u00e1rios estilos arquiteturais, desde que essa seja a melhor forma de comunicar com um particular grupo de \\emph{stakeholders}"
                ]
            },
            {
                "questionId": "ApplyUses",
                "content": "\n\t  O estilo arquitetural Utiliza\u00e7\u00e3o\n\t  \n      ",
                "image": [],
                "options": [
                    "Deve ser aplicado apenas ap\u00f3s a vista de decomposi\u00e7\u00e3o estar terminada",
                    "Pode ser aplicado antes de haver uma vista de decomposi\u00e7\u00e3o",
                    "Uma vez aplicado numa vista pode levar \u00e0 revis\u00e3o da vista de decomposi\u00e7\u00e3o",
                    "Deve ser sempre aplicado em pelo menos numa vista do sistema"
                ]
            },
            {
                "questionId": "CHQualities",
                "content": "\n\t  O \\ch{}, tal como descrito no caso estudado durante o semestre, foi desenhado para suportar as seguintes qualidades arquiteturais:\n    \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a e Mobilidade",
                    "Desempenho, Seguran\u00e7a e Interoperabilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade, Interoperabilidade e Mobilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade e Mobilidade"
                ]
            },
            {
                "questionId": "CHPerformanceQualityTwo",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Chrome maintains a single instance of the resource dispatcher, which is shared across all render processes, and runs within the browser kernel process.}\n\t  \\newline\n\t  \n\t  O \\emph{Resource Dispatcher} contribui para aumentar a qualidade do desempenho pois implementa uma t\u00e1tica de\n\t      \n    ",
                "image": [],
                "options": [
                    "Escalonamento de Recursos",
                    "Aumento de Recursos",
                    "Introdu\u00e7\u00e3o de Concorr\u00eancia",
                    "Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "CHAmazonSilk",
                "content": "\n\t  Uma vantagem do Amazon Silk relativamente ao \\ch{} est\u00e1 relacionada com \n\t      \n    ",
                "image": [],
                "options": [
                    "Separar o processo de \\emph{Renderer} dos restantes processos",
                    "O \\emph{browser} efetuar menos pedidos ao servidor",
                    "Utilizar t\u00e9cnicas de aprendizagem",
                    "Fazer \\emph{prefetching}"
                ]
            },
            {
                "questionId": "CHRenderStyle",
                "content": "\n\t  Uma vista arquitetural do tipo Componente-e-Conetor que descreva as intera\u00e7\u00f5es dentro do componente \\emph{Renderer Process} do \\ch{} utiliza um estilo arquitetural\n\t      \n    ",
                "image": [],
                "options": [
                    "Reposit\u00f3rio",
                    "Processos-comunicantes",
                    "Arquitetura orientada aos servi\u00e7os",
                    "Cliente-servidor"
                ]
            },
            {
                "questionId": "CHPrerenderTactics",
                "content": "\n\t  O \\ch{} faz em algumas situa\u00e7\u00f5es \\emph{prerender} de p\u00e1ginas. Para isso tira partido da\n\t      \n    ",
                "image": [],
                "options": [
                    "T\u00e1tica de Introduzir Concorr\u00eancia",
                    "P\u00e1gina estar em \\emph{cache}",
                    "T\u00e1tica de Manter M\u00faltiplas C\u00f3pias de Computa\u00e7\u00e3o",
                    "T\u00e1tica de Manter M\u00faltiplas C\u00f3pias de Dados"
                ]
            },
            {
                "questionId": "CHOmniboxQualities",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Typing in the Omnibox (URL) bar triggers high-likelihood suggestions, which may similarly kick off a DNS lookup, TCP pre-connect, and even prerender the page in a hidden tab.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere qualidades de\n\t      \n    ",
                "image": [],
                "options": [
                    "Usabilidade e Facilidade de Modifica\u00e7\u00e3o",
                    "Desempenho e Usabilidade",
                    "Disponibilidade e Usabilidade",
                    "Disponibilidade e Desempenho"
                ]
            },
            {
                "questionId": "FenixThree",
                "content": "\n\t  Os requisitos arquiteturalmente significativos da terceira arquitetura do sistema F\u00e9nix s\u00e3o\n\t      \n      ",
                "image": [],
                "options": [
                    "Facilidade de Modifica\u00e7\u00e3o e Interoperabilidade",
                    "Desempenho e Interoperabilidade",
                    "Facilidade de Desenvolvimento e Desempenho",
                    "Interoperabilidade"
                ]
            },
            {
                "questionId": "FenixOne",
                "content": "\n\t  Na primeira arquitetura do sistema F\u00e9nix era frequente os programadores esquecerem-se de reservar (\\emph{lock}) um objeto no contexto de uma transa\u00e7\u00e3o. Uma solu\u00e7\u00e3o para esta situa\u00e7\u00e3o pode ser arquiteturalmente descrita usando uma vista com o estilo arquitetural\n\t      \n      ",
                "image": [],
                "options": [
                    "Decomposi\u00e7\u00e3o",
                    "Aspetos",
                    "Utiliza\u00e7\u00e3o",
                    "Modelo de Dados"
                ]
            },
            {
                "questionId": "EnterpriseWide",
                "content": "\n\t  Num sistema \\emph{enterprise-wide}, como o sistema F\u00e9nix,\n\t  \n      ",
                "image": [],
                "options": [
                    "O comportamento transacional suportado de uma forma transparente \u00e9 uma vantagem para os programadores",
                    "N\u00e3o \u00e9 necess\u00e1rio ter comportamento transacional associado \u00e0 l\u00f3gica de neg\u00f3cio",
                    "A arquitetura componente-e-conetor tem que ter tr\u00eas \\emph{Tiers}",
                    "A arquitetura m\u00f3dulo tem que ter tr\u00eas Camadas"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2013/20140715/exame-20140715-companion-pt.tex",
        "quizTitle": "..-data-2013-20140715-exame-20140715-companion-pt",
        "questions": [
            {
                "questionId": "GPCarbonBufferInterfaceEE",
                "content": "\n    No sistema \\gp{}, com vista a se melhorar o desempenho, o componente \\emph{carbon} n\u00e3o escreve imediatamente em disco, usando um \\emph{buffer}:\n\n    ",
                "image": [],
                "options": [
                    "mas penaliza a fiabilidade pois os componentes \\emph{webapp} n\u00e3o t\u00eam acesso aos dados mais recentes",
                    "mas ainda assim penaliza o desempenho pois os \\emph{buffer} facilmente enche",
                    "e melhora a fiabilidade pois \u00e9 fornecida uma interface para os componentes \\emph{webapp} acederem aos dados mais recentes",
                    "e melhora a seguran\u00e7a pois o \\emph{buffer} est\u00e1 protegido de ataques"
                ]
            },
            {
                "questionId": "GPCarbonRelayEE",
                "content": "\n    No sistema \\gp{} o componente \\emph{carbon-relay} implementa uma t\u00e1tica de manter m\u00faltiplas c\u00f3pias de computa\u00e7\u00e3o, com vista a melhorar a qualidade de\n\n    ",
                "image": [],
                "options": [
                    "desempenho",
                    "seguran\u00e7a",
                    "facilidade de modifica\u00e7\u00e3o",
                    "facilidade de utiliza\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GPWhisperViewTypeEE",
                "content": "\n    Para descrever a estrutura de um ficheiro \\emph{whisper} do sistema \\gp{} deve-se usar uma vista do tipo vista \n\n    ",
                "image": [],
                "options": [
                    "decomposi\u00e7\u00e3o",
                    "generaliza\u00e7\u00e3o",
                    "modelo de dados",
                    "utiliza\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "MWLowCostEE",
                "content": "\n\t  No desenho da arquitetura do sistema \\mw{} foi decidido ter apenas um servidor de escrita\n    \n    ",
                "image": [],
                "options": [
                    "pois o desempenho n\u00e3o \u00e9 muito relevante",
                    "para guardar toda a informa\u00e7\u00e3o de forma est\u00e1tica",
                    "devido a se pretender ter uma solu\u00e7\u00e3o de baixo custo e reduzida complexidade",
                    "pois n\u00e3o h\u00e1 requisitos de disponibilidade"
                ]
            },
            {
                "questionId": "MWReliabilityImplementationEE",
                "content": "\n\t  O crit\u00e9rio de fiabilidade do sistema \\mw{}, segundo o qual as altera\u00e7\u00f5es efetuadas por um escritor s\u00e3o consistentemente preservadas nas suas subsequentes leituras, \n    \n    ",
                "image": [],
                "options": [
                    "pode levar a que escritor receba uma exce\u00e7\u00e3o indicando que a informa\u00e7\u00e3o ainda n\u00e3o est\u00e1 dispon\u00edvel",
                    "obriga a associar uma marca de tempo a cada escrita",
                    "resulta em que os pedidos do escritor t\u00eam prioridade sobre os pedidos dos restantes leitores",
                    "resulta em que o escritor n\u00e3o possa fazer muitas escritas simult\u00e2neas"
                ]
            },
            {
                "questionId": "MWQualitiesEE",
                "content": "\n\t  Qual das seguintes qualidades n\u00e3o \u00e9 relevante para o sistema \\mw{}?\n    \n    ",
                "image": [],
                "options": [
                    "Desempenho",
                    "Facilidade de teste",
                    "Disponibilidade",
                    "Usabilidade"
                ]
            },
            {
                "questionId": "MWReliabilityReadsImplementationEE",
                "content": "\n\t  O sistema \\mw{} procura assegurar um crit\u00e9rio de fiabilidade segundo o qual a informa\u00e7\u00e3o escrita h\u00e1 mais de 30 segundos est\u00e1 dispon\u00edvel, para leitura, para todos os leitores. Para se alcan\u00e7ar este crit\u00e9rio o distribuidor de carga pode deixar de aceitar escritas at\u00e9 que\n    \n    ",
                "image": [],
                "options": [
                    "Os servidores de leitura tenham respondido a todos os pedidos de leitura",
                    "At\u00e9 que os servidores de leitura se tenham sincronizado com o servidor de escrita",
                    "At\u00e9 que o servidor de escrita tenha processado todas as escritas pendentes",
                    "Durante cerca de 30 segundos"
                ]
            },
            {
                "questionId": "MWResourceLoaderTacticEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do sistema \\mw{} indica-se que:\n\t  \\newline\n\t  \n\t  \\emph{To optimize the delivery of JavaScript and CSS assets, the ResourceLoader module was developed to optimize delivery of JS and CSS. Started in 2009, it was completed in 2011 and has been a core feature of MediaWiki since version 1.17. ResourceLoader works by loading JS and CSS assets on demand, thus reducing loading and parsing time when features are unused, for example by older browsers. It also minifies the code, groups resources to save requests, and can embed images as data URIs.}\n\t  \\newline\n\t  \n\t  O \\emph{ResourceLoader} suporta a qualidade de\n    \n    ",
                "image": [],
                "options": [
                    "Desempenho",
                    "Facilidade de utiliza\u00e7\u00e3o",
                    "Disponibilidade",
                    "Facilidade de manuten\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "CHQualitiesEE",
                "content": "\n\t  O \\ch{}, tal como descrito no caso estudado durante o semestre, foi desenhado para suportar as seguintes qualidades arquiteturais:\n    \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a e Mobilidade",
                    "Desempenho, Seguran\u00e7a e Interoperabilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade, Interoperabilidade e Mobilidade",
                    "Seguran\u00e7a, Desempenho, Usabilidade e Mobilidade"
                ]
            },
            {
                "questionId": "CHPerformanceQualityEE",
                "content": "\n\t  No \\ch{}, ao se associar um processo \\emph{Renderer} a cada \\emph{Tab}, alcan\u00e7am-se as qualidades de\n    \n    ",
                "image": [],
                "options": [
                    "Desempenho e Seguran\u00e7a",
                    "Desempenho",
                    "Seguran\u00e7a",
                    "Mobilidade e Desempenho"
                ]
            },
            {
                "questionId": "CHPrerenderTacticsEE",
                "content": "\n\t  O \\ch{} faz em algumas situa\u00e7\u00f5es \\emph{prerender} de p\u00e1ginas. Com isso consegue alcan\u00e7ar qualidades de\n\t      \n    ",
                "image": [],
                "options": [
                    "Desempenho",
                    "Desempenho e Disponibilidade",
                    "Disponibilidade",
                    "Seguran\u00e7a e Disponibilidade"
                ]
            },
            {
                "questionId": "CHOmniboxTacticsEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{Typing in the Omnibox (URL) bar triggers high-likelihood suggestions, which may similarly kick off a DNS lookup, TCP pre-connect, and even prerender the page in a hidden tab.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere qualidade de \n\t      \n    ",
                "image": [],
                "options": [
                    "Desempenho e Facilidade de Utiliza\u00e7\u00e3o",
                    "Seguran\u00e7a e Facilidade de Utiliza\u00e7\u00e3o",
                    "Desempenho e Seguran\u00e7a",
                    "Desempenho e Disponibilidade"
                ]
            },
            {
                "questionId": "CHAmazonSilkTwoEE",
                "content": "\n\t  Arquiteturalmente o \\ch{} e o Amazon Silk diferem pois\n\t      \n    ",
                "image": [],
                "options": [
                    "Apenas um deles tira partido da concorr\u00eancia",
                    "Apenas um deles utiliza t\u00e9cnicas de aprendizagem",
                    "Apenas um deles faz \\emph{prefetch}",
                    "Apenas um deles faz uso de um servi\u00e7o propriet\u00e1rio"
                ]
            },
            {
                "questionId": "CHMobilityArchitecturalStyleEE",
                "content": "\n\t  \n\t  Na descri\u00e7\u00e3o do caso \\ch{} pode-se ler:\n\t  \\newline\n\t  \n\t  \\emph{On Android devices, Chrome leverages the same multi-process architecture as the desktop version - there is a browser process, and one or more renderer processes. The one difference is that due to memory constraints of the mobile device, Chrome may not be able to run a dedicated renderer for each open tab. Instead, Chrome determines the optimal number of renderer processes based on available memory, and other constraints of the device, and shares the renderer process between the multiple tabs.} \n\t  \\newline\n\t  \n\t  A descri\u00e7\u00e3o acima refere uma qualidade, por vezes referida como mobilidade, devido \u00e0 adapta\u00e7\u00e3o \u00e0s carater\u00edsticas do dispositivo. Devido a esta qualidade que outras qualidades podem ser comprometidas.\t  \n\t  \n    ",
                "image": [],
                "options": [
                    "Disponibilidade",
                    "Desempenho e Disponibilidade",
                    "Seguran\u00e7a e Disponibilidade",
                    "Facilidade de modifica\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GMPicklePerformanceEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{In Mailman 2, the MailList object's state is stored in a file called config.pck, which is just the pickled representation of the MailList object's dictionary. Every Python object has an attribute dictionary called \\_\\_dict\\_\\_. So saving a mailing list object then is simply a matter of pickling its \\_\\_dict\\_\\_ to a file, and loading it just involves reading the pickle from the file and reconstituting its \\_\\_dict\\_\\_.}\n  \\newline\n\t  \n\t  Para descrever a estrutura interna do ficheiro config.pck deve-se usar uma vista do estilo arquitetural:\n\t  \n\t      \n    ",
                "image": [],
                "options": [
                    "Utiliza\u00e7\u00e3o",
                    "Aspetos",
                    "Decomposi\u00e7\u00e3o",
                    "Modelo de dados"
                ]
            },
            {
                "questionId": "GMPerformanceEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{...Mailman supports running more than one runner process per queue directory...}\n  \\newline\n  \n  A qual corresponde a uma t\u00e1tica de \n\t      \n    ",
                "image": [],
                "options": [
                    "Introduzir concorr\u00eancia",
                    "Replica\u00e7\u00e3o ativa",
                    "Aumentar recursos",
                    "Aumentar a efici\u00eancia dos recursos"
                ]
            },
            {
                "questionId": "GMRestModularityEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} indica-se que:\n  \\newline\n  \n  \\emph{Mailman 3 has adopted the Representational State Transfer (REST) model for external administrative control. REST is based on HTTP, and Mailman's default object representation is JSON. These protocols are ubiquitous and well-supported in a large variety of programming languages and environments, making it fairly easy to integrate Mailman with third party systems. REST was the perfect fit for Mailman 3, and now much of its functionality is exposed through a REST API.}\n  \\newline\n\t  \n\t  Esta solu\u00e7\u00e3o permitiu:\n\t      \n    ",
                "image": [],
                "options": [
                    "Melhorar a qualidade da facilidade de modifica\u00e7\u00e3o pois a nova interface REST esconde a estrutura das mensagens",
                    "Melhorar a qualidade de interoperabilidade pois as aplica\u00e7\u00f5es externas passaram a poder usar as funcionalidade de administra\u00e7\u00e3o",
                    "Melhorar a qualidade da interoperabilidade pois aplica\u00e7\u00f5es externas podem passar a ler e enviar mensagens para o \\gm{}",
                    "Nenhuma das anteriores"
                ]
            },
            {
                "questionId": "GMReliabilityFIFOEE",
                "content": "\n\t  Na descri\u00e7\u00e3o do \\gm{} refere-se:\n  \\newline\n  \n  \\emph{There's another side effect of this algorithm that did cause problems during the early design of this system. Despite the unpredictability of email delivery in general, the best user experience is provided by processing the queue files in FIFO order, so that replies to a mailing list get sent out in roughly chronological order.}\n  \\newline\n  \n  A qualidade que se pretende tratar \u00e9:\n\t      \n    ",
                "image": [],
                "options": [
                    "Seguran\u00e7a",
                    "Desempenho",
                    "Disponibilidade",
                    "Facilidade de utiliza\u00e7\u00e3o"
                ]
            },
            {
                "questionId": "GMMessagesPersistenceEE",
                "content": "\n\t  No Mailman 3 as mensagens continuam a ser guardadas persistentemente usando \\emph{pickle}\n\t      \n    ",
                "image": [],
                "options": [
                    "Pois cada mensagem n\u00e3o necessita de ser acedida simultaneamente por diversos processos",
                    "Pois a estrutura de dados de uma mensagem \u00e9 mais facilmente implementada num ficheiro",
                    "Pois \u00e9 menos eficiente guardar as mensagens numa base de dados relacional",
                    "Todas as op\u00e7\u00f5es anteriores"
                ]
            },
            {
                "questionId": "GMMasterRunnerEE",
                "content": "\n\t  A fun\u00e7\u00e3o do componente \\emph{Master Runner} do \\gm{} pode ser representada usando o estilo arquitetural\n\t      \n    ",
                "image": [],
                "options": [
                    "Cliente-Servidor",
                    "Par-a-Par",
                    "Cria\u00e7\u00e3o e Destrui\u00e7\u00e3o Din\u00e2mica",
                    "\\emph{Tiers}"
                ]
            },
            {
                "questionId": "FirstEE",
                "content": "\n    A arquitetura de software de um sistema\n\n    ",
                "image": [],
                "options": [
                    "\u00c9 uma vista de alto n\u00edvel do sistema com objetivo de perceber quais s\u00e3o os objetivos e as funcionalidades do sistema",
                    "\u00c9 composta de unidades de c\u00f3digo, elementos de execu\u00e7\u00e3o, hardware e pessoas, assim como os relacionamentos entre eles",
                    "\u00c9 um conjunto de regras que a equipa de desenvolvimento deve seguir para desenvolver o sistema",
                    "\u00c9 um conjunto de diagramas que mostram os elementos de execu\u00e7\u00e3o do sistema e os seus relacionamentos"
                ]
            },
            {
                "questionId": "SecondEE",
                "content": "\n\tA dcumenta\u00e7\u00e3o da arquitetura de software de um sistema \u00e9 frequentemente composta de diferentes vistas, pois\n\n  ",
                "image": [],
                "options": [
                    "\u00c9 necess\u00e1ria uma vista para cada \\emph{stakeholder} do sistema",
                    "Uma vista apenas pode ser muito simplista",
                    "As vistas descrevem diferentes aspetos do sistema",
                    "Todas as anteriores"
                ]
            },
            {
                "questionId": "ThirdEE",
                "content": "\n\tEstabecer uma conven\u00e7\u00e3o de programa\u00e7\u00e3o como \n  \\begin{quote}\n\t  Todas as vari\u00e1veis globais do sistema devem come\u00e7ar pelo prefixo\n    \\textsc{g\\_}, enquanto que as vari\u00e1veis n\u00e3o-globais n\u00e3o possuem \\emph{underscores} no nome\n  \\end{quote}\n\n  ",
                "image": [],
                "options": [
                    "Nunca \u00e9 uma decis\u00e3o arquitetural pois \u00e9 de demasiado baixo n\u00edvel",
                    "\u00c9 sempre uma decis\u00e3o arquitetural pois aplica-se a todo o programa",
                    "Pode ser uma decis\u00e3o arquitetural, dependendo dos requisitos do sistema",
                    "Pode ser uma decis\u00e3o arquitetural, dependendo da experi\u00eancia do arquiteto"
                ]
            },
            {
                "questionId": "FourthEE",
                "content": "\n\tConsidere que um dos requisitos de um jogo de xadrez com um interface gr\u00e1fica \u00e9 que seja poss\u00edvel executar nos sistemas operativos Microsoft Windows e \n  Apple Mac OS X. Uma boa solu\u00e7\u00e3o para este sistema deveria:\n\n  ",
                "image": [],
                "options": [
                    "Criar uma decomposi\u00e7\u00e3o em que h\u00e1 um m\u00f3dulo correspondente ao Windows OS e outro ao Mac OS X, em que cada um destes m\u00f3dulos encapsula o comportamento dos respetivos sistemas operativos",
                    "Utilizar uma arquitetura de 3 camadas com as seguintes camadas, de cima para baixo: Apresenta\u00e7\u00e3o, L\u00f3gica de Dom\u00ednio, Acesso a Dados",
                    "Utilizar uma arquitetura de camadas em que o n\u00edvel mais baixo fornece uma interface para criar uma interface gr\u00e1fica",
                    "Utilizar duas vistas de implanta\u00e7\u00e3o, em que cada uma delas atribui diferentes componentes a diferentes m\u00e1quinas com diferentes sistemas operativos"
                ]
            },
            {
                "questionId": "FifthEE",
                "content": "\n\tUm outro requisito do jogo de xadrez da pergunta anterior \u00e9 que mantem uma tabela com as melhores pontua\u00e7\u00f5es do jogo. Naturalmente, esta informa\u00e7\u00e3o deve ser mantida entre duas diferentes execu\u00e7\u00f5es do sistema. Assumindo que o jogo \u00e9 uma aplica\u00e7\u00e3o de \\emph{desktop}\n\n  ",
                "image": [],
                "options": [
                    "Devemos usar um estilo Utiliza\u00e7\u00e3o",
                    "Devemos usar uma arquitetura de camadas com uma camada de acesso a dados",
                    "Devemos identificar um m\u00f3dulo para escrever as pontua\u00e7\u00f5es num estilo Decomposi\u00e7\u00e3o",
                    "Devemos atribuir a responsabilidade de escrever as pontua\u00e7\u00f5es para um outro m\u00f3dulo que j\u00e1 tenha essas responsabilidades"
                ]
            },
            {
                "questionId": "SixthEE",
                "content": "\n\tPara se obter um r\u00e1pido \\emph{time-to-market}, as companhias de software est\u00e3o a usar cada vez mais estrat\u00e9gias de entregas incrementais, em que cada nova entrega cont\u00e9m novas funcionalidades. Que estilo arquitetural \u00e9 melhor para analisar se a arquitetura de software do sistema se adequa \u00e0 entrega incremental de vers\u00f5es do sistema?\n \n  ",
                "image": [],
                "options": [
                    "O estilo Decomposi\u00e7\u00e3o",
                    "O estilo Implanta\u00e7\u00e3o",
                    "O estilo Utiliza\u00e7\u00e3o",
                    "O estilo Atribui\u00e7\u00e3o de trabalho"
                ]
            },
            {
                "questionId": "SeventhEE",
                "content": "\n\tQual das seguintes frases melhor descreve o rela\u00e7\u00e3o entre m\u00f3dulos e componentes?\n\n  ",
                "image": [],
                "options": [
                    "Um m\u00f3dulo pode conter c\u00f3digo de diversos componentes",
                    "Um componente pode executar c\u00f3digo de diversos m\u00f3dulos",
                    "Um m\u00f3dulo pode executar c\u00f3digo de diversos componentes",
                    "Um componente pode conter c\u00f3digo de diversos m\u00f3dulos"
                ]
            },
            {
                "questionId": "EighthEE",
                "content": "\n\tO padr\u00e3o \\emph{Transaction Script}\n\n  ",
                "image": [],
                "options": [
                    "Necessita de uma equipa mais capaz, pois \u00e9 dif\u00edcil de desenvolver",
                    "Permite desenvolvimento independente com reduzida comunica\u00e7\u00e3o entre os membros da equipa",
                    "\u00c9 melhor para dom\u00ednios complexos, por causa de ser f\u00e1cil de manter",
                    "Nenhum dos anteriores"
                ]
            },
            {
                "questionId": "NinethEE",
                "content": "\n\tO padr\u00e3o \\emph{Service Layer} \u00e9 frequentemente usado em conjuntamente com\n \n  ",
                "image": [],
                "options": [
                    "O padr\u00e3o \\emph{Transaction Script} para ajudar a demarcar as transa\u00e7\u00f5es de neg\u00f3cio",
                    "O padr\u00e3o Modelo de Dom\u00ednio para reduzir a interface da camada de l\u00f3gica de neg\u00f3cio para um conjunto controlado de funcionalidades",
                    "A camada de acesso a dados para poder aceder aos dados que necessita em cada servi\u00e7o",
                    "Nenhum dos anteriores"
                ]
            },
            {
                "questionId": "TenthEE",
                "content": "\n\tO padr\u00e3o \\emph{Identity Map} \u00e9 usado\n \n  ",
                "image": [],
                "options": [
                    "Para impedir os dados de ficarem incoerentes quando h\u00e1 m\u00faltiplos acessos dentro da mesma transa\u00e7\u00e3o de neg\u00f3cio \u00e0 mesma entidade",
                    "Para aumentar o desempenho da aplica\u00e7\u00e3o, porque faz cache dos valores previamente carregados em mem\u00f3ria, desta forma reduzindo o n\u00famero de acessos \u00e0 base de dados",
                    "Para evitar carregar muitos dados da base de dados quando uma dada entidade que tem muitas rela\u00e7\u00f5es com outras entidades \u00e9 carregada",
                    "Nenhuma das anteriores"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/exam/exam20150109/exame-20150109-companion-A.tex",
        "quizTitle": "..-data-2014-exam-exam20150109-exame-20150109-companion-A",
        "questions": [
            {
                "questionId": "ArchitectureInfluenceCycle",
                "content": "\n  The software architecture of a system\n\n    ",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements.",
                    "Depends more on the architect's experience than on anything\n    else.",
                    "Should not depend on the skills of the developing team.",
                    "Is driven by a trade-off among the stakeholders needs."
                ]
            },
            {
                "questionId": "TechoGeeks",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{techno-geeks} architects. This kind of architect\n\t\n    ",
                "image": [],
                "options": [
                    "May be responsible for the Featuritis problems of architectures.",
                    "May be responsible for the Performitis problems of architectures.",
                    "Is focused on creating common generalizations of several systems.",
                    "Is focused on the details of the architecture."
                ]
            },
            {
                "questionId": "FeaturitisOrderPad",
                "content": "\n\tFrank Buschmann states that:\n\t\t\n\t\\begin{quote}\n\t\tFeaturitis is the tendency to trade functional coverage for quality - the more functions the earlier they're delivered, the better.\n\t\\end{quote}\n\t\n\tIn the OrderPad system the architect regretted not getting performance tests going earlier. The OrderPad system\n\n    ",
                "image": [],
                "options": [
                    "Suffered from featuritis, because the architect decided to delay the difficult parts for latter in the development.",
                    "Did not suffer from featuritis.",
                    "Suffered from some level of featuritis, but it allowed to have a pilot from which the team learned.",
                    "Suffered from featuritis, but it had no impact on the final development."
                ]
            },
            {
                "questionId": "ArchitectureDefinition",
                "content": "\n  The software architecture of a system\n\n  ",
                "image": [],
                "options": [
                    "Is a high-level view of the system with the purpose of\n  understanding what are the system's goals and features.",
                    "Is composed of things such as code units, runtime elements,\n  hardware, and people, together with the relationships among them.",
                    "Is a set of guidelines that the developing team should\n  follow in the development of the system.",
                    "Is a set of diagrams that show the runtime elements of the\n  system and their relationships."
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n  Which of the following phrases best describe the relationship\n  between modules and components?\n\n  ",
                "image": [],
                "options": [
                    "A module may contain code from different components.",
                    "A component may execute code from different modules.",
                    "A module may execute code from different components.",
                    "A component may contain code from different modules."
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The current location is the source of the stimulus.",
                    "The traffic monitoring system is the environment.",
                    "The Google Map is the artefact.",
                    "The location information is correctly included with a probability of 99.99\\% is the response measure."
                ]
            },
            {
                "questionId": "Checksum",
                "content": "\n\tChecksum is a technic that it is often used in architectural design. It can be used as\n\t\t\n    ",
                "image": [],
                "options": [
                    "A Condition Monitoring tactic for the Availability quality.",
                    "An Encrypt Data tactic for the Security quality.",
                    "A Verify Message Integrity tactic to React to Attacks for the Security quality.",
                    "An Exception Prevention tactic to Prevent Faults for the Availability quality."
                ]
            },
            {
                "questionId": "Attack",
                "content": "\n\tAn attack is\n\t\t\n    ",
                "image": [],
                "options": [
                    "The source of stimulus for scenarios of the Availability quality.",
                    "The stimulus for scenarios of the Availability quality.",
                    "The stimulus for scenarios of the Security quality.",
                    "The source of stimulus for scenarios of the Security quality."
                ]
            },
            {
                "questionId": "SocialCalcTactics",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tAs the user scrolls the spreadsheet through our custom-drawn scroll bars, we dynamically update the innerHTML of the pre-drawn \\textsc{<td>} elements. This means we don't need to create or destroy any \\textsc{<tr>} or \\textsc{<td>} elements in many common cases, which greatly speeds up response time.\n\t\\end{quote} \n\t\n\tThis corresponds to the application of\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate tactic.",
                    "Increase resource efficiency tactic.",
                    "Introduce concurrency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ThousandParsecTactics",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tA ruleset designer thus has the ability to create new object types or store additional information in the existing object types as required by the ruleset, allowing for virtually unlimited extensibility in terms of the available physical objects in the game.\n\t\\end{quote} \n\t\n\tThis excerpt can be represented as a modifiability scenario where\n\n    ",
                "image": [],
                "options": [
                    "The source of stimulus is the ruleset.",
                    "The ruleset designer is the stimulus.",
                    "The environment is design time.",
                    "The response is defer binding."
                ]
            },
            {
                "questionId": "GitTactics",
                "content": "\n\tIn the description of the Git case study can be read:\n\t\n\t\\begin{quote}\n\t\tGit tackles the storage space problem by packing objects in a compressed format, using an index file which points to offsets to locate specific objects in the corresponding packed file.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Condition monitoring.",
                    "Reduce overhead.",
                    "Increase resource efficiency."
                ]
            },
            {
                "questionId": "DesigningArchitecture",
                "content": "\n  The architectural significant requirements are important in the process of creating\n  the software architecture for a system because they define\n \n  ",
                "image": [],
                "options": [
                    "The most important requirements (both functional and\n  qualities) that the system must achieve.",
                    "How the components manage the communication between the\n  remaining elements in the system.",
                    "The stakeholders that drive the development of the system.",
                    "The tactics that satisfy the most important requirements for\n  the system."
                ]
            },
            {
                "questionId": "DecompositionGeneralization",
                "content": "\n  Consider that a chess game should\n  provide an automatic and intelligent chess player, and that to\n  implement that player we will use some of the many chess engines\n  already available in the market.  Moreover, the system should allow\n  the user to choose which engine to use for each new game.  Given\n  these requirements, which of the architectural styles from the\n  module viewtype are best suited to satisfy them?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Decomposition and Uses styles.",
                    "The Layered style.",
                    "The Generalization and Decomposition styles."
                ]
            },
            {
                "questionId": "UsesStyle",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Deployment style.",
                    "The Uses style.",
                    "The Work-assignment style."
                ]
            },
            {
                "questionId": "Layered",
                "content": "\n  Assume that one of the requirements for a graphical chess game is\n  that it should be able to run both in Microsoft's Windows and\n  Apple's Mac OS X operating systems.  A good solution for this system\n  would:\n\n  ",
                "image": [],
                "options": [
                    "Create a decomposition where there is a module corresponding\n  to the Windows OS and another one for the Mac OS X, each one\n  responsible for containing the OS-specific code.",
                    "Use a classic 3-layer architecture with the following\n  layers, from top to bottom: Presentation, Domain Logic, and Data\n  Access.",
                    "Use an aspect-oriented architecture, where an aspect is used to generate a graphical interface.",
                    "Use two deployment views, each one allocating different\n  components to different machines with different operating systems."
                ]
            },
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view.",
                    "It represents a relation between a connector's role and a port of one of its internal components.",
                    "It represents a relation between a component's port and a port of one of its internal components.",
                    "It represent a relation between a component's port and a connector's role."
                ]
            },
            {
                "questionId": "Repository",
                "content": "\n  A requirement for a chess game is that it keeps a table with the best scores obtained in the game.\n  Naturally, this information should be kept between two different\n  executions of the system.  Assuming that the game is a web-based application, then\n\n  ",
                "image": [],
                "options": [
                    "We have to use a Repository component-and-connector style.",
                    "It is not necessary to use a ``Data Access'' layer because the information is simple.",
                    "We must identify a module for writing the scores in a\n  Decomposition style.",
                    "We may assign the responsibility of writing the scores to\n  another module that already has other responsibilities."
                ]
            },
            {
                "questionId": "PeerToPeer",
                "content": "\n  An email client such as Mozilla's Thunderbird or Microsoft's Outlook\n  allows a user both to read the emails that were sent to him and to\n  send new emails to other people.  To do that, the email client\n  connects to other components (one or more): some of these components\n  keep the user's mailboxes with all the emails that were sent to him,\n  whereas other components know how to forward the emails sent by the\n  user to their final destinations (associated with a new set of destinations).  In either case, it is always the\n  email client that makes a request to the other components, but\n  whereas in the first case the email client receives all the\n  information about the user's emails, in the second case only a\n  success or failure error code is returned.  The architectural\n  patterns that best describe the interactions between the components from the client to the final destinations\n\n  ",
                "image": [],
                "options": [
                    "Client-server in both cases.",
                    "Client-server in the first case and Peer-to-peer in the second.",
                    "Peer-to-peer in both cases.",
                    "Peer-to-peer in the first case and Client-Server in the second."
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer.",
                    "Pipe-and-Filter.",
                    "Client-Server.",
                    "Publish-Subscribe."
                ]
            },
            {
                "questionId": "InstallView",
                "content": "\n  Consider a system that will require a significative configuration effort during deployment, because it provides several variations of the same functionalities and it is necessary to choose which functionalities better fit in each case. The most helpful architectural view for this situation is\n \n  ",
                "image": [],
                "options": [
                    "Work assignment view.",
                    "Install view.",
                    "Implementation view.",
                    "Deployment view."
                ]
            },
            {
                "questionId": "ThounsandParsecView",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. In the case description can be read:\n\t\n\t\\begin{quote}\n\t\tThe Requirements function verifies that each component added to the design conforms to the rules of other previously added components.\n\t\\end{quote}\n\t\n\tThe following diagram depicts a fragment of a proposal for the decomposition view of the system.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150109/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The Requirements function is part of the Design module.",
                    "The Requirements function is not part of the RulesSet module.",
                    "The Requirements function is part of the Objects module.",
                    "The Requirements function is part of the Dynamic Design module."
                ]
            },
            {
                "questionId": "SocialCalcView",
                "content": "\n\tConsider the architectural views for the SocialCalc system. In the case description can be read:\n\t\n\t\\begin{quote}\n\t\tThe save format is in standard MIME multipart/mixed format, consisting of four text/plain; charset=UTF-8 parts, each part containing newline-delimited text with colon-delimited data fields. The parts are...\n\t\t\n\t\tThis format is designed to be human-readable, as well as being relatively easy to generate programmatically. This makes it possible for Drupal's Sheetnode plugin to use PHP to convert between this format and other popular spreadsheet formats, such as Excel (.xls) and OpenDocument (.ods).\n\t\\end{quote}\n\t\n\tFrom the above excerpt can be inferred the need to have\n\t\n    ",
                "image": [],
                "options": [
                    "A component-and-connector view using a shared-data style.",
                    "A data model view.",
                    "A service-oriented architecture view.",
                    "A data model view and a component-and-connector view using a shared-data style."
                ]
            },
            {
                "questionId": "GitViews",
                "content": "\n\tThe architectural style that best represents the runtime execution of a system Git installed for a small group of developers is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Peer-to-peer style.",
                    "Pipe-and-Filter style.",
                    "Shared-data style.",
                    "Publish-subscribe style."
                ]
            },
            {
                "questionId": "OrderPad",
                "content": "\n  In the OrderPad system they have decided to use a Row Data Gateway data access pattern because\n \n  ",
                "image": [],
                "options": [
                    "The team did not know the FenixFramework.",
                    "The domain only needs CRUD (Create, Read, Update, and Delete) operations.",
                    "A domain layer is absent from the architecture.",
                    "Most of the information is stored in the client."
                ]
            },
            {
                "questionId": "EtherCalcAllocation",
                "content": "\n  Consider the architectural views of EtherCalc system. In the case study description can be read\n  \n  \\begin{quote}\n\t  The Socialtext platform has both behind-the-firewall and on-the-cloud deployment options, imposing unique constraints on EtherCalc's resource and performance requirements.\n  \\end{quote} \n \n  ",
                "image": [],
                "options": [
                    "It is necessary to design two deployment views, one for each deployment option.",
                    "It is necessary to design a single deployment view that contains all the variation, because only the hardware capabilities change.",
                    "Two different component-and-connector views are necessary to represent the same runtime behavior of the system.",
                    "The deployment options have a large impact on the work assignment view."
                ]
            },
            {
                "questionId": "EtherCalcRedundancy",
                "content": "\n  In EtherCalc initial prototype clients send their local commands and snapshots to the server, which result on redundant information on the server about the state of the spreadsheet. This redundancy is an application of\n \n  ",
                "image": [],
                "options": [
                    "Passive redundancy for availability, because it is possible to recover from the commands log.",
                    "Undo tactic for usability, because the server can undo the snapshot.",
                    "Increase resource efficiency tactic for performance, because it reduces the need of upfront calculus/computation on new clients.",
                    "Multiple copies of data tactic for performance, clients do not have to execute the commands."
                ]
            },
            {
                "questionId": "EtherCalcSnapshotPerformance",
                "content": "\n  In EtherCalc initial prototype clients send their local commands, cursor movements and snapshots to the server.\n \n  ",
                "image": [],
                "options": [
                    "The server propagates them to all the clients.",
                    "The server propagates local commands and cursor movements to the clients, and keeps the snapshots for the initialization of new clients.",
                    "The server only propagates local commands to the clients and keeps cursor movements in a log and the snapshots in a repository.",
                    "The server propagates the snapshots and the cursor movements to the clients and store the local commands for the initialization of new clients."
                ]
            },
            {
                "questionId": "EtherCalcModifiabilityTestability",
                "content": "\n  In the EtherCalc case description can be read\n \n  \\begin{quote}\n\t  The in-browser SocialCalc engine is written in JavaScript. We considered translating that logic into Perl, but that would have carried the steep cost of maintaining two code bases. \n  \\end{quote} \n  \n  The excerpt is referring to a quality of\n \n  ",
                "image": [],
                "options": [
                    "Testability.",
                    "Modifiability.",
                    "Testability and Modifiability.",
                    "Performance."
                ]
            },
            {
                "questionId": "ServiceLayer",
                "content": "\n  The Service Layer pattern is typically used in conjunction with\n \n  ",
                "image": [],
                "options": [
                    "The Transaction Script pattern to help demarcate the\n  business transactions.",
                    "The Domain Model pattern to reduce the interface of the\n  Domain Logic layer to a controlled set.",
                    "The Data Access layer to be able to access the data that it\n  needs in each service.",
                    "The Table Module pattern to hide the details of the table\n  structure for the Presentation layer."
                ]
            },
            {
                "questionId": "ActiveRecord",
                "content": "\n  The Active Record pattern is best used when we are also using\n \n  ",
                "image": [],
                "options": [
                    "The Transaction Script pattern.",
                    "The Table Module pattern.",
                    "The Domain Model pattern.",
                    "The Service Layer pattern."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/exam/exam20150109/exame-20150109-companion-B.tex",
        "quizTitle": "..-data-2014-exam-exam20150109-exame-20150109-companion-B",
        "questions": [
            {
                "questionId": "ServiceLayer",
                "content": "\n  The Service Layer pattern is typically used in conjunction with\n \n  ",
                "image": [],
                "options": [
                    "The Transaction Script pattern to help demarcate the\n  business transactions.",
                    "The Domain Model pattern to reduce the interface of the\n  Domain Logic layer to a controlled set.",
                    "The Data Access layer to be able to access the data that it\n  needs in each service.",
                    "The Table Module pattern to hide the details of the table\n  structure for the Presentation layer."
                ]
            },
            {
                "questionId": "ActiveRecord",
                "content": "\n  The Active Record pattern is best used when we are also using\n \n  ",
                "image": [],
                "options": [
                    "The Transaction Script pattern.",
                    "The Table Module pattern.",
                    "The Domain Model pattern.",
                    "The Service Layer pattern."
                ]
            },
            {
                "questionId": "InstallView",
                "content": "\n  Consider a system that will require a significative configuration effort during deployment, because it provides several variations of the same functionalities and it is necessary to choose which functionalities better fit in each case. The most helpful architectural view for this situation is\n \n  ",
                "image": [],
                "options": [
                    "Work assignment view.",
                    "Install view.",
                    "Implementation view.",
                    "Deployment view."
                ]
            },
            {
                "questionId": "ThounsandParsecView",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. In the case description can be read:\n\t\n\t\\begin{quote}\n\t\tThe Requirements function verifies that each component added to the design conforms to the rules of other previously added components.\n\t\\end{quote}\n\t\n\tThe following diagram depicts a fragment of a proposal for the decomposition view of the system.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150109/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The Requirements function is part of the Design module.",
                    "The Requirements function is not part of the RulesSet module.",
                    "The Requirements function is part of the Objects module.",
                    "The Requirements function is part of the Dynamic Design module."
                ]
            },
            {
                "questionId": "Checksum",
                "content": "\n\tChecksum is a technic that it is often used in architectural design. It can be used as\n\t\t\n    ",
                "image": [],
                "options": [
                    "A Condition Monitoring tactic for the Availability quality.",
                    "An Encrypt Data tactic for the Security quality.",
                    "A Verify Message Integrity tactic to React to Attacks for the Security quality.",
                    "An Exception Prevention tactic to Prevent Faults for the Availability quality."
                ]
            },
            {
                "questionId": "Attack",
                "content": "\n\tAn attack is\n\t\t\n    ",
                "image": [],
                "options": [
                    "The source of stimulus for scenarios of the Availability quality.",
                    "The stimulus for scenarios of the Availability quality.",
                    "The stimulus for scenarios of the Security quality.",
                    "The source of stimulus for scenarios of the Security quality."
                ]
            },
            {
                "questionId": "SocialCalcTactics",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tAs the user scrolls the spreadsheet through our custom-drawn scroll bars, we dynamically update the innerHTML of the pre-drawn \\textsc{<td>} elements. This means we don't need to create or destroy any \\textsc{<tr>} or \\textsc{<td>} elements in many common cases, which greatly speeds up response time.\n\t\\end{quote} \n\t\n\tThis corresponds to the application of\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate tactic.",
                    "Increase resource efficiency tactic.",
                    "Introduce concurrency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ThousandParsecTactics",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tA ruleset designer thus has the ability to create new object types or store additional information in the existing object types as required by the ruleset, allowing for virtually unlimited extensibility in terms of the available physical objects in the game.\n\t\\end{quote} \n\t\n\tThis excerpt can be represented as a modifiability scenario where\n\n    ",
                "image": [],
                "options": [
                    "The source of stimulus is the ruleset.",
                    "The ruleset designer is the stimulus.",
                    "The environment is design time.",
                    "The response is defer binding."
                ]
            },
            {
                "questionId": "GitTactics",
                "content": "\n\tIn the description of the Git case study can be read:\n\t\n\t\\begin{quote}\n\t\tGit tackles the storage space problem by packing objects in a compressed format, using an index file which points to offsets to locate specific objects in the corresponding packed file.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Condition monitoring.",
                    "Reduce overhead.",
                    "Increase resource efficiency."
                ]
            },
            {
                "questionId": "Layered",
                "content": "\n  Assume that one of the requirements for a graphical chess game is\n  that it should be able to run both in Microsoft's Windows and\n  Apple's Mac OS X operating systems.  A good solution for this system\n  would:\n\n  ",
                "image": [],
                "options": [
                    "Create a decomposition where there is a module corresponding\n  to the Windows OS and another one for the Mac OS X, each one\n  responsible for containing the OS-specific code.",
                    "Use a classic 3-layer architecture with the following\n  layers, from top to bottom: Presentation, Domain Logic, and Data\n  Access.",
                    "Use an aspect-oriented architecture, where an aspect is used to generate a graphical interface.",
                    "Use two deployment views, each one allocating different\n  components to different machines with different operating systems."
                ]
            },
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view.",
                    "It represents a relation between a connector's role and a port of one of its internal components.",
                    "It represents a relation between a component's port and a port of one of its internal components.",
                    "It represent a relation between a component's port and a connector's role."
                ]
            },
            {
                "questionId": "Repository",
                "content": "\n  A requirement for a chess game is that it keeps a table with the best scores obtained in the game.\n  Naturally, this information should be kept between two different\n  executions of the system.  Assuming that the game is a web-based application, then\n\n  ",
                "image": [],
                "options": [
                    "We have to use a Repository component-and-connector style.",
                    "It is not necessary to use a ``Data Access'' layer because the information is simple.",
                    "We must identify a module for writing the scores in a\n  Decomposition style.",
                    "We may assign the responsibility of writing the scores to\n  another module that already has other responsibilities."
                ]
            },
            {
                "questionId": "PeerToPeer",
                "content": "\n  An email client such as Mozilla's Thunderbird or Microsoft's Outlook\n  allows a user both to read the emails that were sent to him and to\n  send new emails to other people.  To do that, the email client\n  connects to other components (one or more): some of these components\n  keep the user's mailboxes with all the emails that were sent to him,\n  whereas other components know how to forward the emails sent by the\n  user to their final destinations (associated with a new set of destinations).  In either case, it is always the\n  email client that makes a request to the other components, but\n  whereas in the first case the email client receives all the\n  information about the user's emails, in the second case only a\n  success or failure error code is returned.  The architectural\n  patterns that best describe the interactions between the components from the client to the final destinations\n\n  ",
                "image": [],
                "options": [
                    "Client-server in both cases.",
                    "Client-server in the first case and Peer-to-peer in the second.",
                    "Peer-to-peer in both cases.",
                    "Peer-to-peer in the first case and Client-Server in the second."
                ]
            },
            {
                "questionId": "ArchitectureInfluenceCycle",
                "content": "\n  The software architecture of a system\n\n    ",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements.",
                    "Depends more on the architect's experience than on anything\n    else.",
                    "Should not depend on the skills of the developing team.",
                    "Is driven by a trade-off among the stakeholders needs."
                ]
            },
            {
                "questionId": "TechoGeeks",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{techno-geeks} architects. This kind of architect\n\t\n    ",
                "image": [],
                "options": [
                    "May be responsible for the Featuritis problems of architectures.",
                    "May be responsible for the Performitis problems of architectures.",
                    "Is focused on creating common generalizations of several systems.",
                    "Is focused on the details of the architecture."
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n  Which of the following phrases best describe the relationship\n  between modules and components?\n\n  ",
                "image": [],
                "options": [
                    "A module may contain code from different components.",
                    "A component may execute code from different modules.",
                    "A module may execute code from different components.",
                    "A component may contain code from different modules."
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The current location is the source of the stimulus.",
                    "The traffic monitoring system is the environment.",
                    "The Google Map is the artefact.",
                    "The location information is correctly included with a probability of 99.99\\% is the response measure."
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer.",
                    "Pipe-and-Filter.",
                    "Client-Server.",
                    "Publish-Subscribe."
                ]
            },
            {
                "questionId": "SocialCalcView",
                "content": "\n\tConsider the architectural views for the SocialCalc system. In the case description can be read:\n\t\n\t\\begin{quote}\n\t\tThe save format is in standard MIME multipart/mixed format, consisting of four text/plain; charset=UTF-8 parts, each part containing newline-delimited text with colon-delimited data fields. The parts are...\n\t\t\n\t\tThis format is designed to be human-readable, as well as being relatively easy to generate programmatically. This makes it possible for Drupal's Sheetnode plugin to use PHP to convert between this format and other popular spreadsheet formats, such as Excel (.xls) and OpenDocument (.ods).\n\t\\end{quote}\n\t\n\tFrom the above excerpt can be inferred the need to have\n\t\n    ",
                "image": [],
                "options": [
                    "A component-and-connector view using a shared-data style.",
                    "A data model view.",
                    "A service-oriented architecture view.",
                    "A data model view and a component-and-connector view using a shared-data style."
                ]
            },
            {
                "questionId": "GitViews",
                "content": "\n\tThe architectural style that best represents the runtime execution of a system Git installed for a small group of developers is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Peer-to-peer style.",
                    "Pipe-and-Filter style.",
                    "Shared-data style.",
                    "Publish-subscribe style."
                ]
            },
            {
                "questionId": "OrderPad",
                "content": "\n  In the OrderPad system they have decided to use a Row Data Gateway data access pattern because\n \n  ",
                "image": [],
                "options": [
                    "The team did not know the FenixFramework.",
                    "The domain only needs CRUD (Create, Read, Update, and Delete) operations.",
                    "A domain layer is absent from the architecture.",
                    "Most of the information is stored in the client."
                ]
            },
            {
                "questionId": "EtherCalcAllocation",
                "content": "\n  Consider the architectural views of EtherCalc system. In the case study description can be read\n  \n  \\begin{quote}\n\t  The Socialtext platform has both behind-the-firewall and on-the-cloud deployment options, imposing unique constraints on EtherCalc's resource and performance requirements.\n  \\end{quote} \n \n  ",
                "image": [],
                "options": [
                    "It is necessary to design two deployment views, one for each deployment option.",
                    "It is necessary to design a single deployment view that contains all the variation, because only the hardware capabilities change.",
                    "Two different component-and-connector views are necessary to represent the same runtime behavior of the system.",
                    "The deployment options have a large impact on the work assignment view."
                ]
            },
            {
                "questionId": "EtherCalcRedundancy",
                "content": "\n  In EtherCalc initial prototype clients send their local commands and snapshots to the server, which result on redundant information on the server about the state of the spreadsheet. This redundancy is an application of\n \n  ",
                "image": [],
                "options": [
                    "Passive redundancy for availability, because it is possible to recover from the commands log.",
                    "Undo tactic for usability, because the server can undo the snapshot.",
                    "Increase resource efficiency tactic for performance, because it reduces the need of upfront calculus/computation on new clients.",
                    "Multiple copies of data tactic for performance, clients do not have to execute the commands."
                ]
            },
            {
                "questionId": "EtherCalcSnapshotPerformance",
                "content": "\n  In EtherCalc initial prototype clients send their local commands, cursor movements and snapshots to the server.\n \n  ",
                "image": [],
                "options": [
                    "The server propagates them to all the clients.",
                    "The server propagates local commands and cursor movements to the clients, and keeps the snapshots for the initialization of new clients.",
                    "The server only propagates local commands to the clients and keeps cursor movements in a log and the snapshots in a repository.",
                    "The server propagates the snapshots and the cursor movements to the clients and store the local commands for the initialization of new clients."
                ]
            },
            {
                "questionId": "EtherCalcModifiabilityTestability",
                "content": "\n  In the EtherCalc case description can be read\n \n  \\begin{quote}\n\t  The in-browser SocialCalc engine is written in JavaScript. We considered translating that logic into Perl, but that would have carried the steep cost of maintaining two code bases. \n  \\end{quote} \n  \n  The excerpt is referring to a quality of\n \n  ",
                "image": [],
                "options": [
                    "Testability.",
                    "Modifiability.",
                    "Testability and Modifiability.",
                    "Performance."
                ]
            },
            {
                "questionId": "FeaturitisOrderPad",
                "content": "\n\tFrank Buschmann states that:\n\t\t\n\t\\begin{quote}\n\t\tFeaturitis is the tendency to trade functional coverage for quality - the more functions the earlier they're delivered, the better.\n\t\\end{quote}\n\t\n\tIn the OrderPad system the architect regretted not getting performance tests going earlier. The OrderPad system\n\n    ",
                "image": [],
                "options": [
                    "Suffered from featuritis, because the architect decided to delay the difficult parts for latter in the development.",
                    "Did not suffer from featuritis.",
                    "Suffered from some level of featuritis, but it allowed to have a pilot from which the team learned.",
                    "Suffered from featuritis, but it had no impact on the final development."
                ]
            },
            {
                "questionId": "ArchitectureDefinition",
                "content": "\n  The software architecture of a system\n\n  ",
                "image": [],
                "options": [
                    "Is a high-level view of the system with the purpose of\n  understanding what are the system's goals and features.",
                    "Is composed of things such as code units, runtime elements,\n  hardware, and people, together with the relationships among them.",
                    "Is a set of guidelines that the developing team should\n  follow in the development of the system.",
                    "Is a set of diagrams that show the runtime elements of the\n  system and their relationships."
                ]
            },
            {
                "questionId": "DesigningArchitecture",
                "content": "\n  The architectural significant requirements are important in the process of creating\n  the software architecture for a system because they define\n \n  ",
                "image": [],
                "options": [
                    "The most important requirements (both functional and\n  qualities) that the system must achieve.",
                    "How the components manage the communication between the\n  remaining elements in the system.",
                    "The stakeholders that drive the development of the system.",
                    "The tactics that satisfy the most important requirements for\n  the system."
                ]
            },
            {
                "questionId": "DecompositionGeneralization",
                "content": "\n  Consider that a chess game should\n  provide an automatic and intelligent chess player, and that to\n  implement that player we will use some of the many chess engines\n  already available in the market.  Moreover, the system should allow\n  the user to choose which engine to use for each new game.  Given\n  these requirements, which of the architectural styles from the\n  module viewtype are best suited to satisfy them?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Decomposition and Uses styles.",
                    "The Layered style.",
                    "The Generalization and Decomposition styles."
                ]
            },
            {
                "questionId": "UsesStyle",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Deployment style.",
                    "The Uses style.",
                    "The Work-assignment style."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/exam/exam20150127/exame-20150127-companion-A.tex",
        "quizTitle": "..-data-2014-exam-exam20150127-exame-20150127-companion-A",
        "questions": [
            {
                "questionId": "ArchitectureKnowledge",
                "content": "\n  Assuming that you were asked to document the software architecture\n  of an existing (and already developed) system, the best thing for\n  you to do would be\n\n  ",
                "image": [],
                "options": [
                    "To analyse the source code of the system to see how it is built",
                    "To analyse the system's functional requirements to see what\n  is the system supposed to do",
                    "To analyse the implemented set of features to see what is it\n  that the system actually does",
                    "To talk with the people that developed the system to know\n  what they did and why they did it"
                ]
            },
            {
                "questionId": "ArchitectureEvolution",
                "content": "\n  Ralph Johnson says that\n  \n  \\begin{quote}\n\t  Architecture is the decisions that you wish you could get right early in a project.\n  \\end{quote}\n  \n  This sentence reflects the fact that\n\n  ",
                "image": [],
                "options": [
                    "The architecture of a system cannot change",
                    "The main goal of an architect is to identify the quality attributes of system",
                    "Architecture is the design that gets harder to change as development progresses",
                    "The main goal of an architect is to design a detailed structure of the system that supports most of the requirements"
                ]
            },
            {
                "questionId": "Performitis",
                "content": "\n\tMarquardt characterizes performitis as:\n\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system such as testability and maintainability.\n\t\\end{quote}\n\t\n\tThis means that\n\n  ",
                "image": [],
                "options": [
                    "It is not a good idea to consider performance when designing the architecture of the system",
                    "The performance of a system only depends on the global performance strategies",
                    "Testability and maintainability always conflict with performance",
                    "None of the above"
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n\tThe software architecture of a system is usually represented through several views because we need to\n\n  ",
                "image": [],
                "options": [
                    "Represent different architectural qualities and they may not be all represented in a single view",
                    "Have a view for each stakeholder",
                    "Have at least a view for each viewtype",
                    "Have a view for each group of interconnected components, and very often a system has several groups of interconnected components"
                ]
            },
            {
                "questionId": "ModueComponent",
                "content": "\n  On the web page of Memcached can be read:\n  \n  \\begin{quote}\n\t  ..., high-performance, distributed memory object caching system, generic in nature, but intended for use in speeding up dynamic web applications by alleviating database load.\n  \\end{quote}\n  \n  According to this information, Memcached is\n\n  ",
                "image": [],
                "options": [
                    "A module",
                    "A component",
                    "Both, a module and a component",
                    "An allocation element"
                ]
            },
            {
                "questionId": "ConcreteScenario",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  perform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n  should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n  usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "AvailabilityPingEchoHeartbeat",
                "content": "\n\tPing-and-echo and Heartbeat are two availability tactics to detect faults.\n\n    ",
                "image": [],
                "options": [
                    "Ping-and-echo requires the availability monitor to know the addresses of the components it is monitoring",
                    "Heartbeat requires the availability monitor to confirm the reception of the signal",
                    "In Ping-and-echo the availability monitor should always send the same request",
                    "In Heartbeat, the monitored components can change the message rate"
                ]
            },
            {
                "questionId": "SecurityDatabase",
                "content": "\n\tConsider that when designing the architecture of a web application, the architect intends to guarantee of the confidentiality of persistent data in face of an attack from a system administrator.\n\n    ",
                "image": [],
                "options": [
                    "It is not possible to achieve this requirement. A non-architectural solution is to be careful when hiring system administrators",
                    "It is necessary to use the authenticate authors tactic to authenticate system administrators before they access to the database",
                    "It is necessary to use the encrypt data tactic to encrypt the information with a password that is in a configuration file",
                    "It is necessary to use the encrypt data tactic to encrypt the information on the client web browser, before it is send to the web server"
                ]
            },
            {
                "questionId": "SocialCalcTactic",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tA simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.\n\t\\end{quote}\n\t\n\tThis sentence describes a tactic for usability which is\n\n    ",
                "image": [],
                "options": [
                    "Maintain task model",
                    "Maintain user model",
                    "Maintain system model",
                    "Aggregate"
                ]
            },
            {
                "questionId": "ThousandParsecScenario",
                "content": "\n\tIn the description of the ThousandParsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tThe Thousand Parsec Component Language (TPCL) exists to allow clients to create designs locally without server interaction - allowing for instant feedback about the properties, makeup, and validity of the designs. \n\t\\end{quote}\n\t\n\tFrom this sentence can be written\n\n    ",
                "image": [],
                "options": [
                    "A scenario for performance associated with a multiple copies of computation tactic",
                    "A scenario for usability associated with a support system initiative tactic",
                    "A scenario for performance associated with a limit event response tactic",
                    "A scenario for usability associated with a support user initiative tactic"
                ]
            },
            {
                "questionId": "GitTactic",
                "content": "\n\tIn the description of GitHub case study can be read\n\t\n\t\\begin{quote}\n\t\tOnce the Smoke proxy has determined the user's route, it establishes a transparent proxy to the proper file server. We have four pairs of fileservers. Their names are fs1a, fs1b, ..., fs4a, fs4b. These are 8 core, 16GB RAM bare metal servers, each with six 300GB 15K RPM SAS drives arranged in RAID 10. At any given time one server in each pair is active and the other is waiting to take over should there be a fatal failure in the master. All repository data is constantly replicated from the master to the slave via DRBD.\n\t\\end{quote}\n\t\n\tIn this description we can find the application of tactics like \n\n  ",
                "image": [],
                "options": [
                    "Multiple copies of computation",
                    "Active redundancy",
                    "Increase resource efficiency",
                    "All of the above"
                ]
            },
            {
                "questionId": "ArchitecturallySignificantRequirements",
                "content": "\n  According to the attribute-driven design process, we should design\n  the software architecture for a system based on a selected list of\n  requirements, which are called the \\textit{architecturally significant requirements}.\n  These architecturally significant requirements should be sorted according to their\n  importance for the system's stakeholders because\n \n    ",
                "image": [],
                "options": [
                    "We should always satisfy in the first place the requirements\n    of the more important stakeholders (such as the client)",
                    "If no order was established among them, we would not know\n    from where should we start the design process",
                    "If one of the stakeholders complains that her requirement\n    is not satisfied, we may explain to her that there were other more\n    important requirements first",
                    "When it is not possible to satisfy all of the requirements\n    optimally, we should be aware of their relative importance so that\n    we may find a solution that corresponds to a satisfactory trade-off"
                ]
            },
            {
                "questionId": "ModuleTraceability",
                "content": "\n\tViews of the module viewtype can be used to support requirements traceability analysis, determine how the functional requirements of a system are supported. This is represented by\n\t\n    ",
                "image": [],
                "options": [
                    "Decomposition view",
                    "Data model view",
                    "Generalization view",
                    "Layered view"
                ]
            },
            {
                "questionId": "GeneralizationInterfaces",
                "content": "\n\tYou have to develop an application that collects news from different web sources and process that information to present a digest to the application users. The different sources provide similar information through different interfaces (APIs). Additionally, the new sources may change the interfaces, for instance to enhance their service. Which architectural style can be used to represent this requirements?\n\t\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer to represent the communication between the components",
                    "Client-Server to represent the request the application makes to the different new sources",
                    "Generalisation to represent an abstraction common to all interfaces and keep API-specific details in child modules",
                    "Layers to create a virtual machine that hides the internals of the application from its users interface code to allow the support of different user interfaces"
                ]
            },
            {
                "questionId": "UsesIncremental",
                "content": "\n  When designing the architecture for a system the architect realises that most of the modules have bidirectional uses relationships. This has impact on\n\n    ",
                "image": [],
                "options": [
                    "Performance because there is an overhead of communication between the modules.",
                    "Install because most of the modules need to be assigned to the same executable file",
                    "Development because it is not possible to do incremental development",
                    "Availability because if a module fails the failure easily propagates to all the other modules"
                ]
            },
            {
                "questionId": "ComponentAndConnnector",
                "content": "\n\tThe Java web servers, like Tomcat, use threads to process requests. For each request they create (or reuse) a thread to process it.\n\tTo draw a architectural view that describes this behaviour we should use \n\t\n    ",
                "image": [],
                "options": [
                    "A Module viewtype view",
                    "A Allocation viewtype view",
                    "A Communicating processes view",
                    "A Install view"
                ]
            },
            {
                "questionId": "LoadBalancer",
                "content": "\n\tTo increase the availability of a web application it is possible to use a load-balancer between the clients and the servers that detects server failures and transparently redirects the requests to the servers that are functioning properly. To represent this architecture\n\n    ",
                "image": [],
                "options": [
                    "It is enough to show the load-balancer between the web clients machines and the servers machines using a deployment view",
                    "It is necessary to change the connector between the web clients and the web servers, in the component-and-connector view, to show the semantics that is provided by the load-balancer",
                    "It is necessary to create a uses view to show how clients require the correct functioning of servers",
                    "It is necessary to change the component-and-connector view to show the communicating processes"
                ]
            },
            {
                "questionId": "ThreeTiers",
                "content": "\n  One way to increase the performance of a 3-tier enterprise\n  application (with the standard separation in the web client, web\n  server, and database tiers) is to replicate the web server tier and\n  to add a load-balancer between the web clients and the web servers.\n  Unfortunately, for some enterprise applications that option is not\n  enough (or does not work at all), because\n\n    ",
                "image": [],
                "options": [
                    "They have many different use cases, corresponding to many\n    distinct user interfaces",
                    "They have to process very large amounts of data in each request",
                    "They need to be able to process concurrent requests from\n    the users",
                    "They have a very complex domain logic that requires much\n    processing power for answering each request"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n  show in that window the status of each contact (whether it is available, unavailable, busy,\n  etc). Given that the status of a contact may be changed at any time, and that the contact's\n  status is given by the Instant Messaging application of that contact, which architectural\n  style represents best the interaction pattern between these components?\n\n    ",
                "image": [],
                "options": [
                    "The Shared Data style",
                    "The Pipes-and-filters style",
                    "The Publish-subscribe style",
                    "The Client-Server style"
                ]
            },
            {
                "questionId": "DeploymentPerformance",
                "content": "\n  In the software architecture of a system, the Deployment view is\n  best suited for\n\n    ",
                "image": [],
                "options": [
                    "Analysing the performance of the system",
                    "Planning incremental releases of the system",
                    "Estimating the effort needed to implement the system",
                    "Analysing the system's portability and reusability"
                ]
            },
            {
                "questionId": "ThousandParsecPersistence",
                "content": "\n  In the description of ThousandParsec case study can be read\n  \n  \\begin{quote}\n\t  The flagship server, \\textsc{tpserver-cpp}, provides an abstract persistence interface and a modular plugin system to allow for various database back ends. \n  \\end{quote}\n  \n\tThis above sentence can be diagrammatically represented using\n\t  \n    ",
                "image": [],
                "options": [
                    "A generalisation architectural style",
                    "An aspects architectural style",
                    "A data model architectural style",
                    "A shared-data architectural style"
                ]
            },
            {
                "questionId": "SocialCalcBroadcastEvents",
                "content": "\n  Consider the (partial) component-and-connector view for the \\textsc{:SpreasdSheet} component of the SocialCalc system\n  \n\t\\centering\n\t\\includegraphics[width=70mm]{x-SocialCalc-spreadsheet-component}\n\t\n    \\begin{flushleft}\n  \t  The \\textsc{sub1} port\n    \\end{flushleft}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150127/x-SocialCalc-spreadsheet-component.png",
                        "width": 70
                    }
                ],
                "options": [
                    "Subscribes to the same kind of events that the \\textsc{sub2} port",
                    "Subscribes to the same kind of events that the \\textsc{inputSub} port",
                    "Subscribes to cursor position events",
                    "It is unnecessary in the diagram because the \\textsc{:TableEditor} can use port \\textsc{sub2} through the \\textsc{:Sheet} component"
                ]
            },
            {
                "questionId": "GitHubViews",
                "content": "\n\tIn the description of GitHub case study can be read\n\t\n\t\\begin{quote}\n\t\tFor requests to the main website, the load balancer ships your request off to one of the four frontend machines. Each of these is an 8 core, 16GB RAM bare metal server. Their names are fe1, ..., fe4. Nginx accepts the connection and sends it to a Unix domain socket upon which sixteen Unicorn worker processes are selecting. One of these workers grabs the request and runs the Rails code necessary to fulfill it.\n\t\\end{quote}\n\t\n\tTo represent the above description it is necessary to use\t\n\n  ",
                "image": [],
                "options": [
                    "The communicating processes architectural style",
                    "The client-server architectural style",
                    "The deployment architectural style",
                    "All of the above"
                ]
            },
            {
                "questionId": "OrderPadTactics",
                "content": "\n\tIn the description of architecture of the OrderPad case study, it can be read that the updates the user does on the OrderPad when it is offline are not lost. This availability quality is achieved through a\t\n\n  ",
                "image": [],
                "options": [
                    "Ignore faulty behaviour tactic",
                    "Ping-and-echo tactic",
                    "Active redundancy tactic",
                    "Retry tactic"
                ]
            },
            {
                "questionId": "EtherCalcPerformance",
                "content": "\n\tIn the description of EtherCalc case study can be read\n\t\n\t\\begin{quote}\n\t\tBecause all jsdom code runs in a single thread, subsequent REST API calls are blocked until the previous command's rendering completes. Under high concurrency, this queue eventually triggered a latent bug that ultimately resulted in server lock-up.\n\t\\end{quote}\t\n\t\n\tThe above sentence is related to a quality for\n\n  ",
                "image": [],
                "options": [
                    "Performance, because it describes what is the response to REST API calls",
                    "Modifiability, because the jsdom code can not be reused by several threads",
                    "Security, because it describes a \"queue overflow\" attack",
                    "Interoperability, because the REST API allow the exchange of information with external applications"
                ]
            },
            {
                "questionId": "EtherCalcTactic",
                "content": "\n\tIn the description of EtherCalc case study can be read\n\t\n\t\\begin{quote}\n\t\tSo, we removed jsdom from the RenderSheet function, re-implemented a minimal DOM in 20 lines of LiveScript for HTML export, then ran the profiler again. Much better! We have improved throughput by a factor of 4, HTML exporting is 20 times faster, and the lock-up problem is gone.\n\t\\end{quote}\t\n\t\n\tThe above sentence describes a\n\n  ",
                "image": [],
                "options": [
                    "Reduce overhead tactic",
                    "Increase resource efficiency tactic",
                    "Increase resources tactic",
                    "Testability tactic"
                ]
            },
            {
                "questionId": "EtherCalcTestability",
                "content": "\n\tIn the description of EtherCalc case study can be read how the architect tried to increase the performance in a multi-core context\n\t\n\t\\begin{quote}\n\tIs there a way to make use of all those spare CPUs in the multi-tenant server?\n\n\tFor other Node.js services running on multi-core hosts, we utilized a pre-forking cluster server that creates a process for each CPU.\n\t\n\t\tHowever, while EtherCalc does support multi-server scaling with Redis, the interplay of Socket.io clustering with RedisStore in a single server would have massively complicated the logic, making debugging much more difficult.\n\t\\end{quote}\t\n\t\n\tThis possible solution has impact on the\n\n  ",
                "image": [],
                "options": [
                    "Overall costs, because of deployment",
                    "Availability, because of the interprocess communication",
                    "Testability, because of the logic complexity",
                    "Performance, because there is not a significative improvement by using more CPUs"
                ]
            },
            {
                "questionId": "EtherCalcViews",
                "content": "\n\tIn the description of EtherCalc case study can be read how the architect increased the performance in a multi-core context\n\t\n\t\\begin{quote}\n\tInstead of pre-forking a fixed number of processes, we sought a way to create one background thread for each server-side spreadsheet, thereby distributing the work of command execution among all CPU cores.\n\t\\end{quote}\t\n\t\n\tWhich is represented by the diagram\n\t\\newline\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-EtherCalc-multi-tenant}\n\t\n\t\\begin{flushleft}\n\t\tThe above diagram, describing a server spreadsheet, can be represented using \n\t\\end{flushleft}\n\n  ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150127/x-EtherCalc-multi-tenant.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A publish-subscribe style",
                    "A peer-to-peer style",
                    "A client-server style",
                    "A communication processes style"
                ]
            },
            {
                "questionId": "TransactionScript",
                "content": "\n  Compared to the Transaction Script pattern, the Domain Logic pattern\n  has a higher initial cost of adoption.  That is, it is harder to\n  start with the Domain Logic pattern than with the Transaction Script\n  pattern.  The reason for this is that the Domain Logic pattern\n\n  ",
                "image": [],
                "options": [
                    "Requires a more skilled team, because the object-oriented\n  paradigm is more complex than the procedural paradigm",
                    "Is typically used with more complex data access code",
                    "Requires that we write more code when we have only a\n  couple of simple use cases",
                    "All of the above"
                ]
            },
            {
                "questionId": "ActiveRecordRuby",
                "content": "\n  Ruby on Rails is a popular full-stack framework for building web\n  applications.  One of the elements of this framework is the\n  \\textbf{model}, which is described in the Rails documentation in the\n  following way:\n  \\begin{quote}\n    A model represents the information (data) of the application and\n    the rules to manipulate that data. In the case of Rails, models\n    are primarily used for managing the rules of interaction with a\n    corresponding database table. In most cases, one table in your\n    database will correspond to one model in your application. The\n    bulk of your application's business logic will be concentrated in\n    the models.\n  \\end{quote}\n  Given this description, the Rails' model is best described as an\n  instance of\n \n  ",
                "image": [],
                "options": [
                    "The Service Layer pattern",
                    "The Active Record pattern",
                    "The Transaction Script pattern",
                    "The Data Mapper pattern"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/exam/exam20150127/exame-20150127-companion-B.tex",
        "quizTitle": "..-data-2014-exam-exam20150127-exame-20150127-companion-B",
        "questions": [
            {
                "questionId": "OrderPadTactics",
                "content": "\n\tIn the description of architecture of the OrderPad case study, it can be read that the updates the user does on the OrderPad when it is offline are not lost. This availability quality is achieved through a\t\n\n  ",
                "image": [],
                "options": [
                    "Ignore faulty behaviour tactic",
                    "Ping-and-echo tactic",
                    "Active redundancy tactic",
                    "Retry tactic"
                ]
            },
            {
                "questionId": "TransactionScript",
                "content": "\n  Compared to the Transaction Script pattern, the Domain Logic pattern\n  has a higher initial cost of adoption.  That is, it is harder to\n  start with the Domain Logic pattern than with the Transaction Script\n  pattern.  The reason for this is that the Domain Logic pattern\n\n  ",
                "image": [],
                "options": [
                    "Requires a more skilled team, because the object-oriented\n  paradigm is more complex than the procedural paradigm",
                    "Is typically used with more complex data access code",
                    "Requires that we write more code when we have only a\n  couple of simple use cases",
                    "All of the above"
                ]
            },
            {
                "questionId": "ActiveRecordRuby",
                "content": "\n  Ruby on Rails is a popular full-stack framework for building web\n  applications.  One of the elements of this framework is the\n  \\textbf{model}, which is described in the Rails documentation in the\n  following way:\n  \\begin{quote}\n    A model represents the information (data) of the application and\n    the rules to manipulate that data. In the case of Rails, models\n    are primarily used for managing the rules of interaction with a\n    corresponding database table. In most cases, one table in your\n    database will correspond to one model in your application. The\n    bulk of your application's business logic will be concentrated in\n    the models.\n  \\end{quote}\n  Given this description, the Rails' model is best described as an\n  instance of\n \n  ",
                "image": [],
                "options": [
                    "The Service Layer pattern",
                    "The Active Record pattern",
                    "The Transaction Script pattern",
                    "The Data Mapper pattern"
                ]
            },
            {
                "questionId": "ConcreteScenario",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  perform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n  should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n  usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "AvailabilityPingEchoHeartbeat",
                "content": "\n\tPing-and-echo and Heartbeat are two availability tactics to detect faults.\n\n    ",
                "image": [],
                "options": [
                    "Ping-and-echo requires the availability monitor to know the addresses of the components it is monitoring",
                    "Heartbeat requires the availability monitor to confirm the reception of the signal",
                    "In Ping-and-echo the availability monitor should always send the same request",
                    "In Heartbeat, the monitored components can change the message rate"
                ]
            },
            {
                "questionId": "SecurityDatabase",
                "content": "\n\tConsider that when designing the architecture of a web application, the architect intends to guarantee of the confidentiality of persistent data in face of an attack from a system administrator.\n\n    ",
                "image": [],
                "options": [
                    "It is not possible to achieve this requirement. A non-architectural solution is to be careful when hiring system administrators",
                    "It is necessary to use the authenticate authors tactic to authenticate system administrators before they access to the database",
                    "It is necessary to use the encrypt data tactic to encrypt the information with a password that is in a configuration file",
                    "It is necessary to use the encrypt data tactic to encrypt the information on the client web browser, before it is send to the web server"
                ]
            },
            {
                "questionId": "SocialCalcTactic",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tA simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.\n\t\\end{quote}\n\t\n\tThis sentence describes a tactic for usability which is\n\n    ",
                "image": [],
                "options": [
                    "Maintain task model",
                    "Maintain user model",
                    "Maintain system model",
                    "Aggregate"
                ]
            },
            {
                "questionId": "ThousandParsecScenario",
                "content": "\n\tIn the description of the ThousandParsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tThe Thousand Parsec Component Language (TPCL) exists to allow clients to create designs locally without server interaction - allowing for instant feedback about the properties, makeup, and validity of the designs. \n\t\\end{quote}\n\t\n\tFrom this sentence can be written\n\n    ",
                "image": [],
                "options": [
                    "A scenario for performance associated with a multiple copies of computation tactic",
                    "A scenario for usability associated with a support system initiative tactic",
                    "A scenario for performance associated with a limit event response tactic",
                    "A scenario for usability associated with a support user initiative tactic"
                ]
            },
            {
                "questionId": "GitTactic",
                "content": "\n\tIn the description of GitHub case study can be read\n\t\n\t\\begin{quote}\n\t\tOnce the Smoke proxy has determined the user's route, it establishes a transparent proxy to the proper file server. We have four pairs of fileservers. Their names are fs1a, fs1b, ..., fs4a, fs4b. These are 8 core, 16GB RAM bare metal servers, each with six 300GB 15K RPM SAS drives arranged in RAID 10. At any given time one server in each pair is active and the other is waiting to take over should there be a fatal failure in the master. All repository data is constantly replicated from the master to the slave via DRBD.\n\t\\end{quote}\n\t\n\tIn this description we can find the application of tactics like \n\n  ",
                "image": [],
                "options": [
                    "Multiple copies of computation",
                    "Active redundancy",
                    "Increase resource efficiency",
                    "All of the above"
                ]
            },
            {
                "questionId": "ModuleTraceability",
                "content": "\n\tViews of the module viewtype can be used to support requirements traceability analysis, determine how the functional requirements of a system are supported. This is represented by\n\t\n    ",
                "image": [],
                "options": [
                    "Decomposition view",
                    "Data model view",
                    "Generalization view",
                    "Layered view"
                ]
            },
            {
                "questionId": "ArchitectureKnowledge",
                "content": "\n  Assuming that you were asked to document the software architecture\n  of an existing (and already developed) system, the best thing for\n  you to do would be\n\n  ",
                "image": [],
                "options": [
                    "To analyse the source code of the system to see how it is built",
                    "To analyse the system's functional requirements to see what\n  is the system supposed to do",
                    "To analyse the implemented set of features to see what is it\n  that the system actually does",
                    "To talk with the people that developed the system to know\n  what they did and why they did it"
                ]
            },
            {
                "questionId": "ArchitectureEvolution",
                "content": "\n  Ralph Johnson says that\n  \n  \\begin{quote}\n\t  Architecture is the decisions that you wish you could get right early in a project.\n  \\end{quote}\n  \n  This sentence reflects the fact that\n\n  ",
                "image": [],
                "options": [
                    "The architecture of a system cannot change",
                    "The main goal of an architect is to identify the quality attributes of system",
                    "Architecture is the design that gets harder to change as development progresses",
                    "The main goal of an architect is to design a detailed structure of the system that supports most of the requirements"
                ]
            },
            {
                "questionId": "Performitis",
                "content": "\n\tMarquardt characterizes performitis as:\n\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system such as testability and maintainability.\n\t\\end{quote}\n\t\n\tThis means that\n\n  ",
                "image": [],
                "options": [
                    "It is not a good idea to consider performance when designing the architecture of the system",
                    "The performance of a system only depends on the global performance strategies",
                    "Testability and maintainability always conflict with performance",
                    "None of the above"
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n\tThe software architecture of a system is usually represented through several views because we need to\n\n  ",
                "image": [],
                "options": [
                    "Represent different architectural qualities and they may not be all represented in a single view",
                    "Have a view for each stakeholder",
                    "Have at least a view for each viewtype",
                    "Have a view for each group of interconnected components, and very often a system has several groups of interconnected components"
                ]
            },
            {
                "questionId": "ArchitecturallySignificantRequirements",
                "content": "\n  According to the attribute-driven design process, we should design\n  the software architecture for a system based on a selected list of\n  requirements, which are called the \\textit{architecturally significant requirements}.\n  These architecturally significant requirements should be sorted according to their\n  importance for the system's stakeholders because\n \n    ",
                "image": [],
                "options": [
                    "We should always satisfy in the first place the requirements\n    of the more important stakeholders (such as the client)",
                    "If no order was established among them, we would not know\n    from where should we start the design process",
                    "If one of the stakeholders complains that her requirement\n    is not satisfied, we may explain to her that there were other more\n    important requirements first",
                    "When it is not possible to satisfy all of the requirements\n    optimally, we should be aware of their relative importance so that\n    we may find a solution that corresponds to a satisfactory trade-off"
                ]
            },
            {
                "questionId": "ModueComponent",
                "content": "\n  On the web page of Memcached can be read:\n  \n  \\begin{quote}\n\t  ..., high-performance, distributed memory object caching system, generic in nature, but intended for use in speeding up dynamic web applications by alleviating database load.\n  \\end{quote}\n  \n  According to this information, Memcached is\n\n  ",
                "image": [],
                "options": [
                    "A module",
                    "A component",
                    "Both, a module and a component",
                    "An allocation element"
                ]
            },
            {
                "questionId": "GeneralizationInterfaces",
                "content": "\n\tYou have to develop an application that collects news from different web sources and process that information to present a digest to the application users. The different sources provide similar information through different interfaces (APIs). Additionally, the new sources may change the interfaces, for instance to enhance their service. Which architectural style can be used to represent this requirements?\n\t\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer to represent the communication between the components",
                    "Client-Server to represent the request the application makes to the different new sources",
                    "Generalisation to represent an abstraction common to all interfaces and keep API-specific details in child modules",
                    "Layers to create a virtual machine that hides the internals of the application from its users interface code to allow the support of different user interfaces"
                ]
            },
            {
                "questionId": "UsesIncremental",
                "content": "\n  When designing the architecture for a system the architect realises that most of the modules have bidirectional uses relationships. This has impact on\n\n    ",
                "image": [],
                "options": [
                    "Performance because there is an overhead of communication between the modules.",
                    "Install because most of the modules need to be assigned to the same executable file",
                    "Development because it is not possible to do incremental development",
                    "Availability because if a module fails the failure easily propagates to all the other modules"
                ]
            },
            {
                "questionId": "EtherCalcPerformance",
                "content": "\n\tIn the description of EtherCalc case study can be read\n\t\n\t\\begin{quote}\n\t\tBecause all jsdom code runs in a single thread, subsequent REST API calls are blocked until the previous command's rendering completes. Under high concurrency, this queue eventually triggered a latent bug that ultimately resulted in server lock-up.\n\t\\end{quote}\t\n\t\n\tThe above sentence is related to a quality for\n\n  ",
                "image": [],
                "options": [
                    "Performance, because it describes what is the response to REST API calls",
                    "Modifiability, because the jsdom code can not be reused by several threads",
                    "Security, because it describes a \"queue overflow\" attack",
                    "Interoperability, because the REST API allow the exchange of information with external applications"
                ]
            },
            {
                "questionId": "EtherCalcTactic",
                "content": "\n\tIn the description of EtherCalc case study can be read\n\t\n\t\\begin{quote}\n\t\tSo, we removed jsdom from the RenderSheet function, re-implemented a minimal DOM in 20 lines of LiveScript for HTML export, then ran the profiler again. Much better! We have improved throughput by a factor of 4, HTML exporting is 20 times faster, and the lock-up problem is gone.\n\t\\end{quote}\t\n\t\n\tThe above sentence describes a\n\n  ",
                "image": [],
                "options": [
                    "Reduce overhead tactic",
                    "Increase resource efficiency tactic",
                    "Increase resources tactic",
                    "Testability tactic"
                ]
            },
            {
                "questionId": "EtherCalcTestability",
                "content": "\n\tIn the description of EtherCalc case study can be read how the architect tried to increase the performance in a multi-core context\n\t\n\t\\begin{quote}\n\tIs there a way to make use of all those spare CPUs in the multi-tenant server?\n\n\tFor other Node.js services running on multi-core hosts, we utilized a pre-forking cluster server that creates a process for each CPU.\n\t\n\t\tHowever, while EtherCalc does support multi-server scaling with Redis, the interplay of Socket.io clustering with RedisStore in a single server would have massively complicated the logic, making debugging much more difficult.\n\t\\end{quote}\t\n\t\n\tThis possible solution has impact on the\n\n  ",
                "image": [],
                "options": [
                    "Overall costs, because of deployment",
                    "Availability, because of the interprocess communication",
                    "Testability, because of the logic complexity",
                    "Performance, because there is not a significative improvement by using more CPUs"
                ]
            },
            {
                "questionId": "ComponentAndConnnector",
                "content": "\n\tThe Java web servers, like Tomcat, use threads to process requests. For each request they create (or reuse) a thread to process it.\n\tTo draw a architectural view that describes this behaviour we should use \n\t\n    ",
                "image": [],
                "options": [
                    "A Module viewtype view",
                    "A Allocation viewtype view",
                    "A Communicating processes view",
                    "A Install view"
                ]
            },
            {
                "questionId": "EtherCalcViews",
                "content": "\n\tIn the description of EtherCalc case study can be read how the architect increased the performance in a multi-core context\n\t\n\t\\begin{quote}\n\tInstead of pre-forking a fixed number of processes, we sought a way to create one background thread for each server-side spreadsheet, thereby distributing the work of command execution among all CPU cores.\n\t\\end{quote}\t\n\t\n\tWhich is represented by the diagram\n\t\\newline\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-EtherCalc-multi-tenant}\n\t\n\t\\begin{flushleft}\n\t\tThe above diagram, describing a server spreadsheet, can be represented using \n\t\\end{flushleft}\n\n  ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150127/x-EtherCalc-multi-tenant.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A publish-subscribe style",
                    "A peer-to-peer style",
                    "A client-server style",
                    "A communication processes style"
                ]
            },
            {
                "questionId": "LoadBalancer",
                "content": "\n\tTo increase the availability of a web application it is possible to use a load-balancer between the clients and the servers that detects server failures and transparently redirects the requests to the servers that are functioning properly. To represent this architecture\n\n    ",
                "image": [],
                "options": [
                    "It is enough to show the load-balancer between the web clients machines and the servers machines using a deployment view",
                    "It is necessary to change the connector between the web clients and the web servers, in the component-and-connector view, to show the semantics that is provided by the load-balancer",
                    "It is necessary to create a uses view to show how clients require the correct functioning of servers",
                    "It is necessary to change the component-and-connector view to show the communicating processes"
                ]
            },
            {
                "questionId": "ThreeTiers",
                "content": "\n  One way to increase the performance of a 3-tier enterprise\n  application (with the standard separation in the web client, web\n  server, and database tiers) is to replicate the web server tier and\n  to add a load-balancer between the web clients and the web servers.\n  Unfortunately, for some enterprise applications that option is not\n  enough (or does not work at all), because\n\n    ",
                "image": [],
                "options": [
                    "They have many different use cases, corresponding to many\n    distinct user interfaces",
                    "They have to process very large amounts of data in each request",
                    "They need to be able to process concurrent requests from\n    the users",
                    "They have a very complex domain logic that requires much\n    processing power for answering each request"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n  show in that window the status of each contact (whether it is available, unavailable, busy,\n  etc). Given that the status of a contact may be changed at any time, and that the contact's\n  status is given by the Instant Messaging application of that contact, which architectural\n  style represents best the interaction pattern between these components?\n\n    ",
                "image": [],
                "options": [
                    "The Shared Data style",
                    "The Pipes-and-filters style",
                    "The Publish-subscribe style",
                    "The Client-Server style"
                ]
            },
            {
                "questionId": "DeploymentPerformance",
                "content": "\n  In the software architecture of a system, the Deployment view is\n  best suited for\n\n    ",
                "image": [],
                "options": [
                    "Analysing the performance of the system",
                    "Planning incremental releases of the system",
                    "Estimating the effort needed to implement the system",
                    "Analysing the system's portability and reusability"
                ]
            },
            {
                "questionId": "ThousandParsecPersistence",
                "content": "\n  In the description of ThousandParsec case study can be read\n  \n  \\begin{quote}\n\t  The flagship server, \\textsc{tpserver-cpp}, provides an abstract persistence interface and a modular plugin system to allow for various database back ends. \n  \\end{quote}\n  \n\tThis above sentence can be diagrammatically represented using\n\t  \n    ",
                "image": [],
                "options": [
                    "A generalisation architectural style",
                    "An aspects architectural style",
                    "A data model architectural style",
                    "A shared-data architectural style"
                ]
            },
            {
                "questionId": "SocialCalcBroadcastEvents",
                "content": "\n  Consider the (partial) component-and-connector view for the \\textsc{:SpreasdSheet} component of the SocialCalc system\n  \n\t\\centering\n\t\\includegraphics[width=70mm]{x-SocialCalc-spreadsheet-component}\n\t\n    \\begin{flushleft}\n  \t  The \\textsc{sub1} port\n    \\end{flushleft}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/exam/exam20150127/x-SocialCalc-spreadsheet-component.png",
                        "width": 70
                    }
                ],
                "options": [
                    "Subscribes to the same kind of events that the \\textsc{sub2} port",
                    "Subscribes to the same kind of events that the \\textsc{inputSub} port",
                    "Subscribes to cursor position events",
                    "It is unnecessary in the diagram because the \\textsc{:TableEditor} can use port \\textsc{sub2} through the \\textsc{:Sheet} component"
                ]
            },
            {
                "questionId": "GitHubViews",
                "content": "\n\tIn the description of GitHub case study can be read\n\t\n\t\\begin{quote}\n\t\tFor requests to the main website, the load balancer ships your request off to one of the four frontend machines. Each of these is an 8 core, 16GB RAM bare metal server. Their names are fe1, ..., fe4. Nginx accepts the connection and sends it to a Unix domain socket upon which sixteen Unicorn worker processes are selecting. One of these workers grabs the request and runs the Rails code necessary to fulfill it.\n\t\\end{quote}\n\t\n\tTo represent the above description it is necessary to use\t\n\n  ",
                "image": [],
                "options": [
                    "The communicating processes architectural style",
                    "The client-server architectural style",
                    "The deployment architectural style",
                    "All of the above"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-1.tex",
        "quizTitle": "..-data-2014-test-1-test-1",
        "questions": [
            {
                "questionId": "Featuritis",
                "content": "\n\tFrank Buschmann states that:\n\t\t\n\t\\begin{quote}\n\t\tFeaturitis is the tendency to trade functional coverage for quality - the more functions the earlier they're delivered, the better.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Featuritis may result from a requirement of the technical context.",
                    "Featuritis requires the performance quality because the end user needs to execute the features.",
                    "Featuritis may be a result of a requirement of the business context.",
                    "Featuritis requires the modifiability quality to allow a the system to be easily modified to support new features."
                ]
            },
            {
                "questionId": "Explicit",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tThere's only one escape from such situations: architects must actively break the cycle of mutual misunderstanding and mistrust!\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Such misunderstanding and mistrust occurs because the stakeholders have their own agendas",
                    "The cycle Frank Buschmann refers to is the Architectural Influence Cycle.",
                    "The cycle Frank Buschmann refers to allows the clarification of requirements.",
                    "To break such misunderstanding and mistrust the architecture has to make explicit the stakeholders needs."
                ]
            },
            {
                "questionId": "Flexibilitis",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tOverly flexible systems are hard to configure, and when they're finally configured, they lack qualities like performance or security.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Frank Buschmann is referring to some possible consequences of the modifiability quality.",
                    "Frank Buschmann are considering performance and security as the most important qualities.",
                    "Frank Buschmann is referring that the consequences of a flexible system is poor performance and bad security.",
                    "Frank Buschmann is not considering modifiability as an important quality"
                ]
            },
            {
                "questionId": "Prioritize",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tArchitects use flexibility as a cover for uncertainty.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "A flexible architecture occurs when it is not possible to identify all the requirements.",
                    "A solution to this problem is to prioritize the system qualities.",
                    "Performance uncertainty about the system should be dealt with more flexibility.",
                    "A solution to this problem is to reduce the level of flexibility of a system."
                ]
            },
            {
                "questionId": "Performitis",
                "content": "\n\tFrank Buschmann cites the characterization Marquardt does of Performitis:\n\t\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system as testability and maintainability.\n\t\\end{quote}\n\t\n\tFrom this problem you can conclude that:\n\n    ",
                "image": [],
                "options": [
                    "Performance is a quality that you have to address at the end of the development process.",
                    "There is no system which can have good performance and be easily maintainable.",
                    "We have to distinguish architectural performance from opportunistic performance.",
                    "The system performance quality has impact on the performance of the execution of tests."
                ]
            },
            {
                "questionId": "FeaturitisPerformitisFlexibilities",
                "content": "\n\tIn his article, \\emph{Featuritis, Performitis, and Other Deseases}, Frank Buschmann claims that:\n\n    ",
                "image": [],
                "options": [
                    "Performance should be the last quality to be addressed because it is a local property of an architecture.",
                    "Modifiability, flexibility, should be the first quality to be addressed because it allows the delay of architectural decisions.",
                    "The lack of functionality results in a system without business value, therefore a rich set of features should be implemented first.",
                    "A solution for any quality in isolation may lead to a biased architecture."
                ]
            },
            {
                "questionId": "WalkingSkeleton",
                "content": "\n\tThe \\emph{Walking Skeleton} referred in Frank Buschmann's article, \\emph{Featuritis, Performitis, and Other Deseases}:\n\n    ",
                "image": [],
                "options": [
                    "Is a functional prototype, which tests the functionalities required by the business stakeholders.",
                    "Is an architecture that demonstrates that the system will support the qualities raised by the stakeholders.",
                    "Is a baseline architecture that allows to experiment with the most significant architectural requirements.",
                    "Is an object-oriented framework, which integrates functional and non-functional requirements of the system."
                ]
            },
            {
                "questionId": "HammersNails",
                "content": "\n\tIn his article \\emph{On Hammers and Nails, and Falling in Love with Technology and Design} what is the main type of influence on the architecture?\n\n    ",
                "image": [],
                "options": [
                    "Project and Technical Contexts.",
                    "Project and Professional Contexts.",
                    "Business and Project Contexts.",
                    "Professional and Technical Contexts."
                ]
            },
            {
                "questionId": "ArchitectureDefinition",
                "content": "\n\tOn the course slides you can find the following definition of architecture:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a program or computing system is the structure or structures of the system, which comprise software elements, the externally visible properties of those elements, and the relationships among them.\n\t\\end{quote}\n\t\n\tHowever, in the book you can find another definition:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a system is the set of structures needed to reason about the system, which comprise the software elements, relations among them, and the properties of both.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The book definition does not consider relevant the externally visible properties.",
                    "The book definition also considers that the properties are externally visible because they are used for reasoning by the stakeholders.",
                    "The book definition also considers that the properties are externally visible because by definition an architectural property is externally visible.",
                    "The book definition is not correct, as pointed out in the errata."
                ]
            },
            {
                "questionId": "ComponentvsModule",
                "content": "\n\tIn wikipedia you can find the following fragment of a definition:\n\t\n\t\\begin{quote}\n\t\tAn individual software component is a software package, or a module that encapsulates a set of related functions.\n\t\\end{quote}\n\t\n\tAccording to the definitions taught in the course the above \\emph{individual software component} corresponds to:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "ComponentvsModuleTwo",
                "content": "\n\tIn the Java documentation you can find:\n\t\n\\begin{quote}\n\\texttt{public abstract class Component} \\\\*\n\\texttt{extends Object} \\\\*\n\\texttt{implements ImageObserver, MenuContainer, Serializable}\n\\end{quote}\n\n\tClass \\texttt{Component} is:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "FunctionalModule",
                "content": "\n\tWhen designing an architecture requirements can be split into functional, quality attributes, and constraints. Functional requirements have impact on:\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module view.",
                    "A component-and-connector view.",
                    "An allocation view.",
                    "They are not represented by a view."
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Usability.",
                    "Security.",
                    "Availability."
                ]
            },
            {
                "questionId": "ComponentViewType",
                "content": "\n\tThe quality(ies) that is(are) more relevant to views of the component-and-connector viewtype is(are):\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability and Performance.",
                    "Testability.",
                    "Availability."
                ]
            },
            {
                "questionId": "EarlyDecisions",
                "content": "\n\tIn his article, \\emph{Who Needs and Architect?}, Martin Fowler cites Ralph Johnson definition:\n\t\n\t\\begin{quote}\n\t\tArchitecture is the set of decisions that must be made early in a project.\n\t\\end{quote}\n\t\n\tIn his opinion:\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is right because if you don't the project fails.",
                    "This is wrong because you can easily change these decisions during the project lifetime.",
                    "This is right but you cannot be completely sure whether the decisions are the right ones.",
                    "This is wrong because it is against agile way of thinking the software development process."
                ]
            },
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tMartin Fowler, \\emph{Who Needs and Architect?}, cites Ralph Johnson sentence:\n\t\n\t\\begin{quote}\n\t\tIn most successful software projects, the expert developers working on that project have a shared understanding of the system design. This shared understanding is called architecture.\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "This shared understanding is what distinguishes architecture from design.",
                    "This shared understanding is necessary to define precise requirements.",
                    "This shared understanding does not allow to define the architecture trade-offs because some of the stakeholders have their own goals.",
                    "This shared understanding does not allow to have a global perspective of the system, because stakeholders have different interests."
                ]
            },
            {
                "questionId": "ArchitectDwarves",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture dwarves}. These kind of architects\n\t\n    ",
                "image": [],
                "options": [
                    "Are unable to understand the technology capabilities.",
                    "Are focused on the project context of the architecture.",
                    "Are unable to distinguish architecture from design.",
                    "Are focused on the business context of the architecture."
                ]
            },
            {
                "questionId": "ArchitectAstronauts",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture astronauts}. This kind of architect\n\t\n    ",
                "image": [],
                "options": [
                    "Is unable to define a domain model of the system.",
                    "Is focused on the technology context of the architecture.",
                    "Is focused on creating common generalizations of several systems.",
                    "Is focused on the details of the architecture."
                ]
            },
            {
                "questionId": "CreateArchitectureOne",
                "content": "\n\tDuring the different steps on how to create an architecture, the precise specification of architecture quality attributes is initially relevant to\n\t\n    ",
                "image": [],
                "options": [
                    "Make a business case for the system.",
                    "Understand the architecturally significant requirements.",
                    "The system design.",
                    "Documenting and communicating the architecture."
                ]
            },
            {
                "questionId": "CreateArchitectureTwo",
                "content": "\n\tThe \\emph{Ensuring that the implementation conforms to the architecture} step of how to create an architecture\n\t\n    ",
                "image": [],
                "options": [
                    "Tries to guarantee that the final system will have the qualities required by stakeholders.",
                    "Tries to guarantee that the final system will have the qualities aimed by the architecture.",
                    "Does not allow developers to define some of the design of the system",
                    "It requires automatic generation of code from the architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-11A-17co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-11A-17co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "Featuritis",
                "content": "\n\tFrank Buschmann states that:\n\t\t\n\t\\begin{quote}\n\t\tFeaturitis is the tendency to trade functional coverage for quality - the more functions the earlier they're delivered, the better.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Featuritis may result from a requirement of the technical context.",
                    "Featuritis requires the performance quality because the end user needs to execute the features.",
                    "Featuritis may be a result of a requirement of the business context.",
                    "Featuritis requires the modifiability quality to allow a the system to be easily modified to support new features."
                ]
            },
            {
                "questionId": "Performitis",
                "content": "\n\tFrank Buschmann cites the characterization Marquardt does of Performitis:\n\t\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system as testability and maintainability.\n\t\\end{quote}\n\t\n\tFrom this problem you can conclude that:\n\n    ",
                "image": [],
                "options": [
                    "Performance is a quality that you have to address at the end of the development process.",
                    "There is no system which can have good performance and be easily maintainable.",
                    "We have to distinguish architectural performance from opportunistic performance.",
                    "The system performance quality has impact on the performance of the execution of tests."
                ]
            },
            {
                "questionId": "ArchitectureDefinition",
                "content": "\n\tOn the course slides you can find the following definition of architecture:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a program or computing system is the structure or structures of the system, which comprise software elements, the externally visible properties of those elements, and the relationships among them.\n\t\\end{quote}\n\t\n\tHowever, in the book you can find another definition:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a system is the set of structures needed to reason about the system, which comprise the software elements, relations among them, and the properties of both.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The book definition does not consider relevant the externally visible properties.",
                    "The book definition also considers that the properties are externally visible because they are used for reasoning by the stakeholders.",
                    "The book definition also considers that the properties are externally visible because by definition an architectural property is externally visible.",
                    "The book definition is not correct, as pointed out in the errata."
                ]
            },
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tMartin Fowler, \\emph{Who Needs and Architect?}, cites Ralph Johnson sentence:\n\t\n\t\\begin{quote}\n\t\tIn most successful software projects, the expert developers working on that project have a shared understanding of the system design. This shared understanding is called architecture.\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "This shared understanding is what distinguishes architecture from design.",
                    "This shared understanding is necessary to define precise requirements.",
                    "This shared understanding does not allow to define the architecture trade-offs because some of the stakeholders have their own goals.",
                    "This shared understanding does not allow to have a global perspective of the system, because stakeholders have different interests."
                ]
            },
            {
                "questionId": "CreateArchitectureOne",
                "content": "\n\tDuring the different steps on how to create an architecture, the precise specification of architecture quality attributes is initially relevant to\n\t\n    ",
                "image": [],
                "options": [
                    "Make a business case for the system.",
                    "Understand the architecturally significant requirements.",
                    "The system design.",
                    "Documenting and communicating the architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-11B-17co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-11B-17co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tMartin Fowler, \\emph{Who Needs and Architect?}, cites Ralph Johnson sentence:\n\t\n\t\\begin{quote}\n\t\tIn most successful software projects, the expert developers working on that project have a shared understanding of the system design. This shared understanding is called architecture.\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "This shared understanding is what distinguishes architecture from design.",
                    "This shared understanding is necessary to define precise requirements.",
                    "This shared understanding does not allow to define the architecture trade-offs because some of the stakeholders have their own goals.",
                    "This shared understanding does not allow to have a global perspective of the system, because stakeholders have different interests."
                ]
            },
            {
                "questionId": "CreateArchitectureOne",
                "content": "\n\tDuring the different steps on how to create an architecture, the precise specification of architecture quality attributes is initially relevant to\n\t\n    ",
                "image": [],
                "options": [
                    "Make a business case for the system.",
                    "Understand the architecturally significant requirements.",
                    "The system design.",
                    "Documenting and communicating the architecture."
                ]
            },
            {
                "questionId": "Performitis",
                "content": "\n\tFrank Buschmann cites the characterization Marquardt does of Performitis:\n\t\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system as testability and maintainability.\n\t\\end{quote}\n\t\n\tFrom this problem you can conclude that:\n\n    ",
                "image": [],
                "options": [
                    "Performance is a quality that you have to address at the end of the development process.",
                    "There is no system which can have good performance and be easily maintainable.",
                    "We have to distinguish architectural performance from opportunistic performance.",
                    "The system performance quality has impact on the performance of the execution of tests."
                ]
            },
            {
                "questionId": "ArchitectureDefinition",
                "content": "\n\tOn the course slides you can find the following definition of architecture:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a program or computing system is the structure or structures of the system, which comprise software elements, the externally visible properties of those elements, and the relationships among them.\n\t\\end{quote}\n\t\n\tHowever, in the book you can find another definition:\n\t\n\t\\begin{quote}\n\t\tThe software architecture of a system is the set of structures needed to reason about the system, which comprise the software elements, relations among them, and the properties of both.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The book definition does not consider relevant the externally visible properties.",
                    "The book definition also considers that the properties are externally visible because they are used for reasoning by the stakeholders.",
                    "The book definition also considers that the properties are externally visible because by definition an architectural property is externally visible.",
                    "The book definition is not correct, as pointed out in the errata."
                ]
            },
            {
                "questionId": "Featuritis",
                "content": "\n\tFrank Buschmann states that:\n\t\t\n\t\\begin{quote}\n\t\tFeaturitis is the tendency to trade functional coverage for quality - the more functions the earlier they're delivered, the better.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Featuritis may result from a requirement of the technical context.",
                    "Featuritis requires the performance quality because the end user needs to execute the features.",
                    "Featuritis may be a result of a requirement of the business context.",
                    "Featuritis requires the modifiability quality to allow a the system to be easily modified to support new features."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-12A-24co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-12A-24co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "Flexibilitis",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tOverly flexible systems are hard to configure, and when they're finally configured, they lack qualities like performance or security.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Frank Buschmann is referring to some possible consequences of the modifiability quality.",
                    "Frank Buschmann are considering performance and security as the most important qualities.",
                    "Frank Buschmann is referring that the consequences of a flexible system is poor performance and bad security.",
                    "Frank Buschmann is not considering modifiability as an important quality"
                ]
            },
            {
                "questionId": "FeaturitisPerformitisFlexibilities",
                "content": "\n\tIn his article, \\emph{Featuritis, Performitis, and Other Deseases}, Frank Buschmann claims that:\n\n    ",
                "image": [],
                "options": [
                    "Performance should be the last quality to be addressed because it is a local property of an architecture.",
                    "Modifiability, flexibility, should be the first quality to be addressed because it allows the delay of architectural decisions.",
                    "The lack of functionality results in a system without business value, therefore a rich set of features should be implemented first.",
                    "A solution for any quality in isolation may lead to a biased architecture."
                ]
            },
            {
                "questionId": "ComponentvsModule",
                "content": "\n\tIn wikipedia you can find the following fragment of a definition:\n\t\n\t\\begin{quote}\n\t\tAn individual software component is a software package, or a module that encapsulates a set of related functions.\n\t\\end{quote}\n\t\n\tAccording to the definitions taught in the course the above \\emph{individual software component} corresponds to:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "EarlyDecisions",
                "content": "\n\tIn his article, \\emph{Who Needs and Architect?}, Martin Fowler cites Ralph Johnson definition:\n\t\n\t\\begin{quote}\n\t\tArchitecture is the set of decisions that must be made early in a project.\n\t\\end{quote}\n\t\n\tIn his opinion:\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is right because if you don't the project fails.",
                    "This is wrong because you can easily change these decisions during the project lifetime.",
                    "This is right but you cannot be completely sure whether the decisions are the right ones.",
                    "This is wrong because it is against agile way of thinking the software development process."
                ]
            },
            {
                "questionId": "ArchitectAstronauts",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture astronauts}. This kind of architect\n\t\n    ",
                "image": [],
                "options": [
                    "Is unable to define a domain model of the system.",
                    "Is focused on the technology context of the architecture.",
                    "Is focused on creating common generalizations of several systems.",
                    "Is focused on the details of the architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-12B-24co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-12B-24co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "ComponentvsModule",
                "content": "\n\tIn wikipedia you can find the following fragment of a definition:\n\t\n\t\\begin{quote}\n\t\tAn individual software component is a software package, or a module that encapsulates a set of related functions.\n\t\\end{quote}\n\t\n\tAccording to the definitions taught in the course the above \\emph{individual software component} corresponds to:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "EarlyDecisions",
                "content": "\n\tIn his article, \\emph{Who Needs and Architect?}, Martin Fowler cites Ralph Johnson definition:\n\t\n\t\\begin{quote}\n\t\tArchitecture is the set of decisions that must be made early in a project.\n\t\\end{quote}\n\t\n\tIn his opinion:\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is right because if you don't the project fails.",
                    "This is wrong because you can easily change these decisions during the project lifetime.",
                    "This is right but you cannot be completely sure whether the decisions are the right ones.",
                    "This is wrong because it is against agile way of thinking the software development process."
                ]
            },
            {
                "questionId": "ArchitectAstronauts",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture astronauts}. This kind of architect\n\t\n    ",
                "image": [],
                "options": [
                    "Is unable to define a domain model of the system.",
                    "Is focused on the technology context of the architecture.",
                    "Is focused on creating common generalizations of several systems.",
                    "Is focused on the details of the architecture."
                ]
            },
            {
                "questionId": "FeaturitisPerformitisFlexibilities",
                "content": "\n\tIn his article, \\emph{Featuritis, Performitis, and Other Deseases}, Frank Buschmann claims that:\n\n    ",
                "image": [],
                "options": [
                    "Performance should be the last quality to be addressed because it is a local property of an architecture.",
                    "Modifiability, flexibility, should be the first quality to be addressed because it allows the delay of architectural decisions.",
                    "The lack of functionality results in a system without business value, therefore a rich set of features should be implemented first.",
                    "A solution for any quality in isolation may lead to a biased architecture."
                ]
            },
            {
                "questionId": "Flexibilitis",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tOverly flexible systems are hard to configure, and when they're finally configured, they lack qualities like performance or security.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Frank Buschmann is referring to some possible consequences of the modifiability quality.",
                    "Frank Buschmann are considering performance and security as the most important qualities.",
                    "Frank Buschmann is referring that the consequences of a flexible system is poor performance and bad security.",
                    "Frank Buschmann is not considering modifiability as an important quality"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-13A-17co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-13A-17co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "Explicit",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tThere's only one escape from such situations: architects must actively break the cycle of mutual misunderstanding and mistrust!\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Such misunderstanding and mistrust occurs because the stakeholders have their own agendas",
                    "The cycle Frank Buschmann refers to is the Architectural Influence Cycle.",
                    "The cycle Frank Buschmann refers to allows the clarification of requirements.",
                    "To break such misunderstanding and mistrust the architecture has to make explicit the stakeholders needs."
                ]
            },
            {
                "questionId": "WalkingSkeleton",
                "content": "\n\tThe \\emph{Walking Skeleton} referred in Frank Buschmann's article, \\emph{Featuritis, Performitis, and Other Deseases}:\n\n    ",
                "image": [],
                "options": [
                    "Is a functional prototype, which tests the functionalities required by the business stakeholders.",
                    "Is an architecture that demonstrates that the system will support the qualities raised by the stakeholders.",
                    "Is a baseline architecture that allows to experiment with the most significant architectural requirements.",
                    "Is an object-oriented framework, which integrates functional and non-functional requirements of the system."
                ]
            },
            {
                "questionId": "ComponentvsModuleTwo",
                "content": "\n\tIn the Java documentation you can find:\n\t\n\\begin{quote}\n\\texttt{public abstract class Component} \\\\*\n\\texttt{extends Object} \\\\*\n\\texttt{implements ImageObserver, MenuContainer, Serializable}\n\\end{quote}\n\n\tClass \\texttt{Component} is:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Usability.",
                    "Security.",
                    "Availability."
                ]
            },
            {
                "questionId": "ArchitectDwarves",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture dwarves}. These kind of architects\n\t\n    ",
                "image": [],
                "options": [
                    "Are unable to understand the technology capabilities.",
                    "Are focused on the project context of the architecture.",
                    "Are unable to distinguish architecture from design.",
                    "Are focused on the business context of the architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-13B-17co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-13B-17co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "ArchitectDwarves",
                "content": "\n\tFrank Buschmann, \\emph{Introducing the Pragmatic Architect}, defines the \\emph{architecture dwarves}. These kind of architects\n\t\n    ",
                "image": [],
                "options": [
                    "Are unable to understand the technology capabilities.",
                    "Are focused on the project context of the architecture.",
                    "Are unable to distinguish architecture from design.",
                    "Are focused on the business context of the architecture."
                ]
            },
            {
                "questionId": "ComponentvsModuleTwo",
                "content": "\n\tIn the Java documentation you can find:\n\t\n\\begin{quote}\n\\texttt{public abstract class Component} \\\\*\n\\texttt{extends Object} \\\\*\n\\texttt{implements ImageObserver, MenuContainer, Serializable}\n\\end{quote}\n\n\tClass \\texttt{Component} is:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "Explicit",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tThere's only one escape from such situations: architects must actively break the cycle of mutual misunderstanding and mistrust!\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Such misunderstanding and mistrust occurs because the stakeholders have their own agendas",
                    "The cycle Frank Buschmann refers to is the Architectural Influence Cycle.",
                    "The cycle Frank Buschmann refers to allows the clarification of requirements.",
                    "To break such misunderstanding and mistrust the architecture has to make explicit the stakeholders needs."
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Usability.",
                    "Security.",
                    "Availability."
                ]
            },
            {
                "questionId": "WalkingSkeleton",
                "content": "\n\tThe \\emph{Walking Skeleton} referred in Frank Buschmann's article, \\emph{Featuritis, Performitis, and Other Deseases}:\n\n    ",
                "image": [],
                "options": [
                    "Is a functional prototype, which tests the functionalities required by the business stakeholders.",
                    "Is an architecture that demonstrates that the system will support the qualities raised by the stakeholders.",
                    "Is a baseline architecture that allows to experiment with the most significant architectural requirements.",
                    "Is an object-oriented framework, which integrates functional and non-functional requirements of the system."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-14A-24co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-14A-24co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "Prioritize",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tArchitects use flexibility as a cover for uncertainty.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "A flexible architecture occurs when it is not possible to identify all the requirements.",
                    "A solution to this problem is to prioritize the system qualities.",
                    "Performance uncertainty about the system should be dealt with more flexibility.",
                    "A solution to this problem is to reduce the level of flexibility of a system."
                ]
            },
            {
                "questionId": "HammersNails",
                "content": "\n\tIn his article \\emph{On Hammers and Nails, and Falling in Love with Technology and Design} what is the main type of influence on the architecture?\n\n    ",
                "image": [],
                "options": [
                    "Project and Technical Contexts.",
                    "Project and Professional Contexts.",
                    "Business and Project Contexts.",
                    "Professional and Technical Contexts."
                ]
            },
            {
                "questionId": "FunctionalModule",
                "content": "\n\tWhen designing an architecture requirements can be split into functional, quality attributes, and constraints. Functional requirements have impact on:\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module view.",
                    "A component-and-connector view.",
                    "An allocation view.",
                    "They are not represented by a view."
                ]
            },
            {
                "questionId": "ComponentViewType",
                "content": "\n\tThe quality(ies) that is(are) more relevant to views of the component-and-connector viewtype is(are):\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability and Performance.",
                    "Testability.",
                    "Availability."
                ]
            },
            {
                "questionId": "CreateArchitectureTwo",
                "content": "\n\tThe \\emph{Ensuring that the implementation conforms to the architecture} step of how to create an architecture\n\t\n    ",
                "image": [],
                "options": [
                    "Tries to guarantee that the final system will have the qualities required by stakeholders.",
                    "Tries to guarantee that the final system will have the qualities aimed by the architecture.",
                    "Does not allow developers to define some of the design of the system",
                    "It requires automatic generation of code from the architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-1/test-14B-24co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-1-test-14B-24co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "CreateArchitectureTwo",
                "content": "\n\tThe \\emph{Ensuring that the implementation conforms to the architecture} step of how to create an architecture\n\t\n    ",
                "image": [],
                "options": [
                    "Tries to guarantee that the final system will have the qualities required by stakeholders.",
                    "Tries to guarantee that the final system will have the qualities aimed by the architecture.",
                    "Does not allow developers to define some of the design of the system",
                    "It requires automatic generation of code from the architecture."
                ]
            },
            {
                "questionId": "ComponentViewType",
                "content": "\n\tThe quality(ies) that is(are) more relevant to views of the component-and-connector viewtype is(are):\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability and Performance.",
                    "Testability.",
                    "Availability."
                ]
            },
            {
                "questionId": "HammersNails",
                "content": "\n\tIn his article \\emph{On Hammers and Nails, and Falling in Love with Technology and Design} what is the main type of influence on the architecture?\n\n    ",
                "image": [],
                "options": [
                    "Project and Technical Contexts.",
                    "Project and Professional Contexts.",
                    "Business and Project Contexts.",
                    "Professional and Technical Contexts."
                ]
            },
            {
                "questionId": "FunctionalModule",
                "content": "\n\tWhen designing an architecture requirements can be split into functional, quality attributes, and constraints. Functional requirements have impact on:\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module view.",
                    "A component-and-connector view.",
                    "An allocation view.",
                    "They are not represented by a view."
                ]
            },
            {
                "questionId": "Prioritize",
                "content": "\n\tFrank Buschmann states that:\n\t\n\t\\begin{quote}\n\t\tArchitects use flexibility as a cover for uncertainty.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "A flexible architecture occurs when it is not possible to identify all the requirements.",
                    "A solution to this problem is to prioritize the system qualities.",
                    "Performance uncertainty about the system should be dealt with more flexibility.",
                    "A solution to this problem is to reduce the level of flexibility of a system."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-2.tex",
        "quizTitle": "..-data-2014-test-2-test-2",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-21A-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-21A-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-21B-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-21B-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-22A-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-22A-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-22B-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-22B-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-23A-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-23A-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-23B-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-23B-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-24A-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-24A-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-2/test-24B-18co\u2560\u0411pias.tex",
        "quizTitle": "..-data-2014-test-2-test-24B-18co\u2560\u0411pias",
        "questions": [
            {
                "questionId": "AvailabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tWhen writing to the database the system receives an exception about a write failure. The system should stop interacting with data base and write a log message. \n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Reliability.",
                    "Fault-tolerance"
                ]
            },
            {
                "questionId": "Scenario",
                "content": "\n\tIn a quality scenario\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is a system input.",
                    "The response can be omitted.",
                    "The artefact can be outside the system.",
                    "The stimulus and the response should be always present."
                ]
            },
            {
                "questionId": "InteroperabilityScenario",
                "content": "\n\tConsider the following scenario\n\t\n\t\\begin{quote}\n\t\tOur vehicle information system send our current location to the traffic monitoring system. The traffic monitoring system combines our location with other information, overlays this information on a Google Map, and broadcasts it. Our location information is correctly included with a probability of 99.99\\%.\n\t\\end{quote}\n\t\n\tThe quality addressed by this scenario is\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Interoperability.",
                    "Testability."
                ]
            },
            {
                "questionId": "PingEcho",
                "content": "\n\tA heartbeat monitor\n\n    ",
                "image": [],
                "options": [
                    "Implements a tactic to recover from faults.",
                    "Implements a tactic to prevent faults.",
                    "Can be used as the source of a stimulus in a scenario.",
                    "Can be used in a non-concurrent system."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "ChromePredictor",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tThe goal of the predictor is to evaluate the likelihood of its success, and then to trigger the activity if resources are available. \n\t\\end{quote}\n\t\n\tThe above sentence refer to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain multiple copies of data tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Schedule resources tactic."
                ]
            },
            {
                "questionId": "GarbageCollector",
                "content": "\n\tIn wikipedia you can find the following definition:\n\t\n\t\\begin{quote}\n\t\tThe garbage collector, or just collector, attempts to reclaim garbage, or memory occupied by objects that are no longer in use by the program.\n\t\\end{quote}\n\t\n\tThe garbage collector is a component that implements an availability tactic of\n\n    ",
                "image": [],
                "options": [
                    "Ignore faulty behavior.",
                    "Transactions.",
                    "Rollback.",
                    "Exception prevention."
                ]
            },
            {
                "questionId": "GraphiteTechnicaAndNonTechnicalUsers",
                "content": "\n\tHuman-editable URL API for creating graphs is a usability design tactic used in the Graphite system. This tactic\n\n    ",
                "image": [],
                "options": [
                    "Is an aggregate design tactic.",
                    "Is a maintain user model design tactic.",
                    "Is a design tactic for a scenario where the source of stimulus are technical users.",
                    "Is a design tactic for a scenario where the source of stimulus is the graph owner user."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "GraphiteBackend",
                "content": "\n\tTo reduce the backend load (writes) the Graphite system uses\n\t\n    ",
                "image": [],
                "options": [
                    "A Maintain Multiple Copies of Computation design tactic in Carbon.",
                    "A Maintain Multiple Copies of Computation design tactic in the WebApp such that reads do not compete with writes.",
                    "A Maintain Multiple Copies of Data design tactic in Carbon.",
                    "A Maintain Multiple Copies of Data design tactic in the WebApp such that reads do not compete with writes."
                ]
            },
            {
                "questionId": "Firewall",
                "content": "\n\tHaving a single point of access to an intranet is a security tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Limit access.",
                    "Limit exposure.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "VerifyMessageIntegrity",
                "content": "\n\tIn the Fenix system a checksum is associated to a set of grades. This is an application of the tactic\n\t\n    ",
                "image": [],
                "options": [
                    "Detect intrusion.",
                    "Detect service denial.",
                    "Verify message integrity.",
                    "Detect message delay."
                ]
            },
            {
                "questionId": "InternalAttack",
                "content": "\n\tIn a system where the source of attacks can be internal, from authorized users, the appropriate tactics to be used are\n\t\n    ",
                "image": [],
                "options": [
                    "Detect and Resist.",
                    "Detect and React.",
                    "Detect and Recover.",
                    "Resist and React."
                ]
            },
            {
                "questionId": "SeparateEntities",
                "content": "\n\tIn a system where there are sensitive data an appropriate tactic to be used is\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access, to restrict the access to the database system.",
                    "Limit exposure, locate the database system in the intranet.",
                    "Separate entities, to allow the use of more strict tactics on the sensitive data.",
                    "Change default settings, because default passwords are sensitive."
                ]
            },
            {
                "questionId": "ChromeTabSecurity",
                "content": "\n\tIn the Chrome system the use of a process per tab results form the application of a tactic of\n\t\n    ",
                "image": [],
                "options": [
                    "Limit access.",
                    "Increase resources.",
                    "Increase resource efficiency.",
                    "Maintain multiple copies of data."
                ]
            },
            {
                "questionId": "ChromePerformance",
                "content": "\n\tIn the Chrome system the following tactic is used to improve performance\n\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Introduce concurrency.",
                    "Reduce overhead.",
                    "Manage sample rate."
                ]
            },
            {
                "questionId": "GraphiteModifiability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tMaking multiple Graphite servers appear to be a single system from a user perspective isn't terribly difficult, at least for a naive implementation.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is modifiability.",
                    "The quality addressed is availability and an active redundancy design tactic is required to solve the problem.",
                    "The quality addressed is modifiability and an increase cohesion design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "Tactics",
                "content": "\n\tAn architectural tactic\n\n    ",
                "image": [],
                "options": [
                    "Is a mediator, an application of the mediator pattern, between the input stimulus and the output response.",
                    "May be associated to other tactics to deal with a single stimulus.",
                    "Is an architectural pattern.",
                    "Is a system decomposition."
                ]
            },
            {
                "questionId": "Degradation",
                "content": "\n\tConsider a enterprise web system, which provides services both on the company's intranet and to the company's clients on the internet, that when under a denial of service attack decides to stop providing internet services.\n\n    ",
                "image": [],
                "options": [
                    "This situation corresponds to the use of the degradation availability tactic.",
                    "This situation corresponds to the use of the removal from service availability tactic.",
                    "This situation corresponds to the use of the limit access security tactic.",
                    "This situation corresponds to the use of the limit exposure security tactic."
                ]
            },
            {
                "questionId": "ChromeUsability",
                "content": "\n\tIn the description of the Chrome system can be read\n\t\n\t\\begin{quote}\n\t\tAs the user types, the Omnibox automatically proposes an action, which is either a URL based on your navigation history, or a search query.\n\t\\end{quote}\n\t\n\tThe above sentence refers to\n\t\n    ",
                "image": [],
                "options": [
                    "Maintain user model tactic.",
                    "Introduce concurrence tactic.",
                    "Increase resource efficiency tactic.",
                    "Maintain task model tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-3.tex",
        "quizTitle": "..-data-2014-test-3-test-3",
        "questions": [
            {
                "questionId": "FenixBusinessCase",
                "content": "\n\tIn the context of the FenixEdu case study, the business case was to\n\n    ",
                "image": [],
                "options": [
                    "Incorporate in the organization's core business the goals of a software house.",
                    "Do in-house development.",
                    "Integrate the development of the software system with the organization's business goals.",
                    "Reimplement all the information systems of the organization"
                ]
            },
            {
                "questionId": "BusinessScenarioOne",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe school management pretends that all the members of the school, students, administrative staff, faculty and management should be able to use the system to perform their activities efficiently without requiring the installation of any client software or a long learning process.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            },
            {
                "questionId": "BusinessScenarioTwo",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe management intends that the system should be available to all users, even after offices close and classes finish because students may need courses material to study 24X7 and faculty and administrative staff may want to work from home.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            },
            {
                "questionId": "UtilityTree",
                "content": "\n\tA utility tree\n\n    ",
                "image": [],
                "options": [
                    "Only contains business qualities.",
                    "Cannot be defined for the security quality.",
                    "Contains the architectural tactics associated with architecturally significant requirements.",
                    "Contains the business value and the architectural impact of architecturally significant requirements."
                ]
            },
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            },
            {
                "questionId": "LowArchitecturalImpact",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a low impact on the architecture but a high business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture because it has little effect in the architecture.",
                    "This ASR requires a specific architectural design because it profoundly affects the architecture.",
                    "The cost of meeting the ASR after development starts is too high.",
                    "Any ASR that has a high business value cannot have a low architecture impact because it needs to be supported by the architecture."
                ]
            },
            {
                "questionId": "HighBusinessValue",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a high impact on the architecture but a low business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture.",
                    "This ASR should be supported by the architecture because of its high impact.",
                    "The architect have to decide on the cost/benefit of designing an architecture that supports this ASR.",
                    "The architect should support this ASR after designing an architecture that supports all the ASRs with high business value."
                ]
            },
            {
                "questionId": "FenixADD",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "SocialCalcMaintainTaskModel",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTherefore, on browsers with support for CSS3, we use the box-shadow property to represent multiple peer cursors in the same cell.\n\t\\end{quote} \n\t\n\tThis corresponds to the application of\n\n    ",
                "image": [],
                "options": [
                    "Maintain system model tactic.",
                    "Support user initiative tactic.",
                    "Maintain multiple copies of data tactic.",
                    "Conflict detection tactic."
                ]
            },
            {
                "questionId": "SocialCalcUsability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tEven with race conditions resolved, it is still suboptimal to accidentally overwrite the cell another user is currently editing. A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Testability.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "SocialCalcAvailability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tIf users A and B simultaneously perform an operation affecting the same cells, then receive and execute commands broadcast from the other user, they will end up in different states.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "SocialCalcModifiability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTo make this work across browsers and operating systems, we use the Web::Hippie4 framework, a high-level abstraction of JSON-over-WebSocket with convenient jQuery bindings.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Modifiability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecAvailability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tTurns also have a time limit imposed by the server, so that slow or unresponsive players cannot hold up a game.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Interoperability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecInteroperability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tFinding a public Thousand Parsec server to play on is much like locating a lone stealth scout in deep space - a daunting prospect if one doesn't know where to look. Fortunately, public servers can announce themselves to a metaserver, whose location, as a central hub, should ideally be well-known to players.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Interoperability.",
                    "Performance.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecRollback",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tBesides often running far longer than the circadian rhythms of the players' species, during this extended period the server process might be prematurely terminated for any number of reasons. To allow players to pick up a game where they left off, Thousand Parsec servers provide persistence by storing the entire state of the universe (or even multiple universes) in a database.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Rollback.",
                    "Persistence.",
                    "Retry.",
                    "Passive redundancy."
                ]
            },
            {
                "questionId": "ThounsandParsecSystemInitiative",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tNext, the player is prompted to configure options for the ruleset and server, with sane defaults pulled from the metadata. Finally, if any compatible AI clients are installed, the player is prompted to configure one or more of them to play against.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Change default settings.",
                    "Limit access.",
                    "Support user initiative.",
                    "Support system initiative."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            },
            {
                "questionId": "DecompositionBuilvsBuy",
                "content": "\n\tA criteria for the the application of the Decomposition architectural style of the Module viewtype is Build-vs-Buy decisions. The application of the criteria\n\t\n\n    ",
                "image": [],
                "options": [
                    "Results in a similar decomposition as if the criteria was not applied but some modules are identified to be outsourced.",
                    "Results in a decomposition where each module may be implemented by a single developer.",
                    "Allows to increase the overall calendar development time of the project because there is a communication overhead with external teams.",
                    "Allows to identify modules for which the development team does not have the required implementation competences."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-31A-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-31A-18copias",
        "questions": [
            {
                "questionId": "FenixBusinessCase",
                "content": "\n\tIn the context of the FenixEdu case study, the business case was to\n\n    ",
                "image": [],
                "options": [
                    "Incorporate in the organization's core business the goals of a software house.",
                    "Do in-house development.",
                    "Integrate the development of the software system with the organization's business goals.",
                    "Reimplement all the information systems of the organization"
                ]
            },
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            },
            {
                "questionId": "SocialCalcUsability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tEven with race conditions resolved, it is still suboptimal to accidentally overwrite the cell another user is currently editing. A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Testability.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecInteroperability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tFinding a public Thousand Parsec server to play on is much like locating a lone stealth scout in deep space - a daunting prospect if one doesn't know where to look. Fortunately, public servers can announce themselves to a metaserver, whose location, as a central hub, should ideally be well-known to players.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Interoperability.",
                    "Performance.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "DecompositionBuilvsBuy",
                "content": "\n\tA criteria for the the application of the Decomposition architectural style of the Module viewtype is Build-vs-Buy decisions. The application of the criteria\n\t\n\n    ",
                "image": [],
                "options": [
                    "Results in a similar decomposition as if the criteria was not applied but some modules are identified to be outsourced.",
                    "Results in a decomposition where each module may be implemented by a single developer.",
                    "Allows to increase the overall calendar development time of the project because there is a communication overhead with external teams.",
                    "Allows to identify modules for which the development team does not have the required implementation competences."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-31B-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-31B-18copias",
        "questions": [
            {
                "questionId": "SocialCalcUsability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tEven with race conditions resolved, it is still suboptimal to accidentally overwrite the cell another user is currently editing. A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Testability.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecInteroperability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tFinding a public Thousand Parsec server to play on is much like locating a lone stealth scout in deep space - a daunting prospect if one doesn't know where to look. Fortunately, public servers can announce themselves to a metaserver, whose location, as a central hub, should ideally be well-known to players.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Interoperability.",
                    "Performance.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "FenixBusinessCase",
                "content": "\n\tIn the context of the FenixEdu case study, the business case was to\n\n    ",
                "image": [],
                "options": [
                    "Incorporate in the organization's core business the goals of a software house.",
                    "Do in-house development.",
                    "Integrate the development of the software system with the organization's business goals.",
                    "Reimplement all the information systems of the organization"
                ]
            },
            {
                "questionId": "DecompositionBuilvsBuy",
                "content": "\n\tA criteria for the the application of the Decomposition architectural style of the Module viewtype is Build-vs-Buy decisions. The application of the criteria\n\t\n\n    ",
                "image": [],
                "options": [
                    "Results in a similar decomposition as if the criteria was not applied but some modules are identified to be outsourced.",
                    "Results in a decomposition where each module may be implemented by a single developer.",
                    "Allows to increase the overall calendar development time of the project because there is a communication overhead with external teams.",
                    "Allows to identify modules for which the development team does not have the required implementation competences."
                ]
            },
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-32A-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-32A-18copias",
        "questions": [
            {
                "questionId": "BusinessScenarioOne",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe school management pretends that all the members of the school, students, administrative staff, faculty and management should be able to use the system to perform their activities efficiently without requiring the installation of any client software or a long learning process.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            },
            {
                "questionId": "LowArchitecturalImpact",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a low impact on the architecture but a high business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture because it has little effect in the architecture.",
                    "This ASR requires a specific architectural design because it profoundly affects the architecture.",
                    "The cost of meeting the ASR after development starts is too high.",
                    "Any ASR that has a high business value cannot have a low architecture impact because it needs to be supported by the architecture."
                ]
            },
            {
                "questionId": "SocialCalcModifiability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTo make this work across browsers and operating systems, we use the Web::Hippie4 framework, a high-level abstraction of JSON-over-WebSocket with convenient jQuery bindings.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Modifiability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecSystemInitiative",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tNext, the player is prompted to configure options for the ruleset and server, with sane defaults pulled from the metadata. Finally, if any compatible AI clients are installed, the player is prompted to configure one or more of them to play against.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Change default settings.",
                    "Limit access.",
                    "Support user initiative.",
                    "Support system initiative."
                ]
            },
            {
                "questionId": "DecompositionBuilvsBuy",
                "content": "\n\tA criteria for the the application of the Decomposition architectural style of the Module viewtype is Build-vs-Buy decisions. The application of the criteria\n\t\n\n    ",
                "image": [],
                "options": [
                    "Results in a similar decomposition as if the criteria was not applied but some modules are identified to be outsourced.",
                    "Results in a decomposition where each module may be implemented by a single developer.",
                    "Allows to increase the overall calendar development time of the project because there is a communication overhead with external teams.",
                    "Allows to identify modules for which the development team does not have the required implementation competences."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-32B-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-32B-18copias",
        "questions": [
            {
                "questionId": "SocialCalcModifiability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTo make this work across browsers and operating systems, we use the Web::Hippie4 framework, a high-level abstraction of JSON-over-WebSocket with convenient jQuery bindings.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Modifiability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecSystemInitiative",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tNext, the player is prompted to configure options for the ruleset and server, with sane defaults pulled from the metadata. Finally, if any compatible AI clients are installed, the player is prompted to configure one or more of them to play against.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Change default settings.",
                    "Limit access.",
                    "Support user initiative.",
                    "Support system initiative."
                ]
            },
            {
                "questionId": "DecompositionBuilvsBuy",
                "content": "\n\tA criteria for the the application of the Decomposition architectural style of the Module viewtype is Build-vs-Buy decisions. The application of the criteria\n\t\n\n    ",
                "image": [],
                "options": [
                    "Results in a similar decomposition as if the criteria was not applied but some modules are identified to be outsourced.",
                    "Results in a decomposition where each module may be implemented by a single developer.",
                    "Allows to increase the overall calendar development time of the project because there is a communication overhead with external teams.",
                    "Allows to identify modules for which the development team does not have the required implementation competences."
                ]
            },
            {
                "questionId": "LowArchitecturalImpact",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a low impact on the architecture but a high business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture because it has little effect in the architecture.",
                    "This ASR requires a specific architectural design because it profoundly affects the architecture.",
                    "The cost of meeting the ASR after development starts is too high.",
                    "Any ASR that has a high business value cannot have a low architecture impact because it needs to be supported by the architecture."
                ]
            },
            {
                "questionId": "BusinessScenarioOne",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe school management pretends that all the members of the school, students, administrative staff, faculty and management should be able to use the system to perform their activities efficiently without requiring the installation of any client software or a long learning process.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-33A-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-33A-18copias",
        "questions": [
            {
                "questionId": "UtilityTree",
                "content": "\n\tA utility tree\n\n    ",
                "image": [],
                "options": [
                    "Only contains business qualities.",
                    "Cannot be defined for the security quality.",
                    "Contains the architectural tactics associated with architecturally significant requirements.",
                    "Contains the business value and the architectural impact of architecturally significant requirements."
                ]
            },
            {
                "questionId": "HighBusinessValue",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a high impact on the architecture but a low business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture.",
                    "This ASR should be supported by the architecture because of its high impact.",
                    "The architect have to decide on the cost/benefit of designing an architecture that supports this ASR.",
                    "The architect should support this ASR after designing an architecture that supports all the ASRs with high business value."
                ]
            },
            {
                "questionId": "SocialCalcAvailability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tIf users A and B simultaneously perform an operation affecting the same cells, then receive and execute commands broadcast from the other user, they will end up in different states.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "ThounsandParsecAvailability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tTurns also have a time limit imposed by the server, so that slow or unresponsive players cannot hold up a game.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Interoperability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-33B-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-33B-18copias",
        "questions": [
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            },
            {
                "questionId": "SocialCalcAvailability",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tIf users A and B simultaneously perform an operation affecting the same cells, then receive and execute commands broadcast from the other user, they will end up in different states.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Reliability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "UtilityTree",
                "content": "\n\tA utility tree\n\n    ",
                "image": [],
                "options": [
                    "Only contains business qualities.",
                    "Cannot be defined for the security quality.",
                    "Contains the architectural tactics associated with architecturally significant requirements.",
                    "Contains the business value and the architectural impact of architecturally significant requirements."
                ]
            },
            {
                "questionId": "ThounsandParsecAvailability",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tTurns also have a time limit imposed by the server, so that slow or unresponsive players cannot hold up a game.\n\t\\end{quote} \n\t\n\tFrom this fragment can be identified a scenario for\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Interoperability.",
                    "Availability.",
                    "Usability."
                ]
            },
            {
                "questionId": "HighBusinessValue",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a high impact on the architecture but a low business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture.",
                    "This ASR should be supported by the architecture because of its high impact.",
                    "The architect have to decide on the cost/benefit of designing an architecture that supports this ASR.",
                    "The architect should support this ASR after designing an architecture that supports all the ASRs with high business value."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-34A-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-34A-18copias",
        "questions": [
            {
                "questionId": "BusinessScenarioTwo",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe management intends that the system should be available to all users, even after offices close and classes finish because students may need courses material to study 24X7 and faculty and administrative staff may want to work from home.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            },
            {
                "questionId": "FenixADD",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "SocialCalcMaintainTaskModel",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTherefore, on browsers with support for CSS3, we use the box-shadow property to represent multiple peer cursors in the same cell.\n\t\\end{quote} \n\t\n\tThis corresponds to the application of\n\n    ",
                "image": [],
                "options": [
                    "Maintain system model tactic.",
                    "Support user initiative tactic.",
                    "Maintain multiple copies of data tactic.",
                    "Conflict detection tactic."
                ]
            },
            {
                "questionId": "ThounsandParsecRollback",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tBesides often running far longer than the circadian rhythms of the players' species, during this extended period the server process might be prematurely terminated for any number of reasons. To allow players to pick up a game where they left off, Thousand Parsec servers provide persistence by storing the entire state of the universe (or even multiple universes) in a database.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Rollback.",
                    "Persistence.",
                    "Retry.",
                    "Passive redundancy."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-3/test-34B-18copias.tex",
        "quizTitle": "..-data-2014-test-3-test-34B-18copias",
        "questions": [
            {
                "questionId": "SocialCalcMaintainTaskModel",
                "content": "\n\tIn the description of the SocialCalc case study can be read:\n\t\n\t\\begin{quote}\n\t\tTherefore, on browsers with support for CSS3, we use the box-shadow property to represent multiple peer cursors in the same cell.\n\t\\end{quote} \n\t\n\tThis corresponds to the application of\n\n    ",
                "image": [],
                "options": [
                    "Maintain system model tactic.",
                    "Support user initiative tactic.",
                    "Maintain multiple copies of data tactic.",
                    "Conflict detection tactic."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            },
            {
                "questionId": "ThounsandParsecRollback",
                "content": "\n\tIn the description of the Thousand Parsec case study can be read:\n\t\n\t\\begin{quote}\n\t\tBesides often running far longer than the circadian rhythms of the players' species, during this extended period the server process might be prematurely terminated for any number of reasons. To allow players to pick up a game where they left off, Thousand Parsec servers provide persistence by storing the entire state of the universe (or even multiple universes) in a database.\n\t\\end{quote} \n\t\n\tThe tactic referred in the fragments is\n\n    ",
                "image": [],
                "options": [
                    "Rollback.",
                    "Persistence.",
                    "Retry.",
                    "Passive redundancy."
                ]
            },
            {
                "questionId": "FenixADD",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "BusinessScenarioTwo",
                "content": "\n\tIn the context of the FenixEdu case study the following scenario was identified.\n\t\n\t\\begin{quote}\n\t\tThe management intends that the system should be available to all users, even after offices close and classes finish because students may need courses material to study 24X7 and faculty and administrative staff may want to work from home.\n\t\\end{quote}\n\t\n\tThis is a \n\n    ",
                "image": [],
                "options": [
                    "Business scenario.",
                    "Availability scenario.",
                    "Modifiability scenario.",
                    "Usability scenario."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-4.tex",
        "quizTitle": "..-data-2014-test-4-test-4",
        "questions": [
            {
                "questionId": "UsesFor",
                "content": "\n\tThe Uses architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Allows the analysis of the impact of changes because if a module uses another it will necessarily have to change whenever the used module changes.",
                    "Improves testability because if a module uses another then it is only possible to test them together.",
                    "Allows incremental development because the possible increments of functionally can be inferred from use dependencies.",
                    "Improves testability because it informs the tester about which modules involved in circular use dependencies."
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module.",
                    "The invoked function may not have any input parameter.",
                    "The invoked function may not have any output parameter.",
                    "The invoked function may not have both any input parameter nor any output parameter."
                ]
            },
            {
                "questionId": "UsesCycles",
                "content": "\n\tConsider a view of the module viewtype where there is a uses loop, a cycle of uses dependences between several modules. It may be possible to break the dependence cycle by\n\t\n\n    ",
                "image": [],
                "options": [
                    "Applying the generalization style to identify child modules of a module in the loop chain.",
                    "Applying the decomposition style to some of the modules in the loop chain.",
                    "Identifying which of the \\emph{uses} dependencies are actually generalization dependencies.",
                    "Decomposing a \\emph{uses} relation into different interfaces."
                ]
            },
            {
                "questionId": "GeneralizationEvolution",
                "content": "\n\tThe Generalization architectural style of the module viewtype can be use to support the evolution of a system \n\t\n\n    ",
                "image": [],
                "options": [
                    "By changing the commonalities that are in the children.",
                    "Because the \\emph{is-a} relation does not allow reuse of implementation.",
                    "By adding, removing, or changing children.",
                    "By changing a parent, which will automatically change all the children that inherit from it."
                ]
            },
            {
                "questionId": "LayeredVirtualMachine",
                "content": "\n\tAccording to the definition of the Layered architectural style, each layer represents a grouping of modules that offers a cohesive set of services.\n\t\n    ",
                "image": [],
                "options": [
                    "This means that the modules inside a layer cannot be loosely coupled.",
                    "This means that this architectural style emphasizes the quality of performance.",
                    "This means that each module cannot use other modules inside the same layer.",
                    "This means that the modules inside a layer are likely to be ported to a new application together."
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n\tAn architect is decomposing a system into a set of responsibilities using a view of the Decomposition style. However, she had already to backtrack several times and try new decompositions because she end up with some responsibility that can not be within a single module.\n\t\n    ",
                "image": [],
                "options": [
                    "She should try to use a view of the Aspects style, assign this responsibility to a module such that the other modules can crosscut this responsibility.",
                    "She should try to use a view of the Aspects style, assign this responsibility to a module and bind it to the modules affected by it.",
                    "She should define finer-grained modules where she splits the unassigned responsibility.",
                    "This means that in this software system it is not possible to modularize each responsibility in a cohesive module."
                ]
            },
            {
                "questionId": "DataModelFacebook",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and applications are routed to the right servers for queries and updates. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is necessary design a CRUD matrix to show the dependencies between the persistent information.",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure.",
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure.",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance issues of the access to data."
                ]
            },
            {
                "questionId": "UsesDataModel",
                "content": "\n\tA CRUD matrix, which indicates whether each module creates, reads, updates, or deletes data (CRUD, for short) from each data entity. The CRUD matrix\n\t\n    ",
                "image": [],
                "options": [
                    "Relates a view of the Uses style with a view of the Data Model style.",
                    "Is an extension of a view of the Data Model style.",
                    "Allows to avoid redundancy and inconsistency.",
                    "Describes the structure of the data used by the system."
                ]
            },
            {
                "questionId": "GitHubSecurity",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOf course, allowing arbitrary execution of commands is unsafe, so SSH includes the ability to restrict what commands can be executed. In a very simple case, you can restrict execution to git-shell which is included with Git. All this script does is check the command that you're trying to execute and ensure that it's one of git upload-pack, git receive-pack, or git upload-archive.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Limit exposure.",
                    "Limit access.",
                    "Authorize actors.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "GitConditionMonitoring",
                "content": "\n\tIn the description of the Git case study can be read how to deal with the corruption of pack files in the context of the availability quality:\n\t\n\t\\begin{quote}\n\t\tIf an object was only copied partially or another form of data corruption occurred, recalculating the SHA of the current object will identify such corruption.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Sanity checking.",
                    "Exception detection.",
                    "Detect intrusion.",
                    "Condition monitoring."
                ]
            },
            {
                "questionId": "GitIncreaseResourceEfficiency",
                "content": "\n\tIn the description of the Git case study can be read how it efficiently compares content:\n\t\n\t\\begin{quote}\n\t\tWhen a content (i.e., file or directory) node in the graph has the same reference identity (the SHA in Git) as that in a different commit, the two nodes are guaranteed to contain the same content, allowing Git to short-circuit content diffing efficiently.\n\t\\end{quote}\n\t\n\tThe performance tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Maintain multiple copies of data.",
                    "Increase resource efficiency.",
                    "Reduce overhead."
                ]
            },
            {
                "questionId": "GitHubComputationRedundancy",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOnce the Smoke proxy has determined the user's route, it establishes a transparent proxy to the proper file server. We have four pairs of file servers. Their names are fs1a, fs1b, ..., fs4a, fs4b. These are 8 core, 16GB RAM bare metal servers, each with six 300GB 15K RPM SAS drives arranged in RAID 10. At any given time one server in each pair is active and the other is waiting to take over should there be a fatal failure in the master. All repository data is constantly replicated from the master to the slave via DRBD.\n\t\\end{quote}\n\t\n\tThe four pairs of file servers implement:\n\t\n    ",
                "image": [],
                "options": [
                    "Multiple copies of computation and Passive redundancy tactics.",
                    "Multiple copies of computation tactic.",
                    "Passive redundancy tactic.",
                    "Multiple copies of computation and Active redundancy tactics."
                ]
            },
            {
                "questionId": "ComponentPorts",
                "content": "\n\tConsider the concepts of module interface and component port. \n\t\t\n    ",
                "image": [],
                "options": [
                    "A module interface has to be attached to a single component port.",
                    "A module interface can be replicated but component ports cannot.",
                    "A module interface cannot be replicated but component ports can.",
                    "A module interface may be attached to several component ports."
                ]
            },
            {
                "questionId": "ConnectorAttach",
                "content": "\n\tA connector may be attached to components of different types because\n\t\t\n    ",
                "image": [],
                "options": [
                    "The type of a connector does not depend on the type of its roles.",
                    "The type of a component does not depend on the type of its ports.",
                    "The attachment is a runtime relation which dynamically manages type compliance.",
                    "The attachment between components and connectors only depends on their ports and roles types."
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n\tConsider the kind of relations between components and modules.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module contains the code that executes in a single component and a component executes the code of a single module.",
                    "A module contains the code that can execute in several components and a component executes the code of a single module.",
                    "A module contains the code that executes in a single component and a component can execute the code of several modules.",
                    "A module contains the code that can execute in several components and a component can execute the code of several modules."
                ]
            },
            {
                "questionId": "ConnectorDecomposition",
                "content": "\n\tConsider an architect that is designing a component-and-connector view. In some point the architect decides that she does not need to decompose a connector with a demanding quality level. This may occur because\n\t\t\n    ",
                "image": [],
                "options": [
                    "She encapsulates the connector qualities inside a higher level component.",
                    "She delays the complete specification of the connector for development time to have human resources to prototype and measure different implementations.",
                    "She does not want to clutter the view with details and trusts the development team to implement the connector according to the required quality level.",
                    "The required quality associated with the connector is supported by existing and well-know technology."
                ]
            },
            {
                "questionId": "RepositoryModifiability",
                "content": "\n\tThe repository architectural style provides modifiability because\n\n    ",
                "image": [],
                "options": [
                    "It is possible to integrate a new data accessor without changing the other data accessors.",
                    "It is possible to change the repository schema without changing the data accessors.",
                    "The integration of a new data accessor only implies changes in the data accessors that access the same type of data.",
                    "The communication between data accessors does not occur through the repository."
                ]
            },
            {
                "questionId": "RepositoryPerformance",
                "content": "\n\tThe repository architectural style provides performance because\n\n    ",
                "image": [],
                "options": [
                    "It implements a maintain multiple copies of computation tactic.",
                    "It supports the concurrent access of data accessors.",
                    "It supports the access to persistent information.",
                    "It implements a maintain multiple copies of data tactic."
                ]
            },
            {
                "questionId": "ClientServerAvailability",
                "content": "\n\tThe client-server architectural style provides availability because\n\t\n    ",
                "image": [],
                "options": [
                    "It allows an undefined number of clients.",
                    "It is possible to have redundant servers.",
                    "Servers can also be clients.",
                    "Servers can send a heartbeat to clients."
                ]
            },
            {
                "questionId": "ClientServerSynchronous",
                "content": "\n\tIn the client-server architectural style the request/reply connector is synchronous. Consider an architect that wants to describe an asynchronous interaction between clients and servers. \n\t\n    ",
                "image": [],
                "options": [
                    "She can define a variant of this style with asynchronous communication by allowing the client to register callbacks that the server calls at specific times.",
                    "She has to use another architectural style to describe asynchronous communication.",
                    "She can use the request/reply connector but the server should not return results to the client.",
                    "She can define a variant of this style with asynchronous communication by allowing the server to have the initiative to initiate the interaction."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-41A-17copias.tex",
        "quizTitle": "..-data-2014-test-4-test-41A-17copias",
        "questions": [
            {
                "questionId": "UsesCycles",
                "content": "\n\tConsider a view of the module viewtype where there is a uses loop, a cycle of uses dependences between several modules. It may be possible to break the dependence cycle by\n\t\n\n    ",
                "image": [],
                "options": [
                    "Applying the generalization style to identify child modules of a module in the loop chain.",
                    "Applying the decomposition style to some of the modules in the loop chain.",
                    "Identifying which of the \\emph{uses} dependencies are actually generalization dependencies.",
                    "Decomposing a \\emph{uses} relation into different interfaces."
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n\tAn architect is decomposing a system into a set of responsibilities using a view of the Decomposition style. However, she had already to backtrack several times and try new decompositions because she end up with some responsibility that can not be within a single module.\n\t\n    ",
                "image": [],
                "options": [
                    "She should try to use a view of the Aspects style, assign this responsibility to a module such that the other modules can crosscut this responsibility.",
                    "She should try to use a view of the Aspects style, assign this responsibility to a module and bind it to the modules affected by it.",
                    "She should define finer-grained modules where she splits the unassigned responsibility.",
                    "This means that in this software system it is not possible to modularize each responsibility in a cohesive module."
                ]
            },
            {
                "questionId": "GitHubSecurity",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOf course, allowing arbitrary execution of commands is unsafe, so SSH includes the ability to restrict what commands can be executed. In a very simple case, you can restrict execution to git-shell which is included with Git. All this script does is check the command that you're trying to execute and ensure that it's one of git upload-pack, git receive-pack, or git upload-archive.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Limit exposure.",
                    "Limit access.",
                    "Authorize actors.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "ConnectorAttach",
                "content": "\n\tA connector may be attached to components of different types because\n\t\t\n    ",
                "image": [],
                "options": [
                    "The type of a connector does not depend on the type of its roles.",
                    "The type of a component does not depend on the type of its ports.",
                    "The attachment is a runtime relation which dynamically manages type compliance.",
                    "The attachment between components and connectors only depends on their ports and roles types."
                ]
            },
            {
                "questionId": "RepositoryPerformance",
                "content": "\n\tThe repository architectural style provides performance because\n\n    ",
                "image": [],
                "options": [
                    "It implements a maintain multiple copies of computation tactic.",
                    "It supports the concurrent access of data accessors.",
                    "It supports the access to persistent information.",
                    "It implements a maintain multiple copies of data tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-41B-17copias.tex",
        "quizTitle": "..-data-2014-test-4-test-41B-17copias",
        "questions": [
            {
                "questionId": "UsesCycles",
                "content": "\n\tConsider a view of the module viewtype where there is a uses loop, a cycle of uses dependences between several modules. It may be possible to break the dependence cycle by\n\t\n\n    ",
                "image": [],
                "options": [
                    "Applying the generalization style to identify child modules of a module in the loop chain.",
                    "Applying the decomposition style to some of the modules in the loop chain.",
                    "Identifying which of the \\emph{uses} dependencies are actually generalization dependencies.",
                    "Decomposing a \\emph{uses} relation into different interfaces."
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n\tAn architect is decomposing a system into a set of responsibilities using a view of the Decomposition style. However, she had already to backtrack several times and try new decompositions because she end up with some responsibility that can not be within a single module.\n\t\n    ",
                "image": [],
                "options": [
                    "She should try to use a view of the Aspects style, assign this responsibility to a module such that the other modules can crosscut this responsibility.",
                    "She should try to use a view of the Aspects style, assign this responsibility to a module and bind it to the modules affected by it.",
                    "She should define finer-grained modules where she splits the unassigned responsibility.",
                    "This means that in this software system it is not possible to modularize each responsibility in a cohesive module."
                ]
            },
            {
                "questionId": "GitHubSecurity",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOf course, allowing arbitrary execution of commands is unsafe, so SSH includes the ability to restrict what commands can be executed. In a very simple case, you can restrict execution to git-shell which is included with Git. All this script does is check the command that you're trying to execute and ensure that it's one of git upload-pack, git receive-pack, or git upload-archive.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Limit exposure.",
                    "Limit access.",
                    "Authorize actors.",
                    "Separate entities."
                ]
            },
            {
                "questionId": "ConnectorAttach",
                "content": "\n\tA connector may be attached to components of different types because\n\t\t\n    ",
                "image": [],
                "options": [
                    "The type of a connector does not depend on the type of its roles.",
                    "The type of a component does not depend on the type of its ports.",
                    "The attachment is a runtime relation which dynamically manages type compliance.",
                    "The attachment between components and connectors only depends on their ports and roles types."
                ]
            },
            {
                "questionId": "RepositoryPerformance",
                "content": "\n\tThe repository architectural style provides performance because\n\n    ",
                "image": [],
                "options": [
                    "It implements a maintain multiple copies of computation tactic.",
                    "It supports the concurrent access of data accessors.",
                    "It supports the access to persistent information.",
                    "It implements a maintain multiple copies of data tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-42A-16copias.tex",
        "quizTitle": "..-data-2014-test-4-test-42A-16copias",
        "questions": [
            {
                "questionId": "GeneralizationEvolution",
                "content": "\n\tThe Generalization architectural style of the module viewtype can be use to support the evolution of a system \n\t\n\n    ",
                "image": [],
                "options": [
                    "By changing the commonalities that are in the children.",
                    "Because the \\emph{is-a} relation does not allow reuse of implementation.",
                    "By adding, removing, or changing children.",
                    "By changing a parent, which will automatically change all the children that inherit from it."
                ]
            },
            {
                "questionId": "DataModelFacebook",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and applications are routed to the right servers for queries and updates. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is necessary design a CRUD matrix to show the dependencies between the persistent information.",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure.",
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure.",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance issues of the access to data."
                ]
            },
            {
                "questionId": "GitIncreaseResourceEfficiency",
                "content": "\n\tIn the description of the Git case study can be read how it efficiently compares content:\n\t\n\t\\begin{quote}\n\t\tWhen a content (i.e., file or directory) node in the graph has the same reference identity (the SHA in Git) as that in a different commit, the two nodes are guaranteed to contain the same content, allowing Git to short-circuit content diffing efficiently.\n\t\\end{quote}\n\t\n\tThe performance tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Maintain multiple copies of data.",
                    "Increase resource efficiency.",
                    "Reduce overhead."
                ]
            },
            {
                "questionId": "ConnectorDecomposition",
                "content": "\n\tConsider an architect that is designing a component-and-connector view. In some point the architect decides that she does not need to decompose a connector with a demanding quality level. This may occur because\n\t\t\n    ",
                "image": [],
                "options": [
                    "She encapsulates the connector qualities inside a higher level component.",
                    "She delays the complete specification of the connector for development time to have human resources to prototype and measure different implementations.",
                    "She does not want to clutter the view with details and trusts the development team to implement the connector according to the required quality level.",
                    "The required quality associated with the connector is supported by existing and well-know technology."
                ]
            },
            {
                "questionId": "ClientServerSynchronous",
                "content": "\n\tIn the client-server architectural style the request/reply connector is synchronous. Consider an architect that wants to describe an asynchronous interaction between clients and servers. \n\t\n    ",
                "image": [],
                "options": [
                    "She can define a variant of this style with asynchronous communication by allowing the client to register callbacks that the server calls at specific times.",
                    "She has to use another architectural style to describe asynchronous communication.",
                    "She can use the request/reply connector but the server should not return results to the client.",
                    "She can define a variant of this style with asynchronous communication by allowing the server to have the initiative to initiate the interaction."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-42B-16copias.tex",
        "quizTitle": "..-data-2014-test-4-test-42B-16copias",
        "questions": [
            {
                "questionId": "ConnectorDecomposition",
                "content": "\n\tConsider an architect that is designing a component-and-connector view. In some point the architect decides that she does not need to decompose a connector with a demanding quality level. This may occur because\n\t\t\n    ",
                "image": [],
                "options": [
                    "She encapsulates the connector qualities inside a higher level component.",
                    "She delays the complete specification of the connector for development time to have human resources to prototype and measure different implementations.",
                    "She does not want to clutter the view with details and trusts the development team to implement the connector according to the required quality level.",
                    "The required quality associated with the connector is supported by existing and well-know technology."
                ]
            },
            {
                "questionId": "ClientServerSynchronous",
                "content": "\n\tIn the client-server architectural style the request/reply connector is synchronous. Consider an architect that wants to describe an asynchronous interaction between clients and servers. \n\t\n    ",
                "image": [],
                "options": [
                    "She can define a variant of this style with asynchronous communication by allowing the client to register callbacks that the server calls at specific times.",
                    "She has to use another architectural style to describe asynchronous communication.",
                    "She can use the request/reply connector but the server should not return results to the client.",
                    "She can define a variant of this style with asynchronous communication by allowing the server to have the initiative to initiate the interaction."
                ]
            },
            {
                "questionId": "GeneralizationEvolution",
                "content": "\n\tThe Generalization architectural style of the module viewtype can be use to support the evolution of a system \n\t\n\n    ",
                "image": [],
                "options": [
                    "By changing the commonalities that are in the children.",
                    "Because the \\emph{is-a} relation does not allow reuse of implementation.",
                    "By adding, removing, or changing children.",
                    "By changing a parent, which will automatically change all the children that inherit from it."
                ]
            },
            {
                "questionId": "GitIncreaseResourceEfficiency",
                "content": "\n\tIn the description of the Git case study can be read how it efficiently compares content:\n\t\n\t\\begin{quote}\n\t\tWhen a content (i.e., file or directory) node in the graph has the same reference identity (the SHA in Git) as that in a different commit, the two nodes are guaranteed to contain the same content, allowing Git to short-circuit content diffing efficiently.\n\t\\end{quote}\n\t\n\tThe performance tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Maintain multiple copies of data.",
                    "Increase resource efficiency.",
                    "Reduce overhead."
                ]
            },
            {
                "questionId": "DataModelFacebook",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and applications are routed to the right servers for queries and updates. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is necessary design a CRUD matrix to show the dependencies between the persistent information.",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure.",
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure.",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance issues of the access to data."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-43A-16copias.tex",
        "quizTitle": "..-data-2014-test-4-test-43A-16copias",
        "questions": [
            {
                "questionId": "UsesFor",
                "content": "\n\tThe Uses architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Allows the analysis of the impact of changes because if a module uses another it will necessarily have to change whenever the used module changes.",
                    "Improves testability because if a module uses another then it is only possible to test them together.",
                    "Allows incremental development because the possible increments of functionally can be inferred from use dependencies.",
                    "Improves testability because it informs the tester about which modules involved in circular use dependencies."
                ]
            },
            {
                "questionId": "UsesDataModel",
                "content": "\n\tA CRUD matrix, which indicates whether each module creates, reads, updates, or deletes data (CRUD, for short) from each data entity. The CRUD matrix\n\t\n    ",
                "image": [],
                "options": [
                    "Relates a view of the Uses style with a view of the Data Model style.",
                    "Is an extension of a view of the Data Model style.",
                    "Allows to avoid redundancy and inconsistency.",
                    "Describes the structure of the data used by the system."
                ]
            },
            {
                "questionId": "GitHubComputationRedundancy",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOnce the Smoke proxy has determined the user's route, it establishes a transparent proxy to the proper file server. We have four pairs of file servers. Their names are fs1a, fs1b, ..., fs4a, fs4b. These are 8 core, 16GB RAM bare metal servers, each with six 300GB 15K RPM SAS drives arranged in RAID 10. At any given time one server in each pair is active and the other is waiting to take over should there be a fatal failure in the master. All repository data is constantly replicated from the master to the slave via DRBD.\n\t\\end{quote}\n\t\n\tThe four pairs of file servers implement:\n\t\n    ",
                "image": [],
                "options": [
                    "Multiple copies of computation and Passive redundancy tactics.",
                    "Multiple copies of computation tactic.",
                    "Passive redundancy tactic.",
                    "Multiple copies of computation and Active redundancy tactics."
                ]
            },
            {
                "questionId": "ComponentPorts",
                "content": "\n\tConsider the concepts of module interface and component port. \n\t\t\n    ",
                "image": [],
                "options": [
                    "A module interface has to be attached to a single component port.",
                    "A module interface can be replicated but component ports cannot.",
                    "A module interface cannot be replicated but component ports can.",
                    "A module interface may be attached to several component ports."
                ]
            },
            {
                "questionId": "ClientServerAvailability",
                "content": "\n\tThe client-server architectural style provides availability because\n\t\n    ",
                "image": [],
                "options": [
                    "It allows an undefined number of clients.",
                    "It is possible to have redundant servers.",
                    "Servers can also be clients.",
                    "Servers can send a heartbeat to clients."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-43B-16copias.tex",
        "quizTitle": "..-data-2014-test-4-test-43B-16copias",
        "questions": [
            {
                "questionId": "GitHubComputationRedundancy",
                "content": "\n\tIn the description of the GitHub case study can be read:\n\t\n\t\\begin{quote}\n\t\tOnce the Smoke proxy has determined the user's route, it establishes a transparent proxy to the proper file server. We have four pairs of file servers. Their names are fs1a, fs1b, ..., fs4a, fs4b. These are 8 core, 16GB RAM bare metal servers, each with six 300GB 15K RPM SAS drives arranged in RAID 10. At any given time one server in each pair is active and the other is waiting to take over should there be a fatal failure in the master. All repository data is constantly replicated from the master to the slave via DRBD.\n\t\\end{quote}\n\t\n\tThe four pairs of file servers implement:\n\t\n    ",
                "image": [],
                "options": [
                    "Multiple copies of computation and Passive redundancy tactics.",
                    "Multiple copies of computation tactic.",
                    "Passive redundancy tactic.",
                    "Multiple copies of computation and Active redundancy tactics."
                ]
            },
            {
                "questionId": "ComponentPorts",
                "content": "\n\tConsider the concepts of module interface and component port. \n\t\t\n    ",
                "image": [],
                "options": [
                    "A module interface has to be attached to a single component port.",
                    "A module interface can be replicated but component ports cannot.",
                    "A module interface cannot be replicated but component ports can.",
                    "A module interface may be attached to several component ports."
                ]
            },
            {
                "questionId": "UsesDataModel",
                "content": "\n\tA CRUD matrix, which indicates whether each module creates, reads, updates, or deletes data (CRUD, for short) from each data entity. The CRUD matrix\n\t\n    ",
                "image": [],
                "options": [
                    "Relates a view of the Uses style with a view of the Data Model style.",
                    "Is an extension of a view of the Data Model style.",
                    "Allows to avoid redundancy and inconsistency.",
                    "Describes the structure of the data used by the system."
                ]
            },
            {
                "questionId": "ClientServerAvailability",
                "content": "\n\tThe client-server architectural style provides availability because\n\t\n    ",
                "image": [],
                "options": [
                    "It allows an undefined number of clients.",
                    "It is possible to have redundant servers.",
                    "Servers can also be clients.",
                    "Servers can send a heartbeat to clients."
                ]
            },
            {
                "questionId": "UsesFor",
                "content": "\n\tThe Uses architectural style of the Module viewtype \n\t\n\n    ",
                "image": [],
                "options": [
                    "Allows the analysis of the impact of changes because if a module uses another it will necessarily have to change whenever the used module changes.",
                    "Improves testability because if a module uses another then it is only possible to test them together.",
                    "Allows incremental development because the possible increments of functionally can be inferred from use dependencies.",
                    "Improves testability because it informs the tester about which modules involved in circular use dependencies."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-44A-18copias.tex",
        "quizTitle": "..-data-2014-test-4-test-44A-18copias",
        "questions": [
            {
                "questionId": "ModuleComponent",
                "content": "\n\tConsider the kind of relations between components and modules.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module contains the code that executes in a single component and a component executes the code of a single module.",
                    "A module contains the code that can execute in several components and a component executes the code of a single module.",
                    "A module contains the code that executes in a single component and a component can execute the code of several modules.",
                    "A module contains the code that can execute in several components and a component can execute the code of several modules."
                ]
            },
            {
                "questionId": "GitConditionMonitoring",
                "content": "\n\tIn the description of the Git case study can be read how to deal with the corruption of pack files in the context of the availability quality:\n\t\n\t\\begin{quote}\n\t\tIf an object was only copied partially or another form of data corruption occurred, recalculating the SHA of the current object will identify such corruption.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Sanity checking.",
                    "Exception detection.",
                    "Detect intrusion.",
                    "Condition monitoring."
                ]
            },
            {
                "questionId": "RepositoryModifiability",
                "content": "\n\tThe repository architectural style provides modifiability because\n\n    ",
                "image": [],
                "options": [
                    "It is possible to integrate a new data accessor without changing the other data accessors.",
                    "It is possible to change the repository schema without changing the data accessors.",
                    "The integration of a new data accessor only implies changes in the data accessors that access the same type of data.",
                    "The communication between data accessors does not occur through the repository."
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module.",
                    "The invoked function may not have any input parameter.",
                    "The invoked function may not have any output parameter.",
                    "The invoked function may not have both any input parameter nor any output parameter."
                ]
            },
            {
                "questionId": "LayeredVirtualMachine",
                "content": "\n\tAccording to the definition of the Layered architectural style, each layer represents a grouping of modules that offers a cohesive set of services.\n\t\n    ",
                "image": [],
                "options": [
                    "This means that the modules inside a layer cannot be loosely coupled.",
                    "This means that this architectural style emphasizes the quality of performance.",
                    "This means that each module cannot use other modules inside the same layer.",
                    "This means that the modules inside a layer are likely to be ported to a new application together."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-4/test-44B-18copias.tex",
        "quizTitle": "..-data-2014-test-4-test-44B-18copias",
        "questions": [
            {
                "questionId": "LayeredVirtualMachine",
                "content": "\n\tAccording to the definition of the Layered architectural style, each layer represents a grouping of modules that offers a cohesive set of services.\n\t\n    ",
                "image": [],
                "options": [
                    "This means that the modules inside a layer cannot be loosely coupled.",
                    "This means that this architectural style emphasizes the quality of performance.",
                    "This means that each module cannot use other modules inside the same layer.",
                    "This means that the modules inside a layer are likely to be ported to a new application together."
                ]
            },
            {
                "questionId": "RepositoryModifiability",
                "content": "\n\tThe repository architectural style provides modifiability because\n\n    ",
                "image": [],
                "options": [
                    "It is possible to integrate a new data accessor without changing the other data accessors.",
                    "It is possible to change the repository schema without changing the data accessors.",
                    "The integration of a new data accessor only implies changes in the data accessors that access the same type of data.",
                    "The communication between data accessors does not occur through the repository."
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n\tConsider the kind of relations between components and modules.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module contains the code that executes in a single component and a component executes the code of a single module.",
                    "A module contains the code that can execute in several components and a component executes the code of a single module.",
                    "A module contains the code that executes in a single component and a component can execute the code of several modules.",
                    "A module contains the code that can execute in several components and a component can execute the code of several modules."
                ]
            },
            {
                "questionId": "GitConditionMonitoring",
                "content": "\n\tIn the description of the Git case study can be read how to deal with the corruption of pack files in the context of the availability quality:\n\t\n\t\\begin{quote}\n\t\tIf an object was only copied partially or another form of data corruption occurred, recalculating the SHA of the current object will identify such corruption.\n\t\\end{quote}\n\t\n\tThe tactic addressed in this fragments is:\n\t\n    ",
                "image": [],
                "options": [
                    "Sanity checking.",
                    "Exception detection.",
                    "Detect intrusion.",
                    "Condition monitoring."
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module.",
                    "The invoked function may not have any input parameter.",
                    "The invoked function may not have any output parameter.",
                    "The invoked function may not have both any input parameter nor any output parameter."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-5.tex",
        "quizTitle": "..-data-2014-test-5-test-5",
        "questions": [
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n\n    ",
                "image": [],
                "options": [
                    "The file transfers follows the same path of nodes used to identify where the file was located.",
                    "The peer initiating the request for a file needs to know where the file is located.",
                    "If a peer providing a file crashes it is necessary to restart to download the file from the begin.",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared."
                ]
            },
            {
                "questionId": "PeerToPeerDynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network.",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used.",
                    "When a peer receives a connection it sends all its files to the peer connecting it.",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used."
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n\n    ",
                "image": [],
                "options": [
                    "It applies layers to tiers.",
                    "Restrict the communication between components because, for instance, a group of components should be located in the same hardware.",
                    "Is an extension of the Client-Server architectural style.",
                    "Defines tiers as components."
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events.",
                    "All the published events are received by their subscribing components.",
                    "The events should be delivered by the same order they are sent.",
                    "The set of events types are predefined at initialization time."
                ]
            },
            {
                "questionId": "SOAInteroperability",
                "content": "\n\tThe Service-Oriented Architecture style improves interoperability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It enforces the use of a single implementation language among all applications.",
                    "The orchestration is in charge of improving the transparent location of service providers.",
                    "The enterprise service bus coordinates the execution of several services.",
                    "It decouples applications developed for different organizations."
                ]
            },
            {
                "questionId": "SOAQualities",
                "content": "\n\tThe Service-Oriented Architecture style improves modifiability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It encapsulates applications through well-defined interfaces.",
                    "It decouples the coordination of the interaction among applications from the applications themselves.",
                    "It improves transparency of location of service providers.",
                    "It encapsulates applications through well-defined interfaces, decouples the coordination of the interaction among applications from the applications themselves, and improves transparency of location of service providers."
                ]
            },
            {
                "questionId": "SOAClientServerPeertoPeer",
                "content": "\n\tThe Service-Oriented Architecture style\n\t\n\n    ",
                "image": [],
                "options": [
                    "Is a Client-Server style because consumers are clients and providers are servers.",
                    "Is a Peer-to-Peer style because consumers and providers are peers.",
                    "Can use a Service Registry to improve transparency of location of service providers.",
                    "Is a Publish-subscriber style because consumers use an enterprise service bus."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            },
            {
                "questionId": "GraphiteDecompositionMemcached",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Memcache is a library that maintains datapoints in memory to reduce the overhead of obtaining them from the file system.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Memcached can be considered a sub-module of the Store Graphs module.",
                    "Memcached can be considered a sub-module of the Present Graphs module.",
                    "Memcached can be considered a direct sub-module of the top Graphite module.",
                    "Memcached is not a module."
                ]
            },
            {
                "questionId": "GraphiteDecompositionBuffering",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Buffering is a library used to temporarily store incoming data point.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Buffering can be considered a sub-module of the Store Graphs module.",
                    "Buffering can be considered a sub-module of the Present Graphs module.",
                    "Buffering can be considered a direct sub-module of the top Graphite module.",
                    "Buffering is not a module."
                ]
            },
            {
                "questionId": "GraphiteCarbon",
                "content": "\n\tConsider the following application-specific types that were defined for a component-and-connector view that depicts the components within \\texttt{Carbon} component. \n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-carbon-buffering}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-carbon-buffering.png",
                        "width": 100
                    }
                ],
                "options": [
                    "In the view there are multiple instances of the \\texttt{Queue} component.",
                    "In the view there are multiple instances of the \\texttt{Writer} component.",
                    "In the view \\texttt{Receiver} component's \\texttt{client} port is not associated with an external port.",
                    "In the view the \\texttt{produce} port of a \\texttt{Receiver} component is attached to the \\texttt{consume} port of a \\texttt{Writer} component."
                ]
            },
            {
                "questionId": "GraphiteDataPointSocket",
                "content": "\n\tConsider the following application-specific types. Note that \\texttt{Queue} components are within the \\texttt{Carbon} components. In a view that contains components of these three types \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-datapoint-access}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-datapoint-access.png",
                        "width": 120
                    }
                ],
                "options": [
                    "There is a message passing connector between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{data points access} port of \\texttt{WebApp}.",
                    "There is a interface delegation relation between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{query} port of \\texttt{Carbon}.",
                    "There is a connector between the \\texttt{producer} port of a \\texttt{Queue} component and the \\texttt{client} port of its \\texttt{Carbon} component.",
                    "The \\texttt{client} ports of \\texttt{Carbon} and \\texttt{WebApp} are connected to a \\texttt{Client} component through the same connector instance."
                ]
            },
            {
                "questionId": "AllocationStylesCost",
                "content": "\n\tConsider a stakeholder that is particularly concerned about the total cost of the project. When it comes to describing the system using allocation viewtypes is interested in\n\n    ",
                "image": [],
                "options": [
                    "A deployment view.",
                    "A work assignment view.",
                    "A deployment and a work assignment view.",
                    "A install view."
                ]
            },
            {
                "questionId": "ImplementationStyle",
                "content": "\n\tAn architecture can also be represented by the set of files which contains its modules code. A suitable architectural style to represent this set of files is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "InstallStyle",
                "content": "\n\tAn important stage of the development of any system is its build into the set of executable files. A suitable architectural style which helps on the definition of the build process is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "DeploymentStyleLimitExposure",
                "content": "\n\tAn architect needs to show that a security tactic of limit exposure will be effectively provided by the executing system. Therefore, she decides to design\n\t\n    ",
                "image": [],
                "options": [
                    "A work assignment view.",
                    "A deployment view.",
                    "An install view.",
                    "An implementation view."
                ]
            },
            {
                "questionId": "DVDCatalogMeta",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tThe application should support other kinds of catalogs (CDs, games, books, ...). \n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to support a new specific layer for the customization of the catalog.",
                    "The layered view to accommodate a new layer for which kind of catalog, which other layers may use.",
                    "The data model view in order to define entities for each kind of catalog.",
                    "The data model view in order to define generic entities that can be customized for different kinds of catalogs."
                ]
            },
            {
                "questionId": "DVDCatalogAspects",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo allow the share of catalogs with family and friends, including some access control. \n\t\\end{quote}\n\t\n\tThis requirement requires \n\t\n    ",
                "image": [],
                "options": [
                    "A change to the uses view to represent that friends can use each other catalog.",
                    "A change of the layered view to support different presentations, one for each friend.",
                    "A change of the decomposition view to include the responsibilities associated with the access control.",
                    "A new aspect view to include the responsibilities associated with the access control."
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities.",
                    "The uses view to represent how the mobile device uses the Catalog application.",
                    "The layered view to include a layer for each type of device.",
                    "The domain layer of the layered view to represent the types of devices."
                ]
            },
            {
                "questionId": "DVDCatalogMultiPlatform",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support multi-platform (Mac, Windows, Linux)\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to deal with the aspects of portability.",
                    "The uses view to show the coupling between the different platforms.",
                    "The uses view to show the uses relationships between the different platforms.",
                    "The data model view to represent each one of the platforms."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-51A-17copias.tex",
        "quizTitle": "..-data-2014-test-5-test-51A-17copias",
        "questions": [
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n\n    ",
                "image": [],
                "options": [
                    "The file transfers follows the same path of nodes used to identify where the file was located.",
                    "The peer initiating the request for a file needs to know where the file is located.",
                    "If a peer providing a file crashes it is necessary to restart to download the file from the begin.",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared."
                ]
            },
            {
                "questionId": "SOAClientServerPeertoPeer",
                "content": "\n\tThe Service-Oriented Architecture style\n\t\n\n    ",
                "image": [],
                "options": [
                    "Is a Client-Server style because consumers are clients and providers are servers.",
                    "Is a Peer-to-Peer style because consumers and providers are peers.",
                    "Can use a Service Registry to improve transparency of location of service providers.",
                    "Is a Publish-subscriber style because consumers use an enterprise service bus."
                ]
            },
            {
                "questionId": "GraphiteCarbon",
                "content": "\n\tConsider the following application-specific types that were defined for a component-and-connector view that depicts the components within \\texttt{Carbon} component. \n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-carbon-buffering}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-carbon-buffering.png",
                        "width": 100
                    }
                ],
                "options": [
                    "In the view there are multiple instances of the \\texttt{Queue} component.",
                    "In the view there are multiple instances of the \\texttt{Writer} component.",
                    "In the view \\texttt{Receiver} component's \\texttt{client} port is not associated with an external port.",
                    "In the view the \\texttt{produce} port of a \\texttt{Receiver} component is attached to the \\texttt{consume} port of a \\texttt{Writer} component."
                ]
            },
            {
                "questionId": "AllocationStylesCost",
                "content": "\n\tConsider a stakeholder that is particularly concerned about the total cost of the project. When it comes to describing the system using allocation viewtypes is interested in\n\n    ",
                "image": [],
                "options": [
                    "A deployment view.",
                    "A work assignment view.",
                    "A deployment and a work assignment view.",
                    "A install view."
                ]
            },
            {
                "questionId": "DVDCatalogMeta",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tThe application should support other kinds of catalogs (CDs, games, books, ...). \n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to support a new specific layer for the customization of the catalog.",
                    "The layered view to accommodate a new layer for which kind of catalog, which other layers may use.",
                    "The data model view in order to define entities for each kind of catalog.",
                    "The data model view in order to define generic entities that can be customized for different kinds of catalogs."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-51B-17copias.tex",
        "quizTitle": "..-data-2014-test-5-test-51B-17copias",
        "questions": [
            {
                "questionId": "AllocationStylesCost",
                "content": "\n\tConsider a stakeholder that is particularly concerned about the total cost of the project. When it comes to describing the system using allocation viewtypes is interested in\n\n    ",
                "image": [],
                "options": [
                    "A deployment view.",
                    "A work assignment view.",
                    "A deployment and a work assignment view.",
                    "A install view."
                ]
            },
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n\n    ",
                "image": [],
                "options": [
                    "The file transfers follows the same path of nodes used to identify where the file was located.",
                    "The peer initiating the request for a file needs to know where the file is located.",
                    "If a peer providing a file crashes it is necessary to restart to download the file from the begin.",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared."
                ]
            },
            {
                "questionId": "DVDCatalogMeta",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tThe application should support other kinds of catalogs (CDs, games, books, ...). \n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to support a new specific layer for the customization of the catalog.",
                    "The layered view to accommodate a new layer for which kind of catalog, which other layers may use.",
                    "The data model view in order to define entities for each kind of catalog.",
                    "The data model view in order to define generic entities that can be customized for different kinds of catalogs."
                ]
            },
            {
                "questionId": "SOAClientServerPeertoPeer",
                "content": "\n\tThe Service-Oriented Architecture style\n\t\n\n    ",
                "image": [],
                "options": [
                    "Is a Client-Server style because consumers are clients and providers are servers.",
                    "Is a Peer-to-Peer style because consumers and providers are peers.",
                    "Can use a Service Registry to improve transparency of location of service providers.",
                    "Is a Publish-subscriber style because consumers use an enterprise service bus."
                ]
            },
            {
                "questionId": "GraphiteCarbon",
                "content": "\n\tConsider the following application-specific types that were defined for a component-and-connector view that depicts the components within \\texttt{Carbon} component. \n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-carbon-buffering}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-carbon-buffering.png",
                        "width": 100
                    }
                ],
                "options": [
                    "In the view there are multiple instances of the \\texttt{Queue} component.",
                    "In the view there are multiple instances of the \\texttt{Writer} component.",
                    "In the view \\texttt{Receiver} component's \\texttt{client} port is not associated with an external port.",
                    "In the view the \\texttt{produce} port of a \\texttt{Receiver} component is attached to the \\texttt{consume} port of a \\texttt{Writer} component."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-52A-16copias.tex",
        "quizTitle": "..-data-2014-test-5-test-52A-16copias",
        "questions": [
            {
                "questionId": "PeerToPeerDynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network.",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used.",
                    "When a peer receives a connection it sends all its files to the peer connecting it.",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used."
                ]
            },
            {
                "questionId": "SOAQualities",
                "content": "\n\tThe Service-Oriented Architecture style improves modifiability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It encapsulates applications through well-defined interfaces.",
                    "It decouples the coordination of the interaction among applications from the applications themselves.",
                    "It improves transparency of location of service providers.",
                    "It encapsulates applications through well-defined interfaces, decouples the coordination of the interaction among applications from the applications themselves, and improves transparency of location of service providers."
                ]
            },
            {
                "questionId": "GraphiteDataPointSocket",
                "content": "\n\tConsider the following application-specific types. Note that \\texttt{Queue} components are within the \\texttt{Carbon} components. In a view that contains components of these three types \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-datapoint-access}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-datapoint-access.png",
                        "width": 120
                    }
                ],
                "options": [
                    "There is a message passing connector between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{data points access} port of \\texttt{WebApp}.",
                    "There is a interface delegation relation between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{query} port of \\texttt{Carbon}.",
                    "There is a connector between the \\texttt{producer} port of a \\texttt{Queue} component and the \\texttt{client} port of its \\texttt{Carbon} component.",
                    "The \\texttt{client} ports of \\texttt{Carbon} and \\texttt{WebApp} are connected to a \\texttt{Client} component through the same connector instance."
                ]
            },
            {
                "questionId": "ImplementationStyle",
                "content": "\n\tAn architecture can also be represented by the set of files which contains its modules code. A suitable architectural style to represent this set of files is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "DVDCatalogAspects",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo allow the share of catalogs with family and friends, including some access control. \n\t\\end{quote}\n\t\n\tThis requirement requires \n\t\n    ",
                "image": [],
                "options": [
                    "A change to the uses view to represent that friends can use each other catalog.",
                    "A change of the layered view to support different presentations, one for each friend.",
                    "A change of the decomposition view to include the responsibilities associated with the access control.",
                    "A new aspect view to include the responsibilities associated with the access control."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-52B-16copias.tex",
        "quizTitle": "..-data-2014-test-5-test-52B-16copias",
        "questions": [
            {
                "questionId": "ImplementationStyle",
                "content": "\n\tAn architecture can also be represented by the set of files which contains its modules code. A suitable architectural style to represent this set of files is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "DVDCatalogAspects",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo allow the share of catalogs with family and friends, including some access control. \n\t\\end{quote}\n\t\n\tThis requirement requires \n\t\n    ",
                "image": [],
                "options": [
                    "A change to the uses view to represent that friends can use each other catalog.",
                    "A change of the layered view to support different presentations, one for each friend.",
                    "A change of the decomposition view to include the responsibilities associated with the access control.",
                    "A new aspect view to include the responsibilities associated with the access control."
                ]
            },
            {
                "questionId": "PeerToPeerDynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network.",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used.",
                    "When a peer receives a connection it sends all its files to the peer connecting it.",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used."
                ]
            },
            {
                "questionId": "SOAQualities",
                "content": "\n\tThe Service-Oriented Architecture style improves modifiability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It encapsulates applications through well-defined interfaces.",
                    "It decouples the coordination of the interaction among applications from the applications themselves.",
                    "It improves transparency of location of service providers.",
                    "It encapsulates applications through well-defined interfaces, decouples the coordination of the interaction among applications from the applications themselves, and improves transparency of location of service providers."
                ]
            },
            {
                "questionId": "GraphiteDataPointSocket",
                "content": "\n\tConsider the following application-specific types. Note that \\texttt{Queue} components are within the \\texttt{Carbon} components. In a view that contains components of these three types \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-datapoint-access}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-datapoint-access.png",
                        "width": 120
                    }
                ],
                "options": [
                    "There is a message passing connector between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{data points access} port of \\texttt{WebApp}.",
                    "There is a interface delegation relation between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{query} port of \\texttt{Carbon}.",
                    "There is a connector between the \\texttt{producer} port of a \\texttt{Queue} component and the \\texttt{client} port of its \\texttt{Carbon} component.",
                    "The \\texttt{client} ports of \\texttt{Carbon} and \\texttt{WebApp} are connected to a \\texttt{Client} component through the same connector instance."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-53A-16copias.tex",
        "quizTitle": "..-data-2014-test-5-test-53A-16copias",
        "questions": [
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n\n    ",
                "image": [],
                "options": [
                    "It applies layers to tiers.",
                    "Restrict the communication between components because, for instance, a group of components should be located in the same hardware.",
                    "Is an extension of the Client-Server architectural style.",
                    "Defines tiers as components."
                ]
            },
            {
                "questionId": "SOAInteroperability",
                "content": "\n\tThe Service-Oriented Architecture style improves interoperability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It enforces the use of a single implementation language among all applications.",
                    "The orchestration is in charge of improving the transparent location of service providers.",
                    "The enterprise service bus coordinates the execution of several services.",
                    "It decouples applications developed for different organizations."
                ]
            },
            {
                "questionId": "InstallStyle",
                "content": "\n\tAn important stage of the development of any system is its build into the set of executable files. A suitable architectural style which helps on the definition of the build process is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities.",
                    "The uses view to represent how the mobile device uses the Catalog application.",
                    "The layered view to include a layer for each type of device.",
                    "The domain layer of the layered view to represent the types of devices."
                ]
            },
            {
                "questionId": "GraphiteDecompositionMemcached",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Memcache is a library that maintains datapoints in memory to reduce the overhead of obtaining them from the file system.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Memcached can be considered a sub-module of the Store Graphs module.",
                    "Memcached can be considered a sub-module of the Present Graphs module.",
                    "Memcached can be considered a direct sub-module of the top Graphite module.",
                    "Memcached is not a module."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-53B-16copias.tex",
        "quizTitle": "..-data-2014-test-5-test-53B-16copias",
        "questions": [
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities.",
                    "The uses view to represent how the mobile device uses the Catalog application.",
                    "The layered view to include a layer for each type of device.",
                    "The domain layer of the layered view to represent the types of devices."
                ]
            },
            {
                "questionId": "SOAInteroperability",
                "content": "\n\tThe Service-Oriented Architecture style improves interoperability because\n\t\n\n    ",
                "image": [],
                "options": [
                    "It enforces the use of a single implementation language among all applications.",
                    "The orchestration is in charge of improving the transparent location of service providers.",
                    "The enterprise service bus coordinates the execution of several services.",
                    "It decouples applications developed for different organizations."
                ]
            },
            {
                "questionId": "InstallStyle",
                "content": "\n\tAn important stage of the development of any system is its build into the set of executable files. A suitable architectural style which helps on the definition of the build process is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "GraphiteDecompositionMemcached",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Memcache is a library that maintains datapoints in memory to reduce the overhead of obtaining them from the file system.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Memcached can be considered a sub-module of the Store Graphs module.",
                    "Memcached can be considered a sub-module of the Present Graphs module.",
                    "Memcached can be considered a direct sub-module of the top Graphite module.",
                    "Memcached is not a module."
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n\n    ",
                "image": [],
                "options": [
                    "It applies layers to tiers.",
                    "Restrict the communication between components because, for instance, a group of components should be located in the same hardware.",
                    "Is an extension of the Client-Server architectural style.",
                    "Defines tiers as components."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-54A-18copias.tex",
        "quizTitle": "..-data-2014-test-5-test-54A-18copias",
        "questions": [
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events.",
                    "All the published events are received by their subscribing components.",
                    "The events should be delivered by the same order they are sent.",
                    "The set of events types are predefined at initialization time."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            },
            {
                "questionId": "GraphiteDecompositionBuffering",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Buffering is a library used to temporarily store incoming data point.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Buffering can be considered a sub-module of the Store Graphs module.",
                    "Buffering can be considered a sub-module of the Present Graphs module.",
                    "Buffering can be considered a direct sub-module of the top Graphite module.",
                    "Buffering is not a module."
                ]
            },
            {
                "questionId": "DeploymentStyleLimitExposure",
                "content": "\n\tAn architect needs to show that a security tactic of limit exposure will be effectively provided by the executing system. Therefore, she decides to design\n\t\n    ",
                "image": [],
                "options": [
                    "A work assignment view.",
                    "A deployment view.",
                    "An install view.",
                    "An implementation view."
                ]
            },
            {
                "questionId": "DVDCatalogMultiPlatform",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support multi-platform (Mac, Windows, Linux)\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to deal with the aspects of portability.",
                    "The uses view to show the coupling between the different platforms.",
                    "The uses view to show the uses relationships between the different platforms.",
                    "The data model view to represent each one of the platforms."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-5/test-54B-18copias.tex",
        "quizTitle": "..-data-2014-test-5-test-54B-18copias",
        "questions": [
            {
                "questionId": "DeploymentStyleLimitExposure",
                "content": "\n\tAn architect needs to show that a security tactic of limit exposure will be effectively provided by the executing system. Therefore, she decides to design\n\t\n    ",
                "image": [],
                "options": [
                    "A work assignment view.",
                    "A deployment view.",
                    "An install view.",
                    "An implementation view."
                ]
            },
            {
                "questionId": "DVDCatalogMultiPlatform",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support multi-platform (Mac, Windows, Linux)\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to deal with the aspects of portability.",
                    "The uses view to show the coupling between the different platforms.",
                    "The uses view to show the uses relationships between the different platforms.",
                    "The data model view to represent each one of the platforms."
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events.",
                    "All the published events are received by their subscribing components.",
                    "The events should be delivered by the same order they are sent.",
                    "The set of events types are predefined at initialization time."
                ]
            },
            {
                "questionId": "GraphiteDecompositionBuffering",
                "content": "\n\tConsider the following decomposition view of the Graphite system where module \\textsc{Store Graphs} is responsible for managing the storage of datapoints and graphs and module \\textsc{Present Graphs} for graphs generation and presentation. Buffering is a library used to temporarily store incoming data point.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-5/x-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Buffering can be considered a sub-module of the Store Graphs module.",
                    "Buffering can be considered a sub-module of the Present Graphs module.",
                    "Buffering can be considered a direct sub-module of the top Graphite module.",
                    "Buffering is not a module."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-6.tex",
        "quizTitle": "..-data-2014-test-6-test-6",
        "questions": [
            {
                "questionId": "SilkMobileDevices",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of mobile devices\n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk is more convenient for mobile devices because it does most of the computation in the cloud.",
                    "Google Chrome is more convenient for mobile devices because it has an optimized network stack that runs in any kind device.",
                    "Amazon Silk is more convenient for mobile devices because it customizes the number of threads that run in the device.",
                    "Google Chrome is more convenient for mobile devices because content delivery is optimized."
                ]
            },
            {
                "questionId": "SilkPredictor",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of the prediction of pages the user is going to access\n\t\n    ",
                "image": [],
                "options": [
                    "Amazon Silk predicts accesses based on the information gathered for all Silk users.",
                    "Google Chrome uses a usability maintain system model tactic.",
                    "Amazon Silk predictions are constrained by the amount of information it can store about each user access.",
                    "Google Chrome predictions do not require storage in the client-side."
                ]
            },
            {
                "questionId": "SilkCaching",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk explicitly caches pages on the browser to optimize accesses.",
                    "Google Chrome predictor takes into consideration the amount of available cache.",
                    "Amazon Silk cache is not shared between different users of the service to support confidentiality.",
                    "Google Chrome cache is shared among the different users of a desktop machine."
                ]
            },
            {
                "questionId": "SilkConnections",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\t\n    ",
                "image": [],
                "options": [
                    "In Amazon Silk a request for a web page corresponds to a peer-to-peer interaction between all the web components containing the resources.",
                    "In Google Chrome a request for a web page is accomplished by a single access to the internet.",
                    "In Amazon Silk a request for a web page corresponds to requesting a service from the amazon cloud.",
                    "In Google Chrome a request for a web page aggregates the page on the background before it is sent to the client."
                ]
            },
            {
                "questionId": "ThousandParsecAI",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The AI players should be described\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "As a specialization of the RulesSet module.",
                    "As a submodule of the RulesSet module.",
                    "As a module but not included in the RulesSet subtree.",
                    "As a specialization of the Design module."
                ]
            },
            {
                "questionId": "ThousandParsecModule",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The ThousandParsec protocol\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Should be described as a submodule of the RulesSet module.",
                    "Should be described as a submodule of but not included in the RulesSet subtree.",
                    "Should be described as a submodule of the Design module.",
                    "Should not be described as a module because it is a component."
                ]
            },
            {
                "questionId": "ThousandParsecTPConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameClient and GameServer components\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Request/Reply connector.",
                    "There is a ThousandParsec connector which can be decomposed into a set of components and Request/Reply connectors.",
                    "There is an EventBus connector."
                ]
            },
            {
                "questionId": "ThousandParsecReadWriteConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameServer and Repository component\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Read/Write connector which encapsulates a redundant Repository.",
                    "There is a Read/Write connector which guarantees that players turns are not lost.",
                    "There is a Read/Write connector which guarantees that only the turns of the last two players may be lost."
                ]
            },
            {
                "questionId": "OrderPadPortability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The decision between the use of a Native application or HTML5 on the implementation of the client in the Pad\n\t\n    ",
                "image": [],
                "options": [
                    "Was taken because HTML5 provides better portability qualities.",
                    "Was taken because Native applications provide better modifiability qualities.",
                    "Was taken because HTML5 provides better usability qualities.",
                    "Was taken because Native application provide better support for working offline."
                ]
            },
            {
                "questionId": "OrderPadReliability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The connector between the client component, executing in the Pad, and the server component, executing in the OrderPadDatabase\n\t\n    ",
                "image": [],
                "options": [
                    "Supports asynchronous communication to deal with disconnected mode.",
                    "Implements an event bus that allows the server to inform the client about new order recommendations.",
                    "May loose some of the changes done on the client component.",
                    "Has reduced reliability qualities."
                ]
            },
            {
                "questionId": "OrderPadMainframeConnector",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The final interaction between the OrderPadDatabase component and Mainframe component is supported by \n\t\n    ",
                "image": [],
                "options": [
                    "Two distinct unidirectional connectors.",
                    "A single bidirectional connector.",
                    "Three distinct unidirectional connectors.",
                    "A single unidirectional connector."
                ]
            },
            {
                "questionId": "OrderPadIterative",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. In the description of the system can be read:\n\t\n\t\\begin{quote}\n\t\tOne of these was using a file-transfer to send data to the mainframe rather than MQ, which wouldn't perform well once many stores were active.\n\t\\end{quote}\n\t\n\tThis approach means that\n\t\n    ",
                "image": [],
                "options": [
                    "Performance was traded for easy of development.",
                    "An iterative development was followed, which allowed more time to develop a connector with good performance in the latter stages of the project.",
                    "Performance was traded for the modifiability quality.",
                    "An incremental development was followed, which allowed to have the system in production without being necessary to export all the information to the mainframe."
                ]
            },
            {
                "questionId": "SocialCalcRemoteCursor",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. It can be read in the case description: \\emph{A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.}\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{: TableEditor} broadcasts the cursor position through the \\textsc{: Sheet}.",
                    "An interface delegation is missing in the picture to represent the \\textsc{: TableEditor} broadcasting the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: Sheet} broadcasts the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: TableEditor} broadcasts the cursor position through its \\textsc{: StatusCallback} port."
                ]
            },
            {
                "questionId": "SocialCalcServer",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the system. According to this representation\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The server implements the \\textsc{: Repository} component and the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{: Repository} component.",
                    "The server implements the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{SpreadSheet} components"
                ]
            },
            {
                "questionId": "SocialCalcParser",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{Parser} module is used when loading a file\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{Parser} module is executed by a repository component, which is not represented in the view.",
                    "The code of the \\textsc{Parser} module is executed by both, the \\textsc{: Sheet} and the repository components (the latter is not visible in the view)."
                ]
            },
            {
                "questionId": "SocialCalcConflictResolution",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{ConflictResolution} module is used when local commands conflict with remote commands.\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{ConflictResolution} module is executed by a broadcast connector that implements an eventbus between the \\textsc{SpreadSheet} components.",
                    "The code of the \\textsc{ConflictResolution} module is executed in a server component because it needs to be centralized."
                ]
            },
            {
                "questionId": "LogicAccessDomainModel",
                "content": "\n\tWhen the domain logic is organized using a Domain Model pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            },
            {
                "questionId": "LogicAccessTransactionScript",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            },
            {
                "questionId": "LogicAccessTransactionScriptDomainObjects",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the domain objects\n\n    ",
                "image": [],
                "options": [
                    "Are responsible for loading the objects they refer to.",
                    "Are responsible for the management of transactions, begin and end of transactions.",
                    "Contain the business logic.",
                    "May not even exist, only record sets are used."
                ]
            },
            {
                "questionId": "LogicAccessTableModule",
                "content": "\n\tWhen the domain logic is organized using a Table Module pattern \n\n    ",
                "image": [],
                "options": [
                    "An object oriented style is followed.",
                    "The business logic is organized around record sets.",
                    "Row Data Gateway is the most suitable data source pattern.",
                    "A Service Layer should be used to provide an interface for the presentation layer."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-61A-17copias.tex",
        "quizTitle": "..-data-2014-test-6-test-61A-17copias",
        "questions": [
            {
                "questionId": "SilkMobileDevices",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of mobile devices\n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk is more convenient for mobile devices because it does most of the computation in the cloud.",
                    "Google Chrome is more convenient for mobile devices because it has an optimized network stack that runs in any kind device.",
                    "Amazon Silk is more convenient for mobile devices because it customizes the number of threads that run in the device.",
                    "Google Chrome is more convenient for mobile devices because content delivery is optimized."
                ]
            },
            {
                "questionId": "ThousandParsecReadWriteConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameServer and Repository component\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Read/Write connector which encapsulates a redundant Repository.",
                    "There is a Read/Write connector which guarantees that players turns are not lost.",
                    "There is a Read/Write connector which guarantees that only the turns of the last two players may be lost."
                ]
            },
            {
                "questionId": "OrderPadReliability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The connector between the client component, executing in the Pad, and the server component, executing in the OrderPadDatabase\n\t\n    ",
                "image": [],
                "options": [
                    "Supports asynchronous communication to deal with disconnected mode.",
                    "Implements an event bus that allows the server to inform the client about new order recommendations.",
                    "May loose some of the changes done on the client component.",
                    "Has reduced reliability qualities."
                ]
            },
            {
                "questionId": "SocialCalcConflictResolution",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{ConflictResolution} module is used when local commands conflict with remote commands.\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{ConflictResolution} module is executed by a broadcast connector that implements an eventbus between the \\textsc{SpreadSheet} components.",
                    "The code of the \\textsc{ConflictResolution} module is executed in a server component because it needs to be centralized."
                ]
            },
            {
                "questionId": "LogicAccessTableModule",
                "content": "\n\tWhen the domain logic is organized using a Table Module pattern \n\n    ",
                "image": [],
                "options": [
                    "An object oriented style is followed.",
                    "The business logic is organized around record sets.",
                    "Row Data Gateway is the most suitable data source pattern.",
                    "A Service Layer should be used to provide an interface for the presentation layer."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-61B-17copias.tex",
        "quizTitle": "..-data-2014-test-6-test-61B-17copias",
        "questions": [
            {
                "questionId": "SocialCalcConflictResolution",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{ConflictResolution} module is used when local commands conflict with remote commands.\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{ConflictResolution} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{ConflictResolution} module is executed by a broadcast connector that implements an eventbus between the \\textsc{SpreadSheet} components.",
                    "The code of the \\textsc{ConflictResolution} module is executed in a server component because it needs to be centralized."
                ]
            },
            {
                "questionId": "LogicAccessTableModule",
                "content": "\n\tWhen the domain logic is organized using a Table Module pattern \n\n    ",
                "image": [],
                "options": [
                    "An object oriented style is followed.",
                    "The business logic is organized around record sets.",
                    "Row Data Gateway is the most suitable data source pattern.",
                    "A Service Layer should be used to provide an interface for the presentation layer."
                ]
            },
            {
                "questionId": "SilkMobileDevices",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of mobile devices\n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk is more convenient for mobile devices because it does most of the computation in the cloud.",
                    "Google Chrome is more convenient for mobile devices because it has an optimized network stack that runs in any kind device.",
                    "Amazon Silk is more convenient for mobile devices because it customizes the number of threads that run in the device.",
                    "Google Chrome is more convenient for mobile devices because content delivery is optimized."
                ]
            },
            {
                "questionId": "ThousandParsecReadWriteConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameServer and Repository component\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Read/Write connector which encapsulates a redundant Repository.",
                    "There is a Read/Write connector which guarantees that players turns are not lost.",
                    "There is a Read/Write connector which guarantees that only the turns of the last two players may be lost."
                ]
            },
            {
                "questionId": "OrderPadReliability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The connector between the client component, executing in the Pad, and the server component, executing in the OrderPadDatabase\n\t\n    ",
                "image": [],
                "options": [
                    "Supports asynchronous communication to deal with disconnected mode.",
                    "Implements an event bus that allows the server to inform the client about new order recommendations.",
                    "May loose some of the changes done on the client component.",
                    "Has reduced reliability qualities."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-62A-16copias.tex",
        "quizTitle": "..-data-2014-test-6-test-62A-16copias",
        "questions": [
            {
                "questionId": "SilkConnections",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\t\n    ",
                "image": [],
                "options": [
                    "In Amazon Silk a request for a web page corresponds to a peer-to-peer interaction between all the web components containing the resources.",
                    "In Google Chrome a request for a web page is accomplished by a single access to the internet.",
                    "In Amazon Silk a request for a web page corresponds to requesting a service from the amazon cloud.",
                    "In Google Chrome a request for a web page aggregates the page on the background before it is sent to the client."
                ]
            },
            {
                "questionId": "ThousandParsecModule",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The ThousandParsec protocol\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Should be described as a submodule of the RulesSet module.",
                    "Should be described as a submodule of but not included in the RulesSet subtree.",
                    "Should be described as a submodule of the Design module.",
                    "Should not be described as a module because it is a component."
                ]
            },
            {
                "questionId": "OrderPadIterative",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. In the description of the system can be read:\n\t\n\t\\begin{quote}\n\t\tOne of these was using a file-transfer to send data to the mainframe rather than MQ, which wouldn't perform well once many stores were active.\n\t\\end{quote}\n\t\n\tThis approach means that\n\t\n    ",
                "image": [],
                "options": [
                    "Performance was traded for easy of development.",
                    "An iterative development was followed, which allowed more time to develop a connector with good performance in the latter stages of the project.",
                    "Performance was traded for the modifiability quality.",
                    "An incremental development was followed, which allowed to have the system in production without being necessary to export all the information to the mainframe."
                ]
            },
            {
                "questionId": "SocialCalcRemoteCursor",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. It can be read in the case description: \\emph{A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.}\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{: TableEditor} broadcasts the cursor position through the \\textsc{: Sheet}.",
                    "An interface delegation is missing in the picture to represent the \\textsc{: TableEditor} broadcasting the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: Sheet} broadcasts the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: TableEditor} broadcasts the cursor position through its \\textsc{: StatusCallback} port."
                ]
            },
            {
                "questionId": "LogicAccessTransactionScriptDomainObjects",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the domain objects\n\n    ",
                "image": [],
                "options": [
                    "Are responsible for loading the objects they refer to.",
                    "Are responsible for the management of transactions, begin and end of transactions.",
                    "Contain the business logic.",
                    "May not even exist, only record sets are used."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-62B-16copias.tex",
        "quizTitle": "..-data-2014-test-6-test-62B-16copias",
        "questions": [
            {
                "questionId": "LogicAccessTransactionScriptDomainObjects",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the domain objects\n\n    ",
                "image": [],
                "options": [
                    "Are responsible for loading the objects they refer to.",
                    "Are responsible for the management of transactions, begin and end of transactions.",
                    "Contain the business logic.",
                    "May not even exist, only record sets are used."
                ]
            },
            {
                "questionId": "OrderPadIterative",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. In the description of the system can be read:\n\t\n\t\\begin{quote}\n\t\tOne of these was using a file-transfer to send data to the mainframe rather than MQ, which wouldn't perform well once many stores were active.\n\t\\end{quote}\n\t\n\tThis approach means that\n\t\n    ",
                "image": [],
                "options": [
                    "Performance was traded for easy of development.",
                    "An iterative development was followed, which allowed more time to develop a connector with good performance in the latter stages of the project.",
                    "Performance was traded for the modifiability quality.",
                    "An incremental development was followed, which allowed to have the system in production without being necessary to export all the information to the mainframe."
                ]
            },
            {
                "questionId": "SilkConnections",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\t\n    ",
                "image": [],
                "options": [
                    "In Amazon Silk a request for a web page corresponds to a peer-to-peer interaction between all the web components containing the resources.",
                    "In Google Chrome a request for a web page is accomplished by a single access to the internet.",
                    "In Amazon Silk a request for a web page corresponds to requesting a service from the amazon cloud.",
                    "In Google Chrome a request for a web page aggregates the page on the background before it is sent to the client."
                ]
            },
            {
                "questionId": "ThousandParsecModule",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The ThousandParsec protocol\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Should be described as a submodule of the RulesSet module.",
                    "Should be described as a submodule of but not included in the RulesSet subtree.",
                    "Should be described as a submodule of the Design module.",
                    "Should not be described as a module because it is a component."
                ]
            },
            {
                "questionId": "SocialCalcRemoteCursor",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. It can be read in the case description: \\emph{A simple improvement is for each client to broadcast its cursor position to other users, so everyone can see which cells are being worked on.}\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{: TableEditor} broadcasts the cursor position through the \\textsc{: Sheet}.",
                    "An interface delegation is missing in the picture to represent the \\textsc{: TableEditor} broadcasting the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: Sheet} broadcasts the cursor position through the \\textsc{Pub} port.",
                    "The \\textsc{: TableEditor} broadcasts the cursor position through its \\textsc{: StatusCallback} port."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-63A-16copias.tex",
        "quizTitle": "..-data-2014-test-6-test-63A-16copias",
        "questions": [
            {
                "questionId": "SilkPredictor",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of the prediction of pages the user is going to access\n\t\n    ",
                "image": [],
                "options": [
                    "Amazon Silk predicts accesses based on the information gathered for all Silk users.",
                    "Google Chrome uses a usability maintain system model tactic.",
                    "Amazon Silk predictions are constrained by the amount of information it can store about each user access.",
                    "Google Chrome predictions do not require storage in the client-side."
                ]
            },
            {
                "questionId": "ThousandParsecTPConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameClient and GameServer components\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Request/Reply connector.",
                    "There is a ThousandParsec connector which can be decomposed into a set of components and Request/Reply connectors.",
                    "There is an EventBus connector."
                ]
            },
            {
                "questionId": "OrderPadPortability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The decision between the use of a Native application or HTML5 on the implementation of the client in the Pad\n\t\n    ",
                "image": [],
                "options": [
                    "Was taken because HTML5 provides better portability qualities.",
                    "Was taken because Native applications provide better modifiability qualities.",
                    "Was taken because HTML5 provides better usability qualities.",
                    "Was taken because Native application provide better support for working offline."
                ]
            },
            {
                "questionId": "SocialCalcServer",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the system. According to this representation\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The server implements the \\textsc{: Repository} component and the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{: Repository} component.",
                    "The server implements the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{SpreadSheet} components"
                ]
            },
            {
                "questionId": "LogicAccessTransactionScript",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-63B-16copias.tex",
        "quizTitle": "..-data-2014-test-6-test-63B-16copias",
        "questions": [
            {
                "questionId": "LogicAccessTransactionScript",
                "content": "\n\tWhen the domain logic is organized using a Transaction Script pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            },
            {
                "questionId": "OrderPadPortability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The decision between the use of a Native application or HTML5 on the implementation of the client in the Pad\n\t\n    ",
                "image": [],
                "options": [
                    "Was taken because HTML5 provides better portability qualities.",
                    "Was taken because Native applications provide better modifiability qualities.",
                    "Was taken because HTML5 provides better usability qualities.",
                    "Was taken because Native application provide better support for working offline."
                ]
            },
            {
                "questionId": "SilkPredictor",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome in the context of the prediction of pages the user is going to access\n\t\n    ",
                "image": [],
                "options": [
                    "Amazon Silk predicts accesses based on the information gathered for all Silk users.",
                    "Google Chrome uses a usability maintain system model tactic.",
                    "Amazon Silk predictions are constrained by the amount of information it can store about each user access.",
                    "Google Chrome predictions do not require storage in the client-side."
                ]
            },
            {
                "questionId": "SocialCalcServer",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the system. According to this representation\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The server implements the \\textsc{: Repository} component and the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{: Repository} component.",
                    "The server implements the \\textsc{: Broadcast} connector.",
                    "The server implements the \\textsc{SpreadSheet} components"
                ]
            },
            {
                "questionId": "ThousandParsecTPConnector",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a proposal of application-specific types for the architectural components, where the names of the ports are missing. Between the GameClient and GameServer components\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-ThousandParsec-cc}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-cc.png",
                        "width": 80
                    }
                ],
                "options": [
                    "There is a ThousandParsec connector.",
                    "There is a Request/Reply connector.",
                    "There is a ThousandParsec connector which can be decomposed into a set of components and Request/Reply connectors.",
                    "There is an EventBus connector."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-64A-18copias.tex",
        "quizTitle": "..-data-2014-test-6-test-64A-18copias",
        "questions": [
            {
                "questionId": "SilkCaching",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk explicitly caches pages on the browser to optimize accesses.",
                    "Google Chrome predictor takes into consideration the amount of available cache.",
                    "Amazon Silk cache is not shared between different users of the service to support confidentiality.",
                    "Google Chrome cache is shared among the different users of a desktop machine."
                ]
            },
            {
                "questionId": "ThousandParsecAI",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The AI players should be described\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "As a specialization of the RulesSet module.",
                    "As a submodule of the RulesSet module.",
                    "As a module but not included in the RulesSet subtree.",
                    "As a specialization of the Design module."
                ]
            },
            {
                "questionId": "OrderPadMainframeConnector",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The final interaction between the OrderPadDatabase component and Mainframe component is supported by \n\t\n    ",
                "image": [],
                "options": [
                    "Two distinct unidirectional connectors.",
                    "A single bidirectional connector.",
                    "Three distinct unidirectional connectors.",
                    "A single unidirectional connector."
                ]
            },
            {
                "questionId": "SocialCalcParser",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{Parser} module is used when loading a file\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{Parser} module is executed by a repository component, which is not represented in the view.",
                    "The code of the \\textsc{Parser} module is executed by both, the \\textsc{: Sheet} and the repository components (the latter is not visible in the view)."
                ]
            },
            {
                "questionId": "LogicAccessDomainModel",
                "content": "\n\tWhen the domain logic is organized using a Domain Model pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2014/test-6/test-64B-18copias.tex",
        "quizTitle": "..-data-2014-test-6-test-64B-18copias",
        "questions": [
            {
                "questionId": "OrderPadMainframeConnector",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The final interaction between the OrderPadDatabase component and Mainframe component is supported by \n\t\n    ",
                "image": [],
                "options": [
                    "Two distinct unidirectional connectors.",
                    "A single bidirectional connector.",
                    "Three distinct unidirectional connectors.",
                    "A single unidirectional connector."
                ]
            },
            {
                "questionId": "LogicAccessDomainModel",
                "content": "\n\tWhen the domain logic is organized using a Domain Model pattern the most suitable data source patterns are\n\n    ",
                "image": [],
                "options": [
                    "Table Data Gateway and Row Data Gateway.",
                    "Row Data Gateway and Active Record.",
                    "Row Data Gateway and Data Mapper.",
                    "Active Record and Data Mapper."
                ]
            },
            {
                "questionId": "SilkCaching",
                "content": "\n\tWhen comparing Amazon Silk with Google Chrome  \n\n    ",
                "image": [],
                "options": [
                    "Amazon Silk explicitly caches pages on the browser to optimize accesses.",
                    "Google Chrome predictor takes into consideration the amount of available cache.",
                    "Amazon Silk cache is not shared between different users of the service to support confidentiality.",
                    "Google Chrome cache is shared among the different users of a desktop machine."
                ]
            },
            {
                "questionId": "ThousandParsecAI",
                "content": "\n\tConsider the architectural views for the ThousandParsec system. The following diagram depicts a fragment of a proposal for the decomposition view of the system. The AI players should be described\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{x-ThousandParsec-ruleset}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-ThousandParsec-ruleset.png",
                        "width": 100
                    }
                ],
                "options": [
                    "As a specialization of the RulesSet module.",
                    "As a submodule of the RulesSet module.",
                    "As a module but not included in the RulesSet subtree.",
                    "As a specialization of the Design module."
                ]
            },
            {
                "questionId": "SocialCalcParser",
                "content": "\n\tConsider the architectural views for the SocialCalc system. The following diagram depicts a proposal for a component-and-connector view of the client Spreadsheet. A \\textsc{Parser} module is used when loading a file\n\t\n\t\\centering\n\t\\includegraphics[width=80mm]{x-SocialCalc-cc-client}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2014/test-6/x-SocialCalc-cc-client.png",
                        "width": 80
                    }
                ],
                "options": [
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: TableEditor} component.",
                    "The \\textsc{Parser} module is part of the code executed by the \\textsc{: Sheet} component.",
                    "The code of the \\textsc{Parser} module is executed by a repository component, which is not represented in the view.",
                    "The code of the \\textsc{Parser} module is executed by both, the \\textsc{: Sheet} and the repository components (the latter is not visible in the view)."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/exams/20160108Exam/exame-20160108-companion-A.tex",
        "quizTitle": "..-data-2015-exams-20160108Exam-exame-20160108-companion-A",
        "questions": [
            {
                "questionId": "ArchitectureInfluenceCycleOne",
                "content": "\n\tConsider the following sentence by Melvin Conways, also known as Conway's Law\n\t\n\t\\begin{quote}\n\t\torganizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations\n\t\\end{quote}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This law highlights the impact of the business on the architecture",
                    "This law can be seen as an example of the architecture influence cycle",
                    "This law states that architectures impact on the structure of the organization",
                    "This law does not apply to the design of architectures"
                ]
            },
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{../AdventureBuilderDeployment}\n\t\\end{center}\n\t\n\tAccording to this view the stakeholders can see that the Adventure Builder system\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/AdventureBuilderDeployment.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Becomes unavailable for clients if there is a fault in the hardware of web server (srv-web)",
                    "Becomes unavailable for clients if there is a fault in the hardware of database server (srv-db)",
                    "Becomes unavailable for clients if there is a fault in the hardware of service server (srv-opc)",
                    "Becomes unavailable for banks if there is a fault in the hardware of service server (srv-opc)"
                ]
            },
            {
                "questionId": "RequirementsOne",
                "content": "\n\tFrank Buschmann cites the characterization Marquardt does of Performitis:\n\t\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system as testability and maintainability.\n\t\\end{quote}\n\t\n\tFrom this problem you can conclude that:\n\n    ",
                "image": [],
                "options": [
                    "Performance is a quality that you have to address at the end of the development process",
                    "There is no system which can have good performance and be easily maintainable",
                    "We have to distinguish architectural performance from opportunistic performance",
                    "The system performance quality has impact on the performance of the execution of tests"
                ]
            },
            {
                "questionId": "ArchitectureDefinitionOne",
                "content": "\n\t    Consider that a software development team uses an agile methodology\n\t    such as XP (Extreme Programming), where no documentation is\n\t    produced.  Then, the systems developed by that team\n\n\t    ",
                "image": [],
                "options": [
                    "Typically have a software architecture that results\n\t      from the common knowledge about the system that is shared among\n\t      the team members",
                    "Do not have a software architecture, because in agile\n\t      methodologies there is no architectural design phase",
                    "Do not have a software architecture, because the practice of\n\t      refactoring allows changing every part of the system easily",
                    "May have a software architecture, but that architecture is\n\t      not known because it was neither designed nor documented"
                ]
            },
            {
                "questionId": "ScenariosTacticsOne",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  \tperform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n    should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n    usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "ModuleComponentOne",
                "content": "\n    Consider the Figure that describes the use of\n    caches in web services.  \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{../RequestNodeCache}\n\t\\end{center}\n\t\n\tIn that Figure, there is a\n    rectangle with the name \\emph{Cache} within another rectangle with\n    the name \\emph{Request Node}.  Taking into account the description\n    made in the text and the goal of that Figure, those rectangles\n    correspond to which type of software elements?\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/RequestNodeCache.png",
                        "width": 80
                    }
                ],
                "options": [
                    "They are both modules",
                    "They are both components",
                    "The \\emph{Request Node} is a component and the\n      \\emph{Cache} is a module",
                    "The \\emph{Request Node} is a module and the \\emph{Cache}\n      is a component"
                ]
            },
            {
                "questionId": "AvailabilityOne",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to deal with faults of type\n    \\emph{omission} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Retry",
                    "Active redundancy",
                    "Ignore faulty behaviour",
                    "Ping/Echo"
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that does not have to change when any of the original modules are changed.",
                    "Increases the cohesion between the two modules.",
                    "Cannot be used together with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "PerformanceOne",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Bound execution time."
                ]
            },
            {
                "questionId": "NginxScenariosTacticsOne",
                "content": "\n\tConsider the following excerpt from Nginx case study\n\n\t\\begin{quote}\n\t\tnginx configuration is kept in a number of plain text files which typically reside in /usr/local/etc/nginx or /etc/nginx. The main configuration file is usually called nginx.conf. \t\tTo keep it uncluttered, parts of the configuration can be put in separate files which can be automatically included in the main one. However, it should be noted here that nginx \t\tdoes not currently support Apache-style distributed configurations (i.e., .htaccess files). All of the configuration relevant to nginx web server behavior should reside in a \t\tcentralized set of configuration files.\n\t\\end{quote}\n\t\n\tWhen comparing the configuration in Nginx with the configuration in Apache we can say that\n\t\n\t  ",
                "image": [],
                "options": [
                    "Due to its configuration strategy Apache has better performance",
                    "Performance was the main concern of the design of the configuration strategy in Nginx",
                    "Apache emphasizes the usability quality for system administrators by allowing to split the configuration by different files",
                    "Nginx emphasizes the usability quality for system administrators by reducing the number or errors"
                ]
            },
            {
                "questionId": "ContinousIntegrationScenariosTacticsOne",
                "content": "\n\t  In the Continous integration case study can be read about Jenkins\n\t  \n\t  \\begin{quote}\n\t\t  It takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools. Jenkins originated with Sun, but is very widely used and has a robust open-source community associated with it.\n\t  \\end{quote}\n\t  \n\t  Consider that a scenario is written from the above sentence\n    \n    ",
                "image": [],
                "options": [
                    "The stimulus is to integrate reports from a variety of test tools",
                    "The response is JUnit XML standard",
                    "The source of the stimulus is Sun",
                    "The measure of the response is a robust open-source community associated with it"
                ]
            },
            {
                "questionId": "InfinispanScenariosTacticsOne",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t  When persisting for durability, persistence can either be online, where the application thread is blocked until data is safely written to disk, or offline, where data is flushed to disk periodically and asynchronously. In the latter case, the application thread is not blocked on the process of persistence, in exchange for uncertainty as to whether the data was successfully persisted to disk at all.\n\t  \\end{quote}\n\t  \n\t  From the description we can infer a trade-off between the qualities of\n    \n    ",
                "image": [],
                "options": [
                    "Modifiability and Performance",
                    "Availability and Modifiability",
                    "Performance and Reliability",
                    "Reliability and Security"
                ]
            },
            {
                "questionId": "DesigningArchitectureOne",
                "content": "\n    According to the attribute-driven design process, we should design\n    the software architecture for a system based on a selected list of\n    requirements, which are called the \\textit{architecture significant requirements}.\n    These requirements should be sorted according to their\n    importance for the system's stakeholders because\n\n    ",
                "image": [],
                "options": [
                    "We should always satisfy in the first place the requirements\n      of more important stakeholders (such as the client)",
                    "If no order was established among them, we would not know\n      from where should we start the design process",
                    "If one of the stakeholders complains that his requirement\n      is not satisfied, we may explain to him that there were other more\n      important requirements first",
                    "When it is not possible to satisfy all of the requirements\n      optimally, we should be aware of their relative importance so that\n      we may find a solution that corresponds to a satisfactory trade-off"
                ]
            },
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Incremental development is a criteria that drives the design of views of this type.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "UsesGeneralizationOne",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n\n  ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Deployment style",
                    "The Uses style",
                    "The Work-assignment style"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelOne",
                "content": "\n  In a layered architecture composed by four layers, where the topmost\n  layer is the layer number 1 and the bottommost layer is the layer\n  number 4, which of the layers is more modifiable?\n\n    ",
                "image": [],
                "options": [
                    "Layer 1",
                    "Layer 4",
                    "In a layered architecture all layers are equally modifiable",
                    "Modifiability is not made easier by a layered architecture"
                ]
            },
            {
                "questionId": "ComponentConnectorOne",
                "content": "\n  Suppose that there are certain performance requirements for a\n  system, and that you want to show to the stakeholders of the system\n  that the software architecture that you designed meet those\n  requirements. To do this\n\n    ",
                "image": [],
                "options": [
                    "It makes no sense to use views of the module viewtype, as\n    \tthey give only a static view of the system",
                    "You should use only views of the component-and-connector\n    \tviewtype, which describe the dynamic aspects of the system",
                    "You may need to use views of the three viewtypes",
                    "The only views that are relevant to performance\n    \trequirements are views of the Deployment style"
                ]
            },
            {
                "questionId": "RepositoryClientServerOne",
                "content": "\n    Suppose that you are designing the software architecture for an\n    enterprise application that has requirements about the maximum\n    response time for a certain type of requests.  Moreover, assume\n    that those requests arrive at the system periodically, whereas the\n    remaining requests have an unpredictable frequency.  Finally,\n    assume that your system will have a single server that will be\n    executing on a predefined machine with a 12-core AMD processor.\n    To show to the stakeholders that your system satisfies the\n    performance requirements you have to use views of which\n    architectural style?\n\n    ",
                "image": [],
                "options": [
                    "The Work Assignment style",
                    "The Client-Server style",
                    "The Deployment style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "TiersDynamicreconfigurationPeertopeerPublishsubscribeOne",
                "content": "\n\t  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n\t  show in that window the status of each contact (whether it is available, unavailable, busy,\n\t  etc). Given that the status of a contact may be changed at any time, and that the contact's\n\t  status is given by the Instant Messaging application of that contact, which architectural\n\t  style represents best the interaction pattern between these components?\n\n\t   ",
                "image": [],
                "options": [
                    "The Shared Data style",
                    "The Pipes-and-filters style",
                    "The Publish-subscribe style",
                    "The Client-Server style"
                ]
            },
            {
                "questionId": "SOAPipesFiltersOne",
                "content": "\n\t  Imagine that you want to develop a system that is to be used in email servers, whose goal\n\t  is to allow changing the emails that are received by the server (for example, to remove\n\t  potential viruses or URLs linking to phishing sites). The goal is that the server feeds each\n\t  received email through this system before processing it (e.g., forward it to another server,\n\t  or store it locally). The system is supposed to be easily modifiable, to support new types\n\t  of email transformations. Which architectural style is the most adequate to satisfy these\n\t  requirements?\n\n\t   ",
                "image": [],
                "options": [
                    "The Peer-to-Peer style",
                    "The Pipes-and-filters style",
                    "The Client-Server style",
                    "The Publish-subscribe style"
                ]
            },
            {
                "questionId": "AllocationOne",
                "content": "\n\tConsider the work assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "nginxOne",
                "content": "\n  Web servers implemented in Java, such as the Tomcat web server,\n  typically use a thread-based model for processing requests.  That\n  is, they process each request on a different thread within the same\n  JVM process, rather than on a different process.  One of the reasons\n  for this is that\n\n  ",
                "image": [],
                "options": [
                    "Launching a new process for processing each request is too expensive",
                    "Using threads ensures that the processing of each request is\n  \tisolated from the remaining requests",
                    "With this approach they may use all of the available cores\n  \tin multiprocessor machines",
                    "They are used for implementing enterprise applications that\n  \ttypically have complex domain logic and, by using threads, it is\n  \teasier to reuse code from one request to another"
                ]
            },
            {
                "questionId": "ContinousIntegrationViewsOne",
                "content": "\n\t Consider the following architectural view of the Pony-Build system as described in the Continous integration case study\n\t  \n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{../PonyBuildArchitecture}\n\t\\end{center}\n\t\n\tAccording to this view the quality of performance is achieved through\n    \n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/PonyBuildArchitecture.png",
                        "width": 100
                    }
                ],
                "options": [
                    "An increase resource efficiency tactic",
                    "A schedule resources tactic",
                    "A multiple copies of computation tactic",
                    "A manage sampling rate tactic"
                ]
            },
            {
                "questionId": "InfinispanViewsOne",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t Infinispan's core data structures make use of software transactional memory techniques for concurrent access to shared data. This minimizes the need for explicit locks, mutexes and other forms of synchronization, preferring techniques like compare-and-set operations within a loop to achieve correctness when updating shared data structures. Such techniques have been proven to improve CPU utilization in multi-core and SMP systems, and despite the increased code complexity, has paid off in overall performance when under load.\n\t  \\end{quote}\n\t  \n\t  These properties of Infinispan can be represented by\n    \n    ",
                "image": [],
                "options": [
                    "A decomposition view which represent the module for compare-and-set",
                    "A client-server view with non-blocking connectors for the interaction between threads and core data structures",
                    "A communicating-processes view with non-blocking connectors for the interaction between threads and core data structures",
                    "A deployment view which allocate threads to the multi-cores"
                ]
            },
            {
                "questionId": "WebTwoOne",
                "content": "\n    With the evolution of the web application technologies, it is now\n    possible to develop web applications with a user interface similar\n    to the interface of desktop applications.  Yet, for this to\n    happen, part of the code that was executing in the web server is\n    now executing in the web browser.  How does this change manifests\n    in the software architecture of the system?\n\n    ",
                "image": [],
                "options": [
                    "In the Deployment view, because the presentation\n      component is now executing in a different place",
                    "In the component-and-connector view, because the\n      connector between the web client and the web server has to change",
                    "In the Layer view, because the order of the layers will\n      have to change",
                    "In the mapping between layers of the system and the\n      components where they execute"
                ]
            },
            {
                "questionId": "MicroservicesArchitectureOne",
                "content": "\n    Consider the following figure depicting two different architectures for web applications\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{../Microservices}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/Microservices.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The left part of the figure represents a three-layered architecture",
                    "The most relevant architectural style in the right part of the figure is shared-data",
                    "The system represented in the left part of the figure tends to be non-transactional",
                    "The system represented in the right part of the figure tends to have good modifiability"
                ]
            },
            {
                "questionId": "AmazonOne",
                "content": "\n    Consider the following excerpt about the Amazon system\n\t\n\t\\begin{quote}\n\t\tOver time, this grew into hundreds of services and a number of application servers that aggregate the information from the services. The application that renders the Amazon.com Web pages is one such application server, but so are the applications that serve the Web-services interface, the customer service application, the seller interface, and the many third-party Web sites that run on our platform.\n\t\\end{quote}\n\t\n\tThe architectural style that better represents these aspects of the Amazon architecture is\n\t\n    ",
                "image": [],
                "options": [
                    "Service-oriented architecture to express how clients can access the services",
                    "Client-server to express how multiple clients can access the applications",
                    "Tiers to express that different applications define their own contexts",
                    "Decomposition to express the different responsibilities assigned to each application"
                ]
            },
            {
                "questionId": "ScalableArchitectureOne",
                "content": "\n    Consider the following excerpt about the Scalable web architecture and distributed systems case study about two different possible implementations of a global cache\n\t\n\t\\begin{quote}\n\t\t The majority of applications leveraging global caches tend to use the first type, where the cache itself manages eviction and fetching data to prevent a flood of requests for the same data from the clients. However, there are some cases where the second implementation makes more sense. For example, if the cache is being used for very large files, a low cache hit percentage would cause the cache buffer to become overwhelmed with cache misses; in this situation it helps to have a large percentage of the total data set (or hot data set) in the cache. \t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The solution where the application is responsible for the eviction has better availability",
                    "The solution where the cache is responsible for the eviction has better availability",
                    "The solution where the application is responsible for the eviction has better modifiability",
                    "The solution where the cache is responsible for the eviction has better performance"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Interoperability",
                    "Reliability",
                    "Security"
                ]
            },
            {
                "questionId": "GraphiteViewsOne",
                "content": "\n    In Graphite system  the \\emph{receiver} and the \\emph{writer threads} support asynchronous writing of metrics to optimize disk accesses. The interaction between these two components follow the architectural style\n\n    ",
                "image": [],
                "options": [
                    "Client-server",
                    "Communicating Processes",
                    "Repository",
                    "Pipes-and-Filters"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/exams/20160108Exam/exame-20160108-companion-B.tex",
        "quizTitle": "..-data-2015-exams-20160108Exam-exame-20160108-companion-B",
        "questions": [
            {
                "questionId": "ContinousIntegrationScenariosTacticsOne",
                "content": "\n\t  In the Continous integration case study can be read about Jenkins\n\t  \n\t  \\begin{quote}\n\t\t  It takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools. Jenkins originated with Sun, but is very widely used and has a robust open-source community associated with it.\n\t  \\end{quote}\n\t  \n\t  Consider that a scenario is written from the above sentence\n    \n    ",
                "image": [],
                "options": [
                    "The stimulus is to integrate reports from a variety of test tools",
                    "The response is JUnit XML standard",
                    "The source of the stimulus is Sun",
                    "The measure of the response is a robust open-source community associated with it"
                ]
            },
            {
                "questionId": "InfinispanScenariosTacticsOne",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t  When persisting for durability, persistence can either be online, where the application thread is blocked until data is safely written to disk, or offline, where data is flushed to disk periodically and asynchronously. In the latter case, the application thread is not blocked on the process of persistence, in exchange for uncertainty as to whether the data was successfully persisted to disk at all.\n\t  \\end{quote}\n\t  \n\t  From the description we can infer a trade-off between the qualities of\n    \n    ",
                "image": [],
                "options": [
                    "Modifiability and Performance",
                    "Availability and Modifiability",
                    "Performance and Reliability",
                    "Reliability and Security"
                ]
            },
            {
                "questionId": "WebTwoOne",
                "content": "\n    With the evolution of the web application technologies, it is now\n    possible to develop web applications with a user interface similar\n    to the interface of desktop applications.  Yet, for this to\n    happen, part of the code that was executing in the web server is\n    now executing in the web browser.  How does this change manifests\n    in the software architecture of the system?\n\n    ",
                "image": [],
                "options": [
                    "In the Deployment view, because the presentation\n      component is now executing in a different place",
                    "In the component-and-connector view, because the\n      connector between the web client and the web server has to change",
                    "In the Layer view, because the order of the layers will\n      have to change",
                    "In the mapping between layers of the system and the\n      components where they execute"
                ]
            },
            {
                "questionId": "MicroservicesArchitectureOne",
                "content": "\n    Consider the following figure depicting two different architectures for web applications\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{../Microservices}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/Microservices.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The left part of the figure represents a three-layered architecture",
                    "The most relevant architectural style in the right part of the figure is shared-data",
                    "The system represented in the left part of the figure tends to be non-transactional",
                    "The system represented in the right part of the figure tends to have good modifiability"
                ]
            },
            {
                "questionId": "AmazonOne",
                "content": "\n    Consider the following excerpt about the Amazon system\n\t\n\t\\begin{quote}\n\t\tOver time, this grew into hundreds of services and a number of application servers that aggregate the information from the services. The application that renders the Amazon.com Web pages is one such application server, but so are the applications that serve the Web-services interface, the customer service application, the seller interface, and the many third-party Web sites that run on our platform.\n\t\\end{quote}\n\t\n\tThe architectural style that better represents these aspects of the Amazon architecture is\n\t\n    ",
                "image": [],
                "options": [
                    "Service-oriented architecture to express how clients can access the services",
                    "Client-server to express how multiple clients can access the applications",
                    "Tiers to express that different applications define their own contexts",
                    "Decomposition to express the different responsibilities assigned to each application"
                ]
            },
            {
                "questionId": "DesigningArchitectureOne",
                "content": "\n    According to the attribute-driven design process, we should design\n    the software architecture for a system based on a selected list of\n    requirements, which are called the \\textit{architecture significant requirements}.\n    These requirements should be sorted according to their\n    importance for the system's stakeholders because\n\n    ",
                "image": [],
                "options": [
                    "We should always satisfy in the first place the requirements\n      of more important stakeholders (such as the client)",
                    "If no order was established among them, we would not know\n      from where should we start the design process",
                    "If one of the stakeholders complains that his requirement\n      is not satisfied, we may explain to him that there were other more\n      important requirements first",
                    "When it is not possible to satisfy all of the requirements\n      optimally, we should be aware of their relative importance so that\n      we may find a solution that corresponds to a satisfactory trade-off"
                ]
            },
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Incremental development is a criteria that drives the design of views of this type.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "UsesGeneralizationOne",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n\n  ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Deployment style",
                    "The Uses style",
                    "The Work-assignment style"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelOne",
                "content": "\n  In a layered architecture composed by four layers, where the topmost\n  layer is the layer number 1 and the bottommost layer is the layer\n  number 4, which of the layers is more modifiable?\n\n    ",
                "image": [],
                "options": [
                    "Layer 1",
                    "Layer 4",
                    "In a layered architecture all layers are equally modifiable",
                    "Modifiability is not made easier by a layered architecture"
                ]
            },
            {
                "questionId": "AvailabilityOne",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to deal with faults of type\n    \\emph{omission} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Retry",
                    "Active redundancy",
                    "Ignore faulty behaviour",
                    "Ping/Echo"
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that does not have to change when any of the original modules are changed.",
                    "Increases the cohesion between the two modules.",
                    "Cannot be used together with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "PerformanceOne",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Bound execution time."
                ]
            },
            {
                "questionId": "NginxScenariosTacticsOne",
                "content": "\n\tConsider the following excerpt from Nginx case study\n\n\t\\begin{quote}\n\t\tnginx configuration is kept in a number of plain text files which typically reside in /usr/local/etc/nginx or /etc/nginx. The main configuration file is usually called nginx.conf. \t\tTo keep it uncluttered, parts of the configuration can be put in separate files which can be automatically included in the main one. However, it should be noted here that nginx \t\tdoes not currently support Apache-style distributed configurations (i.e., .htaccess files). All of the configuration relevant to nginx web server behavior should reside in a \t\tcentralized set of configuration files.\n\t\\end{quote}\n\t\n\tWhen comparing the configuration in Nginx with the configuration in Apache we can say that\n\t\n\t  ",
                "image": [],
                "options": [
                    "Due to its configuration strategy Apache has better performance",
                    "Performance was the main concern of the design of the configuration strategy in Nginx",
                    "Apache emphasizes the usability quality for system administrators by allowing to split the configuration by different files",
                    "Nginx emphasizes the usability quality for system administrators by reducing the number or errors"
                ]
            },
            {
                "questionId": "ComponentConnectorOne",
                "content": "\n  Suppose that there are certain performance requirements for a\n  system, and that you want to show to the stakeholders of the system\n  that the software architecture that you designed meet those\n  requirements. To do this\n\n    ",
                "image": [],
                "options": [
                    "It makes no sense to use views of the module viewtype, as\n    \tthey give only a static view of the system",
                    "You should use only views of the component-and-connector\n    \tviewtype, which describe the dynamic aspects of the system",
                    "You may need to use views of the three viewtypes",
                    "The only views that are relevant to performance\n    \trequirements are views of the Deployment style"
                ]
            },
            {
                "questionId": "RepositoryClientServerOne",
                "content": "\n    Suppose that you are designing the software architecture for an\n    enterprise application that has requirements about the maximum\n    response time for a certain type of requests.  Moreover, assume\n    that those requests arrive at the system periodically, whereas the\n    remaining requests have an unpredictable frequency.  Finally,\n    assume that your system will have a single server that will be\n    executing on a predefined machine with a 12-core AMD processor.\n    To show to the stakeholders that your system satisfies the\n    performance requirements you have to use views of which\n    architectural style?\n\n    ",
                "image": [],
                "options": [
                    "The Work Assignment style",
                    "The Client-Server style",
                    "The Deployment style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "TiersDynamicreconfigurationPeertopeerPublishsubscribeOne",
                "content": "\n\t  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n\t  show in that window the status of each contact (whether it is available, unavailable, busy,\n\t  etc). Given that the status of a contact may be changed at any time, and that the contact's\n\t  status is given by the Instant Messaging application of that contact, which architectural\n\t  style represents best the interaction pattern between these components?\n\n\t   ",
                "image": [],
                "options": [
                    "The Shared Data style",
                    "The Pipes-and-filters style",
                    "The Publish-subscribe style",
                    "The Client-Server style"
                ]
            },
            {
                "questionId": "SOAPipesFiltersOne",
                "content": "\n\t  Imagine that you want to develop a system that is to be used in email servers, whose goal\n\t  is to allow changing the emails that are received by the server (for example, to remove\n\t  potential viruses or URLs linking to phishing sites). The goal is that the server feeds each\n\t  received email through this system before processing it (e.g., forward it to another server,\n\t  or store it locally). The system is supposed to be easily modifiable, to support new types\n\t  of email transformations. Which architectural style is the most adequate to satisfy these\n\t  requirements?\n\n\t   ",
                "image": [],
                "options": [
                    "The Peer-to-Peer style",
                    "The Pipes-and-filters style",
                    "The Client-Server style",
                    "The Publish-subscribe style"
                ]
            },
            {
                "questionId": "AllocationOne",
                "content": "\n\tConsider the work assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "nginxOne",
                "content": "\n  Web servers implemented in Java, such as the Tomcat web server,\n  typically use a thread-based model for processing requests.  That\n  is, they process each request on a different thread within the same\n  JVM process, rather than on a different process.  One of the reasons\n  for this is that\n\n  ",
                "image": [],
                "options": [
                    "Launching a new process for processing each request is too expensive",
                    "Using threads ensures that the processing of each request is\n  \tisolated from the remaining requests",
                    "With this approach they may use all of the available cores\n  \tin multiprocessor machines",
                    "They are used for implementing enterprise applications that\n  \ttypically have complex domain logic and, by using threads, it is\n  \teasier to reuse code from one request to another"
                ]
            },
            {
                "questionId": "ContinousIntegrationViewsOne",
                "content": "\n\t Consider the following architectural view of the Pony-Build system as described in the Continous integration case study\n\t  \n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{../PonyBuildArchitecture}\n\t\\end{center}\n\t\n\tAccording to this view the quality of performance is achieved through\n    \n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/PonyBuildArchitecture.png",
                        "width": 100
                    }
                ],
                "options": [
                    "An increase resource efficiency tactic",
                    "A schedule resources tactic",
                    "A multiple copies of computation tactic",
                    "A manage sampling rate tactic"
                ]
            },
            {
                "questionId": "InfinispanViewsOne",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t Infinispan's core data structures make use of software transactional memory techniques for concurrent access to shared data. This minimizes the need for explicit locks, mutexes and other forms of synchronization, preferring techniques like compare-and-set operations within a loop to achieve correctness when updating shared data structures. Such techniques have been proven to improve CPU utilization in multi-core and SMP systems, and despite the increased code complexity, has paid off in overall performance when under load.\n\t  \\end{quote}\n\t  \n\t  These properties of Infinispan can be represented by\n    \n    ",
                "image": [],
                "options": [
                    "A decomposition view which represent the module for compare-and-set",
                    "A client-server view with non-blocking connectors for the interaction between threads and core data structures",
                    "A communicating-processes view with non-blocking connectors for the interaction between threads and core data structures",
                    "A deployment view which allocate threads to the multi-cores"
                ]
            },
            {
                "questionId": "ScalableArchitectureOne",
                "content": "\n    Consider the following excerpt about the Scalable web architecture and distributed systems case study about two different possible implementations of a global cache\n\t\n\t\\begin{quote}\n\t\t The majority of applications leveraging global caches tend to use the first type, where the cache itself manages eviction and fetching data to prevent a flood of requests for the same data from the clients. However, there are some cases where the second implementation makes more sense. For example, if the cache is being used for very large files, a low cache hit percentage would cause the cache buffer to become overwhelmed with cache misses; in this situation it helps to have a large percentage of the total data set (or hot data set) in the cache. \t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The solution where the application is responsible for the eviction has better availability",
                    "The solution where the cache is responsible for the eviction has better availability",
                    "The solution where the application is responsible for the eviction has better modifiability",
                    "The solution where the cache is responsible for the eviction has better performance"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Interoperability",
                    "Reliability",
                    "Security"
                ]
            },
            {
                "questionId": "GraphiteViewsOne",
                "content": "\n    In Graphite system  the \\emph{receiver} and the \\emph{writer threads} support asynchronous writing of metrics to optimize disk accesses. The interaction between these two components follow the architectural style\n\n    ",
                "image": [],
                "options": [
                    "Client-server",
                    "Communicating Processes",
                    "Repository",
                    "Pipes-and-Filters"
                ]
            },
            {
                "questionId": "ArchitectureInfluenceCycleOne",
                "content": "\n\tConsider the following sentence by Melvin Conways, also known as Conway's Law\n\t\n\t\\begin{quote}\n\t\torganizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations\n\t\\end{quote}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This law highlights the impact of the business on the architecture",
                    "This law can be seen as an example of the architecture influence cycle",
                    "This law states that architectures impact on the structure of the organization",
                    "This law does not apply to the design of architectures"
                ]
            },
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{../AdventureBuilderDeployment}\n\t\\end{center}\n\t\n\tAccording to this view the stakeholders can see that the Adventure Builder system\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/AdventureBuilderDeployment.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Becomes unavailable for clients if there is a fault in the hardware of web server (srv-web)",
                    "Becomes unavailable for clients if there is a fault in the hardware of database server (srv-db)",
                    "Becomes unavailable for clients if there is a fault in the hardware of service server (srv-opc)",
                    "Becomes unavailable for banks if there is a fault in the hardware of service server (srv-opc)"
                ]
            },
            {
                "questionId": "RequirementsOne",
                "content": "\n\tFrank Buschmann cites the characterization Marquardt does of Performitis:\n\t\t\n\t\\begin{quote}\n\t\tEach part of the system is directly influenced by local performance tuning measures. There is no global performance strategy, or it ignores other qualities of the system as testability and maintainability.\n\t\\end{quote}\n\t\n\tFrom this problem you can conclude that:\n\n    ",
                "image": [],
                "options": [
                    "Performance is a quality that you have to address at the end of the development process",
                    "There is no system which can have good performance and be easily maintainable",
                    "We have to distinguish architectural performance from opportunistic performance",
                    "The system performance quality has impact on the performance of the execution of tests"
                ]
            },
            {
                "questionId": "ArchitectureDefinitionOne",
                "content": "\n\t    Consider that a software development team uses an agile methodology\n\t    such as XP (Extreme Programming), where no documentation is\n\t    produced.  Then, the systems developed by that team\n\n\t    ",
                "image": [],
                "options": [
                    "Typically have a software architecture that results\n\t      from the common knowledge about the system that is shared among\n\t      the team members",
                    "Do not have a software architecture, because in agile\n\t      methodologies there is no architectural design phase",
                    "Do not have a software architecture, because the practice of\n\t      refactoring allows changing every part of the system easily",
                    "May have a software architecture, but that architecture is\n\t      not known because it was neither designed nor documented"
                ]
            },
            {
                "questionId": "ScenariosTacticsOne",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  \tperform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n    should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n    usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "ModuleComponentOne",
                "content": "\n    Consider the Figure that describes the use of\n    caches in web services.  \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{../RequestNodeCache}\n\t\\end{center}\n\t\n\tIn that Figure, there is a\n    rectangle with the name \\emph{Cache} within another rectangle with\n    the name \\emph{Request Node}.  Taking into account the description\n    made in the text and the goal of that Figure, those rectangles\n    correspond to which type of software elements?\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/RequestNodeCache.png",
                        "width": 80
                    }
                ],
                "options": [
                    "They are both modules",
                    "They are both components",
                    "The \\emph{Request Node} is a component and the\n      \\emph{Cache} is a module",
                    "The \\emph{Request Node} is a module and the \\emph{Cache}\n      is a component"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/exams/20160126Exam/exame-20160126-companion-A.tex",
        "quizTitle": "..-data-2015-exams-20160126Exam-exame-20160126-companion-A",
        "questions": [
            {
                "questionId": "ArchitectureInfluenceCycleTwo",
                "content": "\n  \t  Designing the software architecture for a complex system\n\n   \t ",
                "image": [],
                "options": [
                    "Is useful only if done (even if only partially) before the\n\t \tsystem's implementation is concluded, given that the architecture\n    \tis used for restricting the implementation",
                    "Is useful only if done (even if only partially) before the\n    \tsystem's implementation is concluded, because if the system is\n    \talready implemented, its implementation uniquely determines the\n    \tarchitecture",
                    "Is useful only if done (even if only partially) before the\n    \tsystem passes all of the acceptance tests by the client, given\n    \tthat no more requirements changes will take place after that time",
                    "Is useful even if the implementation is concluded and the\n    \tsystem has entered the maintenance phase"
                ]
            },
            {
                "questionId": "RequirementsTwo",
                "content": "\n  The architecturally significant requirements are important in the process of creating\n  the software architecture for a system because they are\n\n  ",
                "image": [],
                "options": [
                    "The most important requirements (both functional and\n  \tqualities) that the system must achieve",
                    "The components that manage the communication between the\n  \tremaining elements in the system",
                    "The stakeholders that drive the development of the system",
                    "The tactics that satisfy the most important requirements for\n  \tthe system"
                ]
            },
            {
                "questionId": "ArchitectureDefinitionTwo",
                "content": "\n\t \tThe software architecture of a system\n\n    \t",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements",
                    "Depends more on the architect's experience than on anything else",
                    "Should not depend on the skills of the developing team",
                    "None of the above"
                ]
            },
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderComponentConector}\n\t\\end{center}\n\t\n\tIn this component-and-connector view the interactions the interactions between components follow the architectural style(s)\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/AdventureBuilderComponentConector.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Communicating processes",
                    "Communicating processes and shared-data",
                    "Communicating processes, shared-data and service-oriented architecture",
                    "Communicating processes, shared-data, service-oriented architecture, and peer-to-peer"
                ]
            },
            {
                "questionId": "ModuleComponentTwo",
                "content": "\n    Which of the following phrases best describe the relationship\n    between modules and components?\n\n    ",
                "image": [],
                "options": [
                    "A module may contain code from different components",
                    "A component may execute code from different modules",
                    "A module may execute code from different components",
                    "A component may contain code from different modules"
                ]
            },
            {
                "questionId": "ScenariosTacticsTwo",
                "content": "\n\tGeneral scenarios play an important role in the development of a software architecture\n\tbecause\n\t\n\t",
                "image": [],
                "options": [
                    "They describe general requirements that all systems should try to satisfy",
                    "They allow us to build a more robust architecture that satisfies less specific\n\t\trequirements, which address a wider range of situations that may happen in\n\t\tthe system",
                    "They identify the most important requirements that the system should satisfy",
                    "They guide us in the requirement elicitation process with the system's stakeholders"
                ]
            },
            {
                "questionId": "AvailabilityTwo",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Ping/Echo",
                    "Heartbeat",
                    "Voting",
                    "Removal from Service"
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator simultaneously launches several instances of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario because the stimulus is an input, \\emph{launches several instances of the system}.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "NginxScenariosTacticsTwo",
                "content": "\n  Web servers typically receive requests from different users\n  concurrently (that is, either different users make requests\n  simultaneously or they make them fast enough that it is not possible\n  for the web server to answer one request from one user before\n  receiving another request from another user).  To process all the\n  requests, web servers may use different implementation strategies.\n  Assuming that we want to develop a web server to serve only static\n  pages with more or less the same size to a set of clients on the\n  same LAN network as the server, which of the following strategies\n  would be better?\n\n  ",
                "image": [],
                "options": [
                    "Launch a new process for processing each request",
                    "Spawn a new thread for processing each request",
                    "Put the requests into a queue and schedule their processing",
                    "Buy a server with high processing power"
                ]
            },
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tThe two basic contributors for the response time are the processing time and the blocking time. Which tactic for performance may reduce the blocking time\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "DesigningArchitectureTwo",
                "content": "\n\tDuring the different steps on how to create an architecture, the precise specification of architecture quality attributes is initially relevant to\n\n    ",
                "image": [],
                "options": [
                    "Make a business case for the system",
                    "Understand the architecturally significant requirements",
                    "The system design",
                    "Documenting and communicating the architecture"
                ]
            },
            {
                "questionId": "ContinousIntegrationScenariosTacticsTwo",
                "content": "\n\t  In the Continous integration case study can be read about Jenkins\n\t  \n\t  \\begin{quote}\n\t\t  It takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools. Jenkins originated with Sun, but is very widely used and has a robust open-source community associated with it.\n\t  \\end{quote}\n\t  \n\t  The quality of Jenkins that is emphasized in the above sentence is\n    \n    ",
                "image": [],
                "options": [
                    "Modifiability",
                    "Availability",
                    "Testability",
                    "Interoperability"
                ]
            },
            {
                "questionId": "InfinispanScenariosTacticsTwo",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t  Infinispan supports several pluggable cache stores-adapters that can be used to persist data to disk or any form of secondary storage. The current default implementation is a simplistic hash bucket and linked list implementation, where each hash bucket is represented by a file on the filesystem. While easy to use and configure, this isn't the best-performing implementation.\n\t  \\end{quote}\n\t  \n\t  The main architectural quality addressed in the above excerpt is \n\t  \n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Modifiability",
                    "Usability",
                    "Security"
                ]
            },
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "UsesGeneralizationTwo",
                "content": "\n\tSuppose that in the process of designing a system's software architecture you come to\n\tthe conclusion that there are uses relations in both directions in almost all of the system's\n\tmodules. This means that\n\t\n\t",
                "image": [],
                "options": [
                    "There is a high level of communication between the several modules, and this\n\t\twill cause the system to have a low performance",
                    "It is not possible to install the system in more than one machine",
                    "It is not possible to develop and to test the system incrementally",
                    "It is very hard to explain what the system does, because we need to understand\n\t\tall the execution fluxes"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelTwo",
                "content": "\n\t Suppose that you are implementing a module in a system that has a two layered architecture.\n\t Knowing that your module belongs to the upper layer (assuming the usual notation\n\t for the layer style), this means that you\n\t \n\t ",
                "image": [],
                "options": [
                    "Can use the operations defined in any of the system's modules",
                    "Can use the operations defined in the lower layer, but not the ones defined in\n\t \tthe upper layer",
                    "Can use the operations defined in the upper layer, but not the ones defined in\n\t \tthe lower layer",
                    "Should use some operation defined in the lower layer"
                ]
            },
            {
                "questionId": "ComponentConnectorTwo",
                "content": "\n\tThe connectors on component-and-connector view\n\t\n\t",
                "image": [],
                "options": [
                    "Represent the network infrastructure that allows components to communicate\n\t\twith each other",
                    "May, on another view of the system, be represented by a set of components\n\t\tand connectors",
                    "Represent the dependency relations that exist among the various components",
                    "Represent the control flow during a execution of the system"
                ]
            },
            {
                "questionId": "RepositoryClientServerTwo",
                "content": "\n    The email system is composed of various types of components\n    playing different roles.  For example, to send an email, a user\n    uses a \\emph{mail user agent} (MUA), to compose his message and\n    send it.  To send the message, the MUA typically connects to a\n    \\emph{mail transfer agent} (MTA) that receives the message,\n    analyzes the message's headers to determine the recipients and,\n    after querying the DNS system to determine the MTA responsible for\n    each recipient, it connects to the MTAs responsible for the\n    destination addresses to deliver the message.  Each of these MTAs\n    receives the message and stores it locally or forwards it to\n    others MTAs until the message reaches its destination MTA.\n    The recipient user of the message will then use his MUA to see the\n    messages that were sent to him.  To do it, the MUA connects to an\n    IMAP or POP server to obtain the user's messages.  Those IMAP and\n    POP servers obtain the messages for a user by reading the messages\n    stored by the MTA.\n\n    Given this simplified description of the operation of the email\n    system, which of the following architectural styles is more\n    appropriate to represent the pattern of interaction between the\n    MTA and the servers IMAP and POP?\n\n    ",
                "image": [],
                "options": [
                    "The Peer-to-Peer style",
                    "The Client-Server style",
                    "The Shared-Data style",
                    "The Publish-subscribe style"
                ]
            },
            {
                "questionId": "TiersDynamicreconfigurationPeertopeerPublishsubscribeTwo",
                "content": "\n    Consider the following excerpt from the tutorial on the Hadoop\n    MapReduce:\n\n    \\begin{quote}\n      Hadoop MapReduce is a software framework for easily writing\n      applications which process vast amounts of data (multi-terabyte\n      data-sets) in-parallel on large clusters (thousands of nodes) of\n      commodity hardware in a reliable, fault-tolerant manner.\n\n      A MapReduce job usually splits the input data-set into\n      independent chunks which are processed by the map tasks in a\n      completely parallel manner.  The framework sorts the outputs of\n      the maps, which are then input to the reduce tasks. Typically\n      both the input and the output of the job are stored in a\n      file-system.  The framework takes care of scheduling tasks,\n      monitoring them and re-executes the failed tasks.\n    \\end{quote}\n\n    Which architectural style of the component-and-connector viewtype\n    is more adequate to describe how the MapReduce works, taking into\n    account its main advantages in solving a problem?\n\n    ",
                "image": [],
                "options": [
                    "The Shared data style",
                    "The Pipes-and-filters style",
                    "The Peer-to-Peer style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "SOAPipesFiltersTwo",
                "content": "\n    Suppose that you are developing the software architecture of a new\n    system for an organization composed of several organizational\n    units, each one with its own information systems, which have been\n    developed independently of each other over the course of several\n    years and depending on the particular needs of each unit.  Your\n    system has the goal of integrating the various existing systems,\n    providing in this way not only a unified view of how the\n    organization works, but also allowing the creation of new\n    processes within the organization that involve more than one unit.\n    Which architectural style is better suited to design such a\n    system?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Client-Server style",
                    "The Service Oriented Architecture style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "AllocationTwo",
                "content": "\n\tConsider the deployment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns modules to the hardware.",
                    "It cannot assign software elements to virtual servers because they are not hardware.",
                    "For each set of software elements there is a single possible assignment to hardwre.",
                    "It is useful for system administrators."
                ]
            },
            {
                "questionId": "nginxTwo",
                "content": "\n    In Nginx, given that a \\emph{worker} processes various requests during its\n    life, how does it do it?\n\n    ",
                "image": [],
                "options": [
                    "By interleaving the various processing phases of each\n      request in a sequential process",
                    "By executing in parallel each of the phases of the\n      pipeline corresponding to the processing of a request",
                    "By executing in parallel the processing of the various requests",
                    "By processing completely each request before moving to\n      the next one, in a sequential process"
                ]
            },
            {
                "questionId": "GraphiteViewsTwo",
                "content": "\n\t  A high-level component-and-connect view of Graphite system can be designed using only the architectural style(s)\n\n    ",
                "image": [],
                "options": [
                    "Shared-data and Communicating-Processes",
                    "Communicating-Processes",
                    "Tiers",
                    "Client-Server and Shared-data"
                ]
            },
            {
                "questionId": "ContinousIntegrationViewsTwo",
                "content": "\n\t  In the Continous integration case study can be read about future features for Pony-Build\n\t  \n\t  \\begin{quote}\n\t\t  Currently, each continuous integration system reinvents the wheel by providing its own build configuration language, which is manifestly ridiculous; there are fewer than a dozen commonly used build systems, and probably only a few dozen test runners. Nonetheless, each CI system has a new and different way of specifying the build and test commands to be run. In fact, this seems to be one of the reasons why so many basically identical CI systems exist: each language and community implements their own configuration system, tailored to their own build and test systems, and then layers on the same set of features above that system. Therefore, building a domain-specific language (DSL) capable of representing the options used by the few dozen commonly used build and test tool chains would go a long way toward simplifying the CI landscape.\n\t  \\end{quote}\n\t  \n\t  Suppose that you are the architect that has to change the architecture to accomodate this new feature. Therefore, as an architect\n    \n    ",
                "image": [],
                "options": [
                    "You need to change the decomposition view to represent modules with the responsibilities associated with the DSL",
                    "You need to design a client-server view representing the interaction between the DSL and the servers that execute its commands",
                    "You need to design an implementation view to allow system administrators configure the builds",
                    "You do not need to change the views because the DSL does not have any architectural impact"
                ]
            },
            {
                "questionId": "InfinispanViewsTwo",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t Infinispan uses its own serialization scheme, where full class definitions are not written to the stream. Instead, magic numbers are used for known types where each known type is represented by a single byte. This greatly improves not just serialization and de-serialization speed qualities, but also produces a much more compact byte stream for transmission across a network. An externalizer is registered for each known data type, registered against a magic number. This externalizer contains the logic to convert object to bytes and vice versa.\n\t  \\end{quote}\n\t  \n\t  These properties of Infinispan can be represented by\n    \n    ",
                "image": [],
                "options": [
                    "A uses view which represent modules for the externalizers",
                    "A client-server view which represent the byte stream for transmission across a network",
                    "A connector that has the serialization and de-serialization speed qualities",
                    "A decomposition view which contains the serialization/de-serilization modules"
                ]
            },
            {
                "questionId": "WebTwoTwo",
                "content": "\n    One of the evolutions in the development of web applications was\n    the appearance of \\emph{mashups}, which are described in Wikipedia\n    as follows:\n\n    \\begin{quote}\n      In web development, a mashup is a web page or application that\n      uses and combines data, presentation or functionality from two\n      or more sources to create new services.\n    \\end{quote}\n\n    Knowing that the sources used by \\emph{mashups} do not know about\n    the existence of the \\emph{mashups} and that they change\n    frequently, forcing the adaptation of the \\emph{mashups} to\n    accomodate those changes, what is the best architecture to\n    minimize the effects of those changes?\n\n    ",
                "image": [],
                "options": [
                    "A \\emph{web services} architecture",
                    "A Client-Server architecture, where the \\emph{mashup}\n      is the client and the various sources are the servers",
                    "A layered architecture, where the access to the various\n      sources is the responsibility of the bottommost layer",
                    "A Publish-Subscribe architecture, where the various\n      sources publish events with the changes made and the\n      \\emph{mashup} subscribes those events"
                ]
            },
            {
                "questionId": "MicroservicesArchitectureTwo",
                "content": "\n    Consider the following figure depicting two different architectures for web applications\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=140mm]{../Microservices}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/Microservices.png",
                        "width": 140
                    }
                ],
                "options": [
                    "The main quality of the system in the right part of the figure is scalability",
                    "The main quality of the system in the left part of the figure is scalability",
                    "The main quality of the system in the right part of the figure is ease of development",
                    "The main quality of the system in the left part of the figure is to promote cross-functional teams"
                ]
            },
            {
                "questionId": "AmazonTwo",
                "content": "\n    Consider the following excerpt about the Amazon system\n\t\n\t\\begin{quote}\n\t\tMainly, I think service orientation has helped us there. The stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. You could dictate a rigorous single format, but that would not be realistic if you are in Amazon's platform business. We have to make sure that the platform can be extended by our customers to meet their needs.\n\t\\end{quote}\n\t\n\tThe architectural style that better represents these aspects of the Amazon architecture is\n\t\n    ",
                "image": [],
                "options": [
                    "Data model to express the stored data formats",
                    "Decomposition to express the services interfaces",
                    "Aspects to express the evolution of service interfaces",
                    "Publish-subscribe to express how data is shared between services"
                ]
            },
            {
                "questionId": "ScalableArchitectureTwo",
                "content": "\n    Consider the following excerpt about the Scalable web architecture and distributed systems case study\n\t\n\t\\begin{quote}\n\t\t Employing such a strategy maximizes data locality for the requests, which can result in decreased request latency. For example, let's say a bunch of nodes request parts of B: partB1, partB2, etc. We can set up our proxy to recognize the spatial locality of the individual requests, collapsing them into a single request and returning only bigB, greatly minimizing the reads from the data origin.\n\t\\end{quote}\n\t\n\tThe quality that is achieved with this tactic is\n\t\n    ",
                "image": [],
                "options": [
                    "Performance because all requests will be processed faster",
                    "Performance because it allows the processing of more requests per unit of time",
                    "Availability because even if PartB1 is not available partB2 can be provided",
                    "Reliability because a single correct read is used to responde to several requests"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance",
                    "Usability",
                    "Performance",
                    "Testability"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/exams/20160126Exam/exame-20160126-companion-B.tex",
        "quizTitle": "..-data-2015-exams-20160126Exam-exame-20160126-companion-B",
        "questions": [
            {
                "questionId": "SOAPipesFiltersTwo",
                "content": "\n    Suppose that you are developing the software architecture of a new\n    system for an organization composed of several organizational\n    units, each one with its own information systems, which have been\n    developed independently of each other over the course of several\n    years and depending on the particular needs of each unit.  Your\n    system has the goal of integrating the various existing systems,\n    providing in this way not only a unified view of how the\n    organization works, but also allowing the creation of new\n    processes within the organization that involve more than one unit.\n    Which architectural style is better suited to design such a\n    system?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Client-Server style",
                    "The Service Oriented Architecture style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "AllocationTwo",
                "content": "\n\tConsider the deployment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns modules to the hardware.",
                    "It cannot assign software elements to virtual servers because they are not hardware.",
                    "For each set of software elements there is a single possible assignment to hardwre.",
                    "It is useful for system administrators."
                ]
            },
            {
                "questionId": "nginxTwo",
                "content": "\n    In Nginx, given that a \\emph{worker} processes various requests during its\n    life, how does it do it?\n\n    ",
                "image": [],
                "options": [
                    "By interleaving the various processing phases of each\n      request in a sequential process",
                    "By executing in parallel each of the phases of the\n      pipeline corresponding to the processing of a request",
                    "By executing in parallel the processing of the various requests",
                    "By processing completely each request before moving to\n      the next one, in a sequential process"
                ]
            },
            {
                "questionId": "ContinousIntegrationViewsTwo",
                "content": "\n\t  In the Continous integration case study can be read about future features for Pony-Build\n\t  \n\t  \\begin{quote}\n\t\t  Currently, each continuous integration system reinvents the wheel by providing its own build configuration language, which is manifestly ridiculous; there are fewer than a dozen commonly used build systems, and probably only a few dozen test runners. Nonetheless, each CI system has a new and different way of specifying the build and test commands to be run. In fact, this seems to be one of the reasons why so many basically identical CI systems exist: each language and community implements their own configuration system, tailored to their own build and test systems, and then layers on the same set of features above that system. Therefore, building a domain-specific language (DSL) capable of representing the options used by the few dozen commonly used build and test tool chains would go a long way toward simplifying the CI landscape.\n\t  \\end{quote}\n\t  \n\t  Suppose that you are the architect that has to change the architecture to accomodate this new feature. Therefore, as an architect\n    \n    ",
                "image": [],
                "options": [
                    "You need to change the decomposition view to represent modules with the responsibilities associated with the DSL",
                    "You need to design a client-server view representing the interaction between the DSL and the servers that execute its commands",
                    "You need to design an implementation view to allow system administrators configure the builds",
                    "You do not need to change the views because the DSL does not have any architectural impact"
                ]
            },
            {
                "questionId": "InfinispanViewsTwo",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t Infinispan uses its own serialization scheme, where full class definitions are not written to the stream. Instead, magic numbers are used for known types where each known type is represented by a single byte. This greatly improves not just serialization and de-serialization speed qualities, but also produces a much more compact byte stream for transmission across a network. An externalizer is registered for each known data type, registered against a magic number. This externalizer contains the logic to convert object to bytes and vice versa.\n\t  \\end{quote}\n\t  \n\t  These properties of Infinispan can be represented by\n    \n    ",
                "image": [],
                "options": [
                    "A uses view which represent modules for the externalizers",
                    "A client-server view which represent the byte stream for transmission across a network",
                    "A connector that has the serialization and de-serialization speed qualities",
                    "A decomposition view which contains the serialization/de-serilization modules"
                ]
            },
            {
                "questionId": "WebTwoTwo",
                "content": "\n    One of the evolutions in the development of web applications was\n    the appearance of \\emph{mashups}, which are described in Wikipedia\n    as follows:\n\n    \\begin{quote}\n      In web development, a mashup is a web page or application that\n      uses and combines data, presentation or functionality from two\n      or more sources to create new services.\n    \\end{quote}\n\n    Knowing that the sources used by \\emph{mashups} do not know about\n    the existence of the \\emph{mashups} and that they change\n    frequently, forcing the adaptation of the \\emph{mashups} to\n    accomodate those changes, what is the best architecture to\n    minimize the effects of those changes?\n\n    ",
                "image": [],
                "options": [
                    "A \\emph{web services} architecture",
                    "A Client-Server architecture, where the \\emph{mashup}\n      is the client and the various sources are the servers",
                    "A layered architecture, where the access to the various\n      sources is the responsibility of the bottommost layer",
                    "A Publish-Subscribe architecture, where the various\n      sources publish events with the changes made and the\n      \\emph{mashup} subscribes those events"
                ]
            },
            {
                "questionId": "MicroservicesArchitectureTwo",
                "content": "\n    Consider the following figure depicting two different architectures for web applications\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=140mm]{../Microservices}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/Microservices.png",
                        "width": 140
                    }
                ],
                "options": [
                    "The main quality of the system in the right part of the figure is scalability",
                    "The main quality of the system in the left part of the figure is scalability",
                    "The main quality of the system in the right part of the figure is ease of development",
                    "The main quality of the system in the left part of the figure is to promote cross-functional teams"
                ]
            },
            {
                "questionId": "AmazonTwo",
                "content": "\n    Consider the following excerpt about the Amazon system\n\t\n\t\\begin{quote}\n\t\tMainly, I think service orientation has helped us there. The stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. You could dictate a rigorous single format, but that would not be realistic if you are in Amazon's platform business. We have to make sure that the platform can be extended by our customers to meet their needs.\n\t\\end{quote}\n\t\n\tThe architectural style that better represents these aspects of the Amazon architecture is\n\t\n    ",
                "image": [],
                "options": [
                    "Data model to express the stored data formats",
                    "Decomposition to express the services interfaces",
                    "Aspects to express the evolution of service interfaces",
                    "Publish-subscribe to express how data is shared between services"
                ]
            },
            {
                "questionId": "ScalableArchitectureTwo",
                "content": "\n    Consider the following excerpt about the Scalable web architecture and distributed systems case study\n\t\n\t\\begin{quote}\n\t\t Employing such a strategy maximizes data locality for the requests, which can result in decreased request latency. For example, let's say a bunch of nodes request parts of B: partB1, partB2, etc. We can set up our proxy to recognize the spatial locality of the individual requests, collapsing them into a single request and returning only bigB, greatly minimizing the reads from the data origin.\n\t\\end{quote}\n\t\n\tThe quality that is achieved with this tactic is\n\t\n    ",
                "image": [],
                "options": [
                    "Performance because all requests will be processed faster",
                    "Performance because it allows the processing of more requests per unit of time",
                    "Availability because even if PartB1 is not available partB2 can be provided",
                    "Reliability because a single correct read is used to responde to several requests"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance",
                    "Usability",
                    "Performance",
                    "Testability"
                ]
            },
            {
                "questionId": "GraphiteViewsTwo",
                "content": "\n\t  A high-level component-and-connect view of Graphite system can be designed using only the architectural style(s)\n\n    ",
                "image": [],
                "options": [
                    "Shared-data and Communicating-Processes",
                    "Communicating-Processes",
                    "Tiers",
                    "Client-Server and Shared-data"
                ]
            },
            {
                "questionId": "ArchitectureInfluenceCycleTwo",
                "content": "\n  \t  Designing the software architecture for a complex system\n\n   \t ",
                "image": [],
                "options": [
                    "Is useful only if done (even if only partially) before the\n\t \tsystem's implementation is concluded, given that the architecture\n    \tis used for restricting the implementation",
                    "Is useful only if done (even if only partially) before the\n    \tsystem's implementation is concluded, because if the system is\n    \talready implemented, its implementation uniquely determines the\n    \tarchitecture",
                    "Is useful only if done (even if only partially) before the\n    \tsystem passes all of the acceptance tests by the client, given\n    \tthat no more requirements changes will take place after that time",
                    "Is useful even if the implementation is concluded and the\n    \tsystem has entered the maintenance phase"
                ]
            },
            {
                "questionId": "RequirementsTwo",
                "content": "\n  The architecturally significant requirements are important in the process of creating\n  the software architecture for a system because they are\n\n  ",
                "image": [],
                "options": [
                    "The most important requirements (both functional and\n  \tqualities) that the system must achieve",
                    "The components that manage the communication between the\n  \tremaining elements in the system",
                    "The stakeholders that drive the development of the system",
                    "The tactics that satisfy the most important requirements for\n  \tthe system"
                ]
            },
            {
                "questionId": "ArchitectureDefinitionTwo",
                "content": "\n\t \tThe software architecture of a system\n\n    \t",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements",
                    "Depends more on the architect's experience than on anything else",
                    "Should not depend on the skills of the developing team",
                    "None of the above"
                ]
            },
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderComponentConector}\n\t\\end{center}\n\t\n\tIn this component-and-connector view the interactions the interactions between components follow the architectural style(s)\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/AdventureBuilderComponentConector.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Communicating processes",
                    "Communicating processes and shared-data",
                    "Communicating processes, shared-data and service-oriented architecture",
                    "Communicating processes, shared-data, service-oriented architecture, and peer-to-peer"
                ]
            },
            {
                "questionId": "ModuleComponentTwo",
                "content": "\n    Which of the following phrases best describe the relationship\n    between modules and components?\n\n    ",
                "image": [],
                "options": [
                    "A module may contain code from different components",
                    "A component may execute code from different modules",
                    "A module may execute code from different components",
                    "A component may contain code from different modules"
                ]
            },
            {
                "questionId": "ScenariosTacticsTwo",
                "content": "\n\tGeneral scenarios play an important role in the development of a software architecture\n\tbecause\n\t\n\t",
                "image": [],
                "options": [
                    "They describe general requirements that all systems should try to satisfy",
                    "They allow us to build a more robust architecture that satisfies less specific\n\t\trequirements, which address a wider range of situations that may happen in\n\t\tthe system",
                    "They identify the most important requirements that the system should satisfy",
                    "They guide us in the requirement elicitation process with the system's stakeholders"
                ]
            },
            {
                "questionId": "UsesGeneralizationTwo",
                "content": "\n\tSuppose that in the process of designing a system's software architecture you come to\n\tthe conclusion that there are uses relations in both directions in almost all of the system's\n\tmodules. This means that\n\t\n\t",
                "image": [],
                "options": [
                    "There is a high level of communication between the several modules, and this\n\t\twill cause the system to have a low performance",
                    "It is not possible to install the system in more than one machine",
                    "It is not possible to develop and to test the system incrementally",
                    "It is very hard to explain what the system does, because we need to understand\n\t\tall the execution fluxes"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelTwo",
                "content": "\n\t Suppose that you are implementing a module in a system that has a two layered architecture.\n\t Knowing that your module belongs to the upper layer (assuming the usual notation\n\t for the layer style), this means that you\n\t \n\t ",
                "image": [],
                "options": [
                    "Can use the operations defined in any of the system's modules",
                    "Can use the operations defined in the lower layer, but not the ones defined in\n\t \tthe upper layer",
                    "Can use the operations defined in the upper layer, but not the ones defined in\n\t \tthe lower layer",
                    "Should use some operation defined in the lower layer"
                ]
            },
            {
                "questionId": "ComponentConnectorTwo",
                "content": "\n\tThe connectors on component-and-connector view\n\t\n\t",
                "image": [],
                "options": [
                    "Represent the network infrastructure that allows components to communicate\n\t\twith each other",
                    "May, on another view of the system, be represented by a set of components\n\t\tand connectors",
                    "Represent the dependency relations that exist among the various components",
                    "Represent the control flow during a execution of the system"
                ]
            },
            {
                "questionId": "RepositoryClientServerTwo",
                "content": "\n    The email system is composed of various types of components\n    playing different roles.  For example, to send an email, a user\n    uses a \\emph{mail user agent} (MUA), to compose his message and\n    send it.  To send the message, the MUA typically connects to a\n    \\emph{mail transfer agent} (MTA) that receives the message,\n    analyzes the message's headers to determine the recipients and,\n    after querying the DNS system to determine the MTA responsible for\n    each recipient, it connects to the MTAs responsible for the\n    destination addresses to deliver the message.  Each of these MTAs\n    receives the message and stores it locally or forwards it to\n    others MTAs until the message reaches its destination MTA.\n    The recipient user of the message will then use his MUA to see the\n    messages that were sent to him.  To do it, the MUA connects to an\n    IMAP or POP server to obtain the user's messages.  Those IMAP and\n    POP servers obtain the messages for a user by reading the messages\n    stored by the MTA.\n\n    Given this simplified description of the operation of the email\n    system, which of the following architectural styles is more\n    appropriate to represent the pattern of interaction between the\n    MTA and the servers IMAP and POP?\n\n    ",
                "image": [],
                "options": [
                    "The Peer-to-Peer style",
                    "The Client-Server style",
                    "The Shared-Data style",
                    "The Publish-subscribe style"
                ]
            },
            {
                "questionId": "TiersDynamicreconfigurationPeertopeerPublishsubscribeTwo",
                "content": "\n    Consider the following excerpt from the tutorial on the Hadoop\n    MapReduce:\n\n    \\begin{quote}\n      Hadoop MapReduce is a software framework for easily writing\n      applications which process vast amounts of data (multi-terabyte\n      data-sets) in-parallel on large clusters (thousands of nodes) of\n      commodity hardware in a reliable, fault-tolerant manner.\n\n      A MapReduce job usually splits the input data-set into\n      independent chunks which are processed by the map tasks in a\n      completely parallel manner.  The framework sorts the outputs of\n      the maps, which are then input to the reduce tasks. Typically\n      both the input and the output of the job are stored in a\n      file-system.  The framework takes care of scheduling tasks,\n      monitoring them and re-executes the failed tasks.\n    \\end{quote}\n\n    Which architectural style of the component-and-connector viewtype\n    is more adequate to describe how the MapReduce works, taking into\n    account its main advantages in solving a problem?\n\n    ",
                "image": [],
                "options": [
                    "The Shared data style",
                    "The Pipes-and-filters style",
                    "The Peer-to-Peer style",
                    "The Communicating Processes style"
                ]
            },
            {
                "questionId": "AvailabilityTwo",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Ping/Echo",
                    "Heartbeat",
                    "Voting",
                    "Removal from Service"
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator simultaneously launches several instances of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario because the stimulus is an input, \\emph{launches several instances of the system}.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "NginxScenariosTacticsTwo",
                "content": "\n  Web servers typically receive requests from different users\n  concurrently (that is, either different users make requests\n  simultaneously or they make them fast enough that it is not possible\n  for the web server to answer one request from one user before\n  receiving another request from another user).  To process all the\n  requests, web servers may use different implementation strategies.\n  Assuming that we want to develop a web server to serve only static\n  pages with more or less the same size to a set of clients on the\n  same LAN network as the server, which of the following strategies\n  would be better?\n\n  ",
                "image": [],
                "options": [
                    "Launch a new process for processing each request",
                    "Spawn a new thread for processing each request",
                    "Put the requests into a queue and schedule their processing",
                    "Buy a server with high processing power"
                ]
            },
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tThe two basic contributors for the response time are the processing time and the blocking time. Which tactic for performance may reduce the blocking time\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "DesigningArchitectureTwo",
                "content": "\n\tDuring the different steps on how to create an architecture, the precise specification of architecture quality attributes is initially relevant to\n\n    ",
                "image": [],
                "options": [
                    "Make a business case for the system",
                    "Understand the architecturally significant requirements",
                    "The system design",
                    "Documenting and communicating the architecture"
                ]
            },
            {
                "questionId": "ContinousIntegrationScenariosTacticsTwo",
                "content": "\n\t  In the Continous integration case study can be read about Jenkins\n\t  \n\t  \\begin{quote}\n\t\t  It takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools. Jenkins originated with Sun, but is very widely used and has a robust open-source community associated with it.\n\t  \\end{quote}\n\t  \n\t  The quality of Jenkins that is emphasized in the above sentence is\n    \n    ",
                "image": [],
                "options": [
                    "Modifiability",
                    "Availability",
                    "Testability",
                    "Interoperability"
                ]
            },
            {
                "questionId": "InfinispanScenariosTacticsTwo",
                "content": "\n\t  In the Infinispan case study can be read\n\t  \n\t  \\begin{quote}\n\t\t  Infinispan supports several pluggable cache stores-adapters that can be used to persist data to disk or any form of secondary storage. The current default implementation is a simplistic hash bucket and linked list implementation, where each hash bucket is represented by a file on the filesystem. While easy to use and configure, this isn't the best-performing implementation.\n\t  \\end{quote}\n\t  \n\t  The main architectural quality addressed in the above excerpt is \n\t  \n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Modifiability",
                    "Usability",
                    "Security"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/exams/20160711Exam/exame-20160711-companion.tex",
        "quizTitle": "..-data-2015-exams-20160711Exam-exame-20160711-companion",
        "questions": [
            {
                "questionId": "ArchitecturalInfluenceCycle",
                "content": "\n\tSuppose that after designing a successful architecture for a particular client the software house management decides to create a cross-functional internal department to start providing products for this particular segment of the market.\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the project.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business and project.",
                    "This is a case of an architectural influence cycle without feedback."
                ]
            },
            {
                "questionId": "InteroperabilityStimulus",
                "content": "\n\tIn a scenario for interoperability\n\n    ",
                "image": [],
                "options": [
                    "The exchange of information is the stimulus.",
                    "The request to adapt an interface is the stimulus.",
                    "The design of a reusable interface is the stimulus.",
                    "The data input to the system is the stimulus."
                ]
            },
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tIn his article \\emph{Who Needs an Architect?} Martin Fowler refers to the following architecture definition\n\t\t\n\t\\begin{quote}\n\t\t\\emph{the expert developers working on that project have a shared understanding of the system design}\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "This shared understanding can be represented by a set of architectural views.",
                    "This shared understanding includes the architecturally significant requirements.",
                    "The system algorithms should be part of the shared understanding.",
                    "The shared understanding describes the system from a high-level perspective."
                ]
            },
            {
                "questionId": "ComponentvsModule",
                "content": "\n\tIn wikipedia you can find the following fragment of a definition:\n\t\n\t\\begin{quote}\n\t\tAn individual software component is a software package, or a module that encapsulates a set of related functions.\n\t\\end{quote}\n\t\n\tAccording to the definitions taught in the course the above \\emph{individual software component} corresponds to:\n\n    ",
                "image": [],
                "options": [
                    "A component.",
                    "A module.",
                    "Both, a component and a module, depending on the perspective.",
                    "An external element."
                ]
            },
            {
                "questionId": "ComponentAndConnectorTwoOne",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{AdventureBuilder-SOA}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/20160711Exam/AdventureBuilder-SOA.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server.",
                    "Service-oriented architecture, and Shared-data.",
                    "Service-oriented architecture, Shared-data, and Peer-to-peer.",
                    "Service-oriented architecture, Shared-data, Peer-to-peer, and Client-server."
                ]
            },
            {
                "questionId": "GeneralScenario",
                "content": "\n\tA general scenario for a quality attribute\n\n    ",
                "image": [],
                "options": [
                    "Should be avoided because scenarios should describe very concrete situations.",
                    "Enumerates, for each kind of quality attribute, all the possible types of source of stimulus, stimulus, etc.",
                    "Can omit some of the elements like, for instance, the environment, if they are not relevant for the general scenario.",
                    "Is a very reusable scenario that can be used in many different concrete situations."
                ]
            },
            {
                "questionId": "OmissionRetry",
                "content": "\n\tConsidering the availability architectural quality, the tactic of retry\n\n    ",
                "image": [],
                "options": [
                    "Can be applied to any kind of availability scenario.",
                    "Is useful to support scenarios where the stimulus is an omission.",
                    "Guarantees that the system will not become unavailable.",
                    "Reduces the availability scenario response time because the request occurs twice."
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that does not have to change when any of the original modules are changed.",
                    "Increases the cohesion between the two modules.",
                    "Cannot be used together with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "NginxThree",
                "content": "\n\tIn the description of the nginx case study we can read:\n\t\n\t\\begin{quote}\n\t\tnginx's modular architecture generally allows developers to extend the set of web server features without modifying the nginx core. nginx modules come in slightly different incarnations, namely core modules, event modules, phase handlers, protocols, variable handlers, filters, upstreams and load balancers. At this time, nginx doesn't support dynamically loaded modules; i.e., modules are compiled along with the core at build stage.\n\t\\end{quote}\n\t\n\tThe above sentence corresponds to\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "A security scenario because it allows the introduction of filters to encrypt the messages.",
                    "A availability scenario because it allows the introduction of load balancers.",
                    "A modifiability scenario where defer binding occurs at compile time.",
                    "A usability scenario because developers can extend the system without having to modify the nginx core."
                ]
            },
            {
                "questionId": "PerformanceThree",
                "content": "\n\tJeff Atwood wrote an article in its blog about performance of software systems that is entitled, \\emph{Hardware is Cheap, Programmers are Expensive}. Which performance tactic(s) is he suggesting\n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase resource efficiency.",
                    "Increase resources.",
                    "Increase resource efficiency and Increase resources.",
                    "Increase resources and Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            },
            {
                "questionId": "ContinousIntegrationScenariosTacticsTwo",
                "content": "\n\t  In the Continous integration case study can be read about Jenkins\n\t  \n\t  \\begin{quote}\n\t\t  It takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools. Jenkins originated with Sun, but is very widely used and has a robust open-source community associated with it.\n\t  \\end{quote}\n\t  \n\t  The quality of Jenkins that is emphasized in the above sentence is\n    \n    ",
                "image": [],
                "options": [
                    "Modifiability",
                    "Availability",
                    "Testability",
                    "Interoperability"
                ]
            },
            {
                "questionId": "InfinispanTwoOne",
                "content": "\n\tIn the Infinispan case study can be read\n\t\n\t\\begin{quote}\n\t\tThis allows applications to theoretically address an unlimited amount of in-memory storage as nodes are added to the cluster, increasing overall capacity.\n\t\\end{quote}\n\t\n\tThe quality that is referred is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability.",
                    "Performance.",
                    "Scalability."
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Usability.",
                    "Security.",
                    "Availability."
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module.",
                    "The invoked function may not have any input parameter.",
                    "The invoked function may not have any output parameter.",
                    "The invoked function may not have both any input parameter nor any output parameter."
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelOne",
                "content": "\n  In a layered architecture composed by four layers, where the topmost\n  layer is the layer number 1 and the bottommost layer is the layer\n  number 4, which of the layers is more modifiable?\n\n    ",
                "image": [],
                "options": [
                    "Layer 1",
                    "Layer 4",
                    "In a layered architecture all layers are equally modifiable",
                    "Modifiability is not made easier by a layered architecture"
                ]
            },
            {
                "questionId": "ConnectorDecomposition",
                "content": "\n\tConsider an architect that is designing a component-and-connector view. In some point the architect decides that she does not need to decompose a connector with a demanding quality level. This may occur because\n\t\t\n    ",
                "image": [],
                "options": [
                    "She encapsulates the connector qualities inside a higher level component.",
                    "She delays the complete specification of the connector for development time to have human resources to prototype and measure different implementations.",
                    "She does not want to clutter the view with details and trusts the development team to implement the connector according to the required quality level.",
                    "The required quality associated with the connector is supported by existing and well-know technology."
                ]
            },
            {
                "questionId": "ClientServerAvailability",
                "content": "\n\tThe client-server architectural style provides availability because\n\t\n    ",
                "image": [],
                "options": [
                    "It allows an undefined number of clients.",
                    "It is possible to have redundant servers.",
                    "Servers can also be clients.",
                    "Servers can send a heartbeat to clients."
                ]
            },
            {
                "questionId": "CCStyleTwo",
                "content": "\n\tConsider the peer-to-peer architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "All the peers are equal.",
                    "Any peer can access any other peer.",
                    "Peers are only used to share files.",
                    "The interaction between peers is symmetric."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            },
            {
                "questionId": "InstallStyle",
                "content": "\n\tAn important stage of the development of any system is its build into the set of executable files. A suitable architectural style which helps on the definition of the build process is\n\n    ",
                "image": [],
                "options": [
                    "Deployment style.",
                    "Implementation style.",
                    "Install style.",
                    "Work assignment style."
                ]
            },
            {
                "questionId": "nginxTwo",
                "content": "\n    In Nginx, given that a \\emph{worker} processes various requests during its\n    life, how does it do it?\n\n    ",
                "image": [],
                "options": [
                    "By interleaving the various processing phases of each\n      request in a sequential process",
                    "By executing in parallel each of the phases of the\n      pipeline corresponding to the processing of a request",
                    "By executing in parallel the processing of the various requests",
                    "By processing completely each request before moving to\n      the next one, in a sequential process"
                ]
            },
            {
                "questionId": "JenkinsTwo",
                "content": "\n\tIn the Continuous Integration case can be read\n\t\\begin{quote}\n\t\tBuild notification: The outcomes of builds generally need to be communicated to interested clients, either via pull (Web, RSS, RPC, etc.) or push notification (e-mail, Twitter, etc.) This can include notification of all builds, or only failed builds, or builds that haven't been executed within a certain period.\n\t\\end{quote}\n\t\tThe architectural style used in push notifications is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Publish-subscribe.",
                    "Client-server.",
                    "Shared-date.",
                    "Generalization."
                ]
            },
            {
                "questionId": "InfinispanOne",
                "content": "\n\tConsider the Infinispan system when it is configured as a remote data grid. The relation between the Applications and the Grid is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Client-server.",
                    "Peer-to-peer.",
                    "Master-slave.",
                    "Pipe-and-filter."
                ]
            },
            {
                "questionId": "GraphiteDataPointSocket",
                "content": "\n\tConsider the following application-specific types. Note that \\texttt{Queue} components are within the \\texttt{Carbon} components. In a view that contains components of these three types \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{x-datapoint-access}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/20160711Exam/x-datapoint-access.png",
                        "width": 120
                    }
                ],
                "options": [
                    "There is a message passing connector between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{data points access} port of \\texttt{WebApp}.",
                    "There is a interface delegation relation between the \\texttt{read} port of \\texttt{Queue} and the \\texttt{query} port of \\texttt{Carbon}.",
                    "There is a connector between the \\texttt{producer} port of a \\texttt{Queue} component and the \\texttt{client} port of its \\texttt{Carbon} component.",
                    "The \\texttt{client} ports of \\texttt{Carbon} and \\texttt{WebApp} are connected to a \\texttt{Client} component through the same connector instance."
                ]
            },
            {
                "questionId": "WebTwoOne",
                "content": "\n    With the evolution of the web application technologies, it is now\n    possible to develop web applications with a user interface similar\n    to the interface of desktop applications.  Yet, for this to\n    happen, part of the code that was executing in the web server is\n    now executing in the web browser.  How does this change manifests\n    in the software architecture of the system?\n\n    ",
                "image": [],
                "options": [
                    "In the Deployment view, because the presentation\n      component is now executing in a different place",
                    "In the component-and-connector view, because the\n      connector between the web client and the web server has to change",
                    "In the Layer view, because the order of the layers will\n      have to change",
                    "In the mapping between layers of the system and the\n      components where they execute"
                ]
            },
            {
                "questionId": "MicroAndAmazonThree",
                "content": "\n\tIn the interview Werner Vogels from Amazon gives to Jim Gray, Werner Vogels says that\n\t\n\t\\begin{quote}\n\t\tThe stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. \n\t\\end{quote}\n\t\n\tWhich means that in the software architecture of Amazon's systems\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The data-shared architectural style is not applied because data is encapsulated inside services.",
                    "The sharing of data is done using a service-oriented architecture.",
                    "Modifiability is not a concern of their architecture.",
                    "The decouple of data formats does not support scalability because of the transactional properties."
                ]
            },
            {
                "questionId": "MicroAndAmazonOne",
                "content": "\n\tConsider the following distinction between Monoliths and Microservices made by Matin Fowler\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{MonolithsVsMicroservices}\n\t\\end{center}\n\t\n\tIf we try to map this figure into a set of views we will need.\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/20160711Exam/MonolithsVsMicroservices.png",
                        "width": 100
                    }
                ],
                "options": [
                    "A decomposition view.",
                    "A view of the component-and-connector viewtype.",
                    "A view of the component-and-connector viewtype and a deployment view.",
                    "A decomposition view, a view of the component-and-connector viewtype and a deployment view."
                ]
            },
            {
                "questionId": "ImageHostingReads",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingReads}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/exams/20160711Exam/ImageHostingReads.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the availability of the \\texttt{Image File Storage}.",
                    "This view highlights the performance of the \\texttt{download} operations.",
                    "This view highlights the performance of \\texttt{upload} operations.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability.",
                    "The quality addressed is performance.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-11A.tex",
        "quizTitle": "..-data-2015-test-1-test-11A",
        "questions": [
            {
                "questionId": "PragmaticArchitect",
                "content": "\n\tAccording to Frank Buschmann in the article \\emph{Introducing the Pragmatic Architect}\n\t\t\n    ",
                "image": [],
                "options": [
                    "The business aspects of the system are for business architects, not the software architects.",
                    "Dealing with the technological aspects of the system should be delayed to the implementation stage of development.",
                    "The modeling of a system is not part of the software architect duties.",
                    "The level of abstraction of the system an architect works may vary."
                ]
            },
            {
                "questionId": "EarlydDecisions",
                "content": "\n\tIn his article \\emph{Who Needs an Architect?} Martin Fowler refers to the following architecture definition\n\t\t\n\t\\begin{quote}\n\t\t\\emph{architecture is the set of design decisions that must be made early in a project}\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Martin Fowler disagrees with this definition because we should delay the design decisions and focus on features first.",
                    "Martin Fowler complains about this definition because the early decisions are not necessarily the right ones.",
                    "Martin Fowler complains about this definition because architecture should stress flexibility which can only be necessary later.",
                    "Martin Fowler disagrees with this definition because to design an architecture it is not necessary to make any decision."
                ]
            },
            {
                "questionId": "ImageHostingPerformance",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingPerformance}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingPerformance.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the availability of the system.",
                    "This view highlights the performance of the \\texttt{Image File Storage}.",
                    "This view highlights the different performance levels for \\texttt{upload} and \\texttt{dowload} operations.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations."
                ]
            },
            {
                "questionId": "GeneralScenario",
                "content": "\n\tA general scenario for a quality attribute\n\n    ",
                "image": [],
                "options": [
                    "Should be avoided because scenarios should describe very concrete situations.",
                    "Enumerates, for each kind of quality attribute, all the possible types of source of stimulus, stimulus, etc.",
                    "Can omit some of the elements like, for instance, the environment, if they are not relevant for the general scenario.",
                    "Is a very reusable scenario that can be used in many different concrete situations."
                ]
            },
            {
                "questionId": "OmissionRetry",
                "content": "\n\tConsidering the availability architectural quality, the tactic of retry\n\n    ",
                "image": [],
                "options": [
                    "Can be applied to any kind of availability scenario.",
                    "Is useful to support scenarios where the stimulus is an omission.",
                    "Guarantees that the system will not become unavailable.",
                    "Reduces the availability scenario response time because the request occurs twice."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-11B.tex",
        "quizTitle": "..-data-2015-test-1-test-11B",
        "questions": [
            {
                "questionId": "GeneralScenario",
                "content": "\n\tA general scenario for a quality attribute\n\n    ",
                "image": [],
                "options": [
                    "Should be avoided because scenarios should describe very concrete situations.",
                    "Enumerates, for each kind of quality attribute, all the possible types of source of stimulus, stimulus, etc.",
                    "Can omit some of the elements like, for instance, the environment, if they are not relevant for the general scenario.",
                    "Is a very reusable scenario that can be used in many different concrete situations."
                ]
            },
            {
                "questionId": "OmissionRetry",
                "content": "\n\tConsidering the availability architectural quality, the tactic of retry\n\n    ",
                "image": [],
                "options": [
                    "Can be applied to any kind of availability scenario.",
                    "Is useful to support scenarios where the stimulus is an omission.",
                    "Guarantees that the system will not become unavailable.",
                    "Reduces the availability scenario response time because the request occurs twice."
                ]
            },
            {
                "questionId": "PragmaticArchitect",
                "content": "\n\tAccording to Frank Buschmann in the article \\emph{Introducing the Pragmatic Architect}\n\t\t\n    ",
                "image": [],
                "options": [
                    "The business aspects of the system are for business architects, not the software architects.",
                    "Dealing with the technological aspects of the system should be delayed to the implementation stage of development.",
                    "The modeling of a system is not part of the software architect duties.",
                    "The level of abstraction of the system an architect works may vary."
                ]
            },
            {
                "questionId": "EarlydDecisions",
                "content": "\n\tIn his article \\emph{Who Needs an Architect?} Martin Fowler refers to the following architecture definition\n\t\t\n\t\\begin{quote}\n\t\t\\emph{architecture is the set of design decisions that must be made early in a project}\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "Martin Fowler disagrees with this definition because we should delay the design decisions and focus on features first.",
                    "Martin Fowler complains about this definition because the early decisions are not necessarily the right ones.",
                    "Martin Fowler complains about this definition because architecture should stress flexibility which can only be necessary later.",
                    "Martin Fowler disagrees with this definition because to design an architecture it is not necessary to make any decision."
                ]
            },
            {
                "questionId": "ImageHostingPerformance",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingPerformance}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingPerformance.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the availability of the system.",
                    "This view highlights the performance of the \\texttt{Image File Storage}.",
                    "This view highlights the different performance levels for \\texttt{upload} and \\texttt{dowload} operations.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-12A.tex",
        "quizTitle": "..-data-2015-test-1-test-12A",
        "questions": [
            {
                "questionId": "ArchitecturalInfluenceCycle",
                "content": "\n\tSuppose that after designing a successful architecture for a particular client the software house management decides to create a cross-functional internal department to start providing products for this particular segment of the market.\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the project.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business and project.",
                    "This is a case of an architectural influence cycle without feedback."
                ]
            },
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tIn his article \\emph{Who Needs an Architect?} Martin Fowler refers to the following architecture definition\n\t\t\n\t\\begin{quote}\n\t\t\\emph{the expert developers working on that project have a shared understanding of the system design}\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "This shared understanding can be represented by a set of architectural views.",
                    "This shared understanding includes the architecturally significant requirements.",
                    "The system algorithms should be part of the shared understanding.",
                    "The shared understanding describes the system from a high-level perspective."
                ]
            },
            {
                "questionId": "ImageHostingScalability",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingScalability}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingScalability.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the security of the system.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations.",
                    "This view highlights the scalability of storage.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations, and of storage."
                ]
            },
            {
                "questionId": "InteroperabilityStimulus",
                "content": "\n\tIn a scenario for interoperability\n\n    ",
                "image": [],
                "options": [
                    "The exchange of information is the stimulus.",
                    "The request to adapt an interface is the stimulus.",
                    "The design of a reusable interface is the stimulus.",
                    "The data input to the system is the stimulus."
                ]
            },
            {
                "questionId": "PingEchoHeartbeat",
                "content": "\n\tConsidering the availability architectural quality and the tactics of ping/echo and heartbeat\n\n    ",
                "image": [],
                "options": [
                    "These tactics cannot not be applied in conjunction with the self-test tactic.",
                    "These tactics are used to prevent the occurence of a fault.",
                    "Heartbeat is more scalable than ping/echo because the monitor does not need to know in advance the addresses of the components.",
                    "In ping/echo the components have the initiative to start the interaction."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-12B.tex",
        "quizTitle": "..-data-2015-test-1-test-12B",
        "questions": [
            {
                "questionId": "PingEchoHeartbeat",
                "content": "\n\tConsidering the availability architectural quality and the tactics of ping/echo and heartbeat\n\n    ",
                "image": [],
                "options": [
                    "These tactics cannot not be applied in conjunction with the self-test tactic.",
                    "These tactics are used to prevent the occurence of a fault.",
                    "Heartbeat is more scalable than ping/echo because the monitor does not need to know in advance the addresses of the components.",
                    "In ping/echo the components have the initiative to start the interaction."
                ]
            },
            {
                "questionId": "ArchitecturalInfluenceCycle",
                "content": "\n\tSuppose that after designing a successful architecture for a particular client the software house management decides to create a cross-functional internal department to start providing products for this particular segment of the market.\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the project.",
                    "This is a case of an architectural influence cycle where the feedback cycle resulted in changes on the business and project.",
                    "This is a case of an architectural influence cycle without feedback."
                ]
            },
            {
                "questionId": "ImageHostingScalability",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingScalability}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingScalability.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the security of the system.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations.",
                    "This view highlights the scalability of storage.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations, and of storage."
                ]
            },
            {
                "questionId": "SharedUnderstanding",
                "content": "\n\tIn his article \\emph{Who Needs an Architect?} Martin Fowler refers to the following architecture definition\n\t\t\n\t\\begin{quote}\n\t\t\\emph{the expert developers working on that project have a shared understanding of the system design}\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "This shared understanding can be represented by a set of architectural views.",
                    "This shared understanding includes the architecturally significant requirements.",
                    "The system algorithms should be part of the shared understanding.",
                    "The shared understanding describes the system from a high-level perspective."
                ]
            },
            {
                "questionId": "InteroperabilityStimulus",
                "content": "\n\tIn a scenario for interoperability\n\n    ",
                "image": [],
                "options": [
                    "The exchange of information is the stimulus.",
                    "The request to adapt an interface is the stimulus.",
                    "The design of a reusable interface is the stimulus.",
                    "The data input to the system is the stimulus."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-13A.tex",
        "quizTitle": "..-data-2015-test-1-test-13A",
        "questions": [
            {
                "questionId": "Diplomat",
                "content": "\n\tVery often, when a software architecture is being designed, conflicting requirements are identified, like between security and availability. The role of the software architect is to\n\t\t\n    ",
                "image": [],
                "options": [
                    "Design an architectural solution together with the stakeholders to be sure that everybody agrees on the resolution of conflits.",
                    "Solve the conflicts between requirements by deciding on the best trad-offs the system should support.",
                    "Facilitate the communication among the stakeholders such that they can decide on what are the architecturally significant requirements.",
                    "Design an architecture that supports all the conflicting requirements and present it to the stakeholders."
                ]
            },
            {
                "questionId": "ASDefinition",
                "content": "\n\tThe definition of software architecture, on the course book, is\n\t\\begin{quote}\n\t\t\\emph{The software architecture of a system is the set of structures needed to reason about the system, which comprise software elements, relations among them, and properties of both.}\n\t\\end{quote}\n\t\n\tAccording to this definition\n\n    ",
                "image": [],
                "options": [
                    "The set of structures is needed to support different levels of performance for the system.",
                    "To reason about a system is to verify whether the architecturally significant requirements are considered by the architecture.",
                    "The hardware is an example of a software element.",
                    "There isn't any relation between the properties of the software elements and the ability to reason about the system."
                ]
            },
            {
                "questionId": "ImageHostingReads",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingReads}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingReads.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the availability of the \\texttt{Image File Storage}.",
                    "This view highlights the performance of the \\texttt{download} operations.",
                    "This view highlights the performance of \\texttt{upload} operations.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations."
                ]
            },
            {
                "questionId": "RequirementsImpact",
                "content": "\n\tThe requirements impact on how an architecture is designed\n\n    ",
                "image": [],
                "options": [
                    "However, functional requirements do not have any impact on the architecture because the systemic qualities of an architecture are non-functional.",
                    "The functional requirements have a large impact on the definition of views of the component-and-connector viewtype because each component executes a functionality.",
                    "The functional requirements have a large impact on the definition of views of the module viewtype because they are used to define the high cohesion and low coupling of modules.",
                    "The functional requirements can be considered as constraints on the software architecture design."
                ]
            },
            {
                "questionId": "RestartInRedundancy",
                "content": "\n\tConsidering the availability architectural quality and the tactics of active redundancy, passive redundancy, and spare\n\n    ",
                "image": [],
                "options": [
                    "Active redundancy can be used together with a voting tactic to detect and recover from faults.",
                    "These tactics are used to prevent the occurence of a fault.",
                    "Spare guarantees immediate recover.",
                    "Passive redundancy does not work with non-deterministic behavior of request's execution."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-1/test-13B.tex",
        "quizTitle": "..-data-2015-test-1-test-13B",
        "questions": [
            {
                "questionId": "ImageHostingReads",
                "content": "\n\tConsider the following informal view of an Image Hosting System\n\t\n\\begin{center}\n\t\\includegraphics[width=100mm]{ImageHostingReads}\n\\end{center}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-1/ImageHostingReads.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view highlights the availability of the \\texttt{Image File Storage}.",
                    "This view highlights the performance of the \\texttt{download} operations.",
                    "This view highlights the performance of \\texttt{upload} operations.",
                    "This view highlights the scalability of \\texttt{upload} and \\texttt{dowload} operations."
                ]
            },
            {
                "questionId": "RequirementsImpact",
                "content": "\n\tThe requirements impact on how an architecture is designed\n\n    ",
                "image": [],
                "options": [
                    "However, functional requirements do not have any impact on the architecture because the systemic qualities of an architecture are non-functional.",
                    "The functional requirements have a large impact on the definition of views of the component-and-connector viewtype because each component executes a functionality.",
                    "The functional requirements have a large impact on the definition of views of the module viewtype because they are used to define the high cohesion and low coupling of modules.",
                    "The functional requirements can be considered as constraints on the software architecture design."
                ]
            },
            {
                "questionId": "Diplomat",
                "content": "\n\tVery often, when a software architecture is being designed, conflicting requirements are identified, like between security and availability. The role of the software architect is to\n\t\t\n    ",
                "image": [],
                "options": [
                    "Design an architectural solution together with the stakeholders to be sure that everybody agrees on the resolution of conflits.",
                    "Solve the conflicts between requirements by deciding on the best trad-offs the system should support.",
                    "Facilitate the communication among the stakeholders such that they can decide on what are the architecturally significant requirements.",
                    "Design an architecture that supports all the conflicting requirements and present it to the stakeholders."
                ]
            },
            {
                "questionId": "ASDefinition",
                "content": "\n\tThe definition of software architecture, on the course book, is\n\t\\begin{quote}\n\t\t\\emph{The software architecture of a system is the set of structures needed to reason about the system, which comprise software elements, relations among them, and properties of both.}\n\t\\end{quote}\n\t\n\tAccording to this definition\n\n    ",
                "image": [],
                "options": [
                    "The set of structures is needed to support different levels of performance for the system.",
                    "To reason about a system is to verify whether the architecturally significant requirements are considered by the architecture.",
                    "The hardware is an example of a software element.",
                    "There isn't any relation between the properties of the software elements and the ability to reason about the system."
                ]
            },
            {
                "questionId": "RestartInRedundancy",
                "content": "\n\tConsidering the availability architectural quality and the tactics of active redundancy, passive redundancy, and spare\n\n    ",
                "image": [],
                "options": [
                    "Active redundancy can be used together with a voting tactic to detect and recover from faults.",
                    "These tactics are used to prevent the occurence of a fault.",
                    "Spare guarantees immediate recover.",
                    "Passive redundancy does not work with non-deterministic behavior of request's execution."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-21A.tex",
        "quizTitle": "..-data-2015-test-2-test-21A",
        "questions": [
            {
                "questionId": "PerformanceOne",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Bound execution time."
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that does not have to change when any of the original modules are changed.",
                    "Increases the cohesion between the two modules.",
                    "Cannot be used together with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "BusinessToDesignOne",
                "content": "\n\tThe Attribute-Driven Design method is characterized by \n\t\t\n    ",
                "image": [],
                "options": [
                    "In each iteration one or more architecturally significant requirements are used to decompose a software element of the system design.",
                    "The architect cannot backtrack the decomposition decisions she made.",
                    "During the design process the number of architecturally significant requirements cannot change.",
                    "Contraints cannot be used as requirements for the decomposition process."
                ]
            },
            {
                "questionId": "GraphiteOne",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tThe Graphite webapp allows users to request custom graphs with a simple URL-based API. Graphing parameters are specified in the query-string of an HTTP GET request, and a PNG image is returned in response. \n\t\\end{quote}\n\t\t\n    ",
                "image": [],
                "options": [
                    "It describes a performance scenario where the stimulus is the request of a custom graph.",
                    "The scenario is supported by a manage sampling rate tactic because several requests to the same graph return the same result.",
                    "It describes a usability scenario where the source of stimulus is a non-technical user.",
                    "A support user initiative tactic based on the definition of a language is used to achieve this scenario."
                ]
            },
            {
                "questionId": "NginxOne",
                "content": "\n\tConsider the following fragment in the description of the nginx case study.\n\t\n\t\\begin{quote}\n\t\tnginx's configuration system was inspired by Igor Sysoev's experiences with Apache. His main insight was that a scalable configuration system is essential for a web server. The main scaling problem was encountered when maintaining large complicated configurations with lots of virtual servers, directories, locations and datasets. In a relatively big web setup it can be a nightmare if not done properly both at the application level and by the system engineer himself.\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It describes an availability scenario because the configuration allows to define redundant virtual servers.",
                    "It describes a scalability scenario because it is possible to increment the size of the configuration at a linear cost.",
                    "It describes a usability scenario where the stimulus is reduce the number of errors when configuring the system.",
                    "It describes a modifiability scenario because of the cost associated with maintaining the configuration."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-21B.tex",
        "quizTitle": "..-data-2015-test-2-test-21B",
        "questions": [
            {
                "questionId": "NginxOne",
                "content": "\n\tConsider the following fragment in the description of the nginx case study.\n\t\n\t\\begin{quote}\n\t\tnginx's configuration system was inspired by Igor Sysoev's experiences with Apache. His main insight was that a scalable configuration system is essential for a web server. The main scaling problem was encountered when maintaining large complicated configurations with lots of virtual servers, directories, locations and datasets. In a relatively big web setup it can be a nightmare if not done properly both at the application level and by the system engineer himself.\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It describes an availability scenario because the configuration allows to define redundant virtual servers.",
                    "It describes a scalability scenario because it is possible to increment the size of the configuration at a linear cost.",
                    "It describes a usability scenario where the stimulus is reduce the number of errors when configuring the system.",
                    "It describes a modifiability scenario because of the cost associated with maintaining the configuration."
                ]
            },
            {
                "questionId": "BusinessToDesignOne",
                "content": "\n\tThe Attribute-Driven Design method is characterized by \n\t\t\n    ",
                "image": [],
                "options": [
                    "In each iteration one or more architecturally significant requirements are used to decompose a software element of the system design.",
                    "The architect cannot backtrack the decomposition decisions she made.",
                    "During the design process the number of architecturally significant requirements cannot change.",
                    "Contraints cannot be used as requirements for the decomposition process."
                ]
            },
            {
                "questionId": "PerformanceOne",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Bound execution time."
                ]
            },
            {
                "questionId": "GraphiteOne",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tThe Graphite webapp allows users to request custom graphs with a simple URL-based API. Graphing parameters are specified in the query-string of an HTTP GET request, and a PNG image is returned in response. \n\t\\end{quote}\n\t\t\n    ",
                "image": [],
                "options": [
                    "It describes a performance scenario where the stimulus is the request of a custom graph.",
                    "The scenario is supported by a manage sampling rate tactic because several requests to the same graph return the same result.",
                    "It describes a usability scenario where the source of stimulus is a non-technical user.",
                    "A support user initiative tactic based on the definition of a language is used to achieve this scenario."
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that does not have to change when any of the original modules are changed.",
                    "Increases the cohesion between the two modules.",
                    "Cannot be used together with the Reduce Overhead performance tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-22A.tex",
        "quizTitle": "..-data-2015-test-2-test-22A",
        "questions": [
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tThe two basic contributors for the response time are the processing time and the blocking time. Which tactic for performance may reduce the blocking time\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator simultaneously launches several instances of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario because the stimulus is an input, \\emph{launches several instances of the system}.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "BusinessToDesignTwo",
                "content": "\n\tArchitecturally significant requirements (ASR) are captured in a utility tree where each one of the ASRs are classified in terms of its architectural impact and business value.\n\t\t\n    ",
                "image": [],
                "options": [
                    "Only the scenarios that have high architectural impact and high business value should appear in the tree.",
                    "A scenario for a power outage should have a low business value because the fault is temporary.",
                    "A scenario for a 24 hours x 7 days availability of the system should appear as a leaf of the utility tree.",
                    "The utility tree covers all the significant qualities the system has to address."
                ]
            },
            {
                "questionId": "GraphiteTwo",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tTo avoid this kind of catastrophe, I added several features to carbon including configurable limits on how many data points can be queued and rate-limits on how quickly various whisper operations can be performed. These features can protect carbon from spiraling out of control and instead impose less harsh effects like dropping some data points or refusing to accept more data points. However, proper values for those settings are system-specific and require a fair amount of testing to tune. They are useful but they do not fundamentally solve the problem. For that, we'll need more hardware.\n\t\\end{quote}\n\t\n\tThe performance tactics referred in the above description are:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Bound execution times, bound queue sizes, and increase resources.",
                    "Bound execution times, and increase resources.",
                    "Manage sampling rate, bound queue sizes, and increase resources.",
                    "Bound queue sizes, and increase resources."
                ]
            },
            {
                "questionId": "NginxTwo",
                "content": "\n\tIn the description of the nginx case study we can read:\n\t\n\t\\begin{quote}\n\t\tnginx is event-based, so it does not follow Apache's style of spawning new processes or threads for each web page request. The end result is that even as load increases, memory and CPU usage remain manageable. nginx can now deliver tens of thousands of concurrent connections on a server with typical hardware.\n\t\\end{quote}\n\t\n\tThe tactic nginx follows to achieve tens of thousands of concurrent connections is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Introduce concurrency.",
                    "Increase resources.",
                    "Schedule resources.",
                    "Maintain multiple copies of computation."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-22B.tex",
        "quizTitle": "..-data-2015-test-2-test-22B",
        "questions": [
            {
                "questionId": "NginxTwo",
                "content": "\n\tIn the description of the nginx case study we can read:\n\t\n\t\\begin{quote}\n\t\tnginx is event-based, so it does not follow Apache's style of spawning new processes or threads for each web page request. The end result is that even as load increases, memory and CPU usage remain manageable. nginx can now deliver tens of thousands of concurrent connections on a server with typical hardware.\n\t\\end{quote}\n\t\n\tThe tactic nginx follows to achieve tens of thousands of concurrent connections is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Introduce concurrency.",
                    "Increase resources.",
                    "Schedule resources.",
                    "Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator simultaneously launches several instances of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario because the stimulus is an input, \\emph{launches several instances of the system}.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "GraphiteTwo",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tTo avoid this kind of catastrophe, I added several features to carbon including configurable limits on how many data points can be queued and rate-limits on how quickly various whisper operations can be performed. These features can protect carbon from spiraling out of control and instead impose less harsh effects like dropping some data points or refusing to accept more data points. However, proper values for those settings are system-specific and require a fair amount of testing to tune. They are useful but they do not fundamentally solve the problem. For that, we'll need more hardware.\n\t\\end{quote}\n\t\n\tThe performance tactics referred in the above description are:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Bound execution times, bound queue sizes, and increase resources.",
                    "Bound execution times, and increase resources.",
                    "Manage sampling rate, bound queue sizes, and increase resources.",
                    "Bound queue sizes, and increase resources."
                ]
            },
            {
                "questionId": "BusinessToDesignTwo",
                "content": "\n\tArchitecturally significant requirements (ASR) are captured in a utility tree where each one of the ASRs are classified in terms of its architectural impact and business value.\n\t\t\n    ",
                "image": [],
                "options": [
                    "Only the scenarios that have high architectural impact and high business value should appear in the tree.",
                    "A scenario for a power outage should have a low business value because the fault is temporary.",
                    "A scenario for a 24 hours x 7 days availability of the system should appear as a leaf of the utility tree.",
                    "The utility tree covers all the significant qualities the system has to address."
                ]
            },
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tThe two basic contributors for the response time are the processing time and the blocking time. Which tactic for performance may reduce the blocking time\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate.",
                    "Limit event response.",
                    "Prioritize events.",
                    "Maintain multiple copies of computation."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-23A.tex",
        "quizTitle": "..-data-2015-test-2-test-23A",
        "questions": [
            {
                "questionId": "PerformanceThree",
                "content": "\n\tJeff Atwood wrote an article in its blog about performance of software systems that is entitled, \\emph{Hardware is Cheap, Programmers are Expensive}. Which performance tactic(s) is he suggesting\n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase resource efficiency.",
                    "Increase resources.",
                    "Increase resource efficiency and Increase resources.",
                    "Increase resources and Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "ModifiabilityThree",
                "content": "\n\tConsider the modifiability quality and the cost of change.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A low cost of change may imply a high cost of development.",
                    "A low cost of change implies a low cost of development, because changing the code is part of development.",
                    "There is no relation between the cost of change and the cost of development.",
                    "A high cost of change occurs if it is necessary to defer the binding of what needs to be changed."
                ]
            },
            {
                "questionId": "BusinessToDesignThree",
                "content": "\n\tIt was decided that the F\u00e9nix system should be based on open-source software.\n\t\t\n    ",
                "image": [],
                "options": [
                    "This decision does not have any impact on the architecture.",
                    "This decision corresponds to a constraint requirement.",
                    "This decision needs to be made concrete by an interoperability scenario.",
                    "This decision is not a consequence of the F\u00e9nix business case."
                ]
            },
            {
                "questionId": "GraphiteThree",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tImagine that you have 60,000 metrics that you send to your Graphite server, and each of these metrics has one data point per minute. Remember that each metric has its own whisper file on the filesystem. This means carbon must do one write operation to 60,000 different files each minute. As long as carbon can write to one file each millisecond, it should be able to keep up. This isn't too far fetched, but let's say you have 600,000 metrics updating each minute, or your metrics are updating every second, or perhaps you simply cannot afford fast enough storage. Whatever the case, assume the rate of incoming data points exceeds the rate of write operations that your storage can keep up with. How should this situation be handled?\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It describes a reliability scenario because the data points for each metric will be split between a buffer and disk.",
                    "It describes a performance scenario for the execution of reads.",
                    "The tactic used to solve the problem is based in the fact that data points are appended to the end of the metric file.",
                    "The tactic used to solve the problem is not manage sampling rate because there isn't any loss of data points."
                ]
            },
            {
                "questionId": "NginxThree",
                "content": "\n\tIn the description of the nginx case study we can read:\n\t\n\t\\begin{quote}\n\t\tnginx's modular architecture generally allows developers to extend the set of web server features without modifying the nginx core. nginx modules come in slightly different incarnations, namely core modules, event modules, phase handlers, protocols, variable handlers, filters, upstreams and load balancers. At this time, nginx doesn't support dynamically loaded modules; i.e., modules are compiled along with the core at build stage.\n\t\\end{quote}\n\t\n\tThe above sentence corresponds to\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "A security scenario because it allows the introduction of filters to encrypt the messages.",
                    "A availability scenario because it allows the introduction of load balancers.",
                    "A modifiability scenario where defer binding occurs at compile time.",
                    "A usability scenario because developers can extend the system without having to modify the nginx core."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-2/test-23B.tex",
        "quizTitle": "..-data-2015-test-2-test-23B",
        "questions": [
            {
                "questionId": "BusinessToDesignThree",
                "content": "\n\tIt was decided that the F\u00e9nix system should be based on open-source software.\n\t\t\n    ",
                "image": [],
                "options": [
                    "This decision does not have any impact on the architecture.",
                    "This decision corresponds to a constraint requirement.",
                    "This decision needs to be made concrete by an interoperability scenario.",
                    "This decision is not a consequence of the F\u00e9nix business case."
                ]
            },
            {
                "questionId": "GraphiteThree",
                "content": "\n\tConsider the following fragment in the description of the Graphite system:\n\t\n\t\\begin{quote}\n\t\tImagine that you have 60,000 metrics that you send to your Graphite server, and each of these metrics has one data point per minute. Remember that each metric has its own whisper file on the filesystem. This means carbon must do one write operation to 60,000 different files each minute. As long as carbon can write to one file each millisecond, it should be able to keep up. This isn't too far fetched, but let's say you have 600,000 metrics updating each minute, or your metrics are updating every second, or perhaps you simply cannot afford fast enough storage. Whatever the case, assume the rate of incoming data points exceeds the rate of write operations that your storage can keep up with. How should this situation be handled?\n\t\\end{quote}\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It describes a reliability scenario because the data points for each metric will be split between a buffer and disk.",
                    "It describes a performance scenario for the execution of reads.",
                    "The tactic used to solve the problem is based in the fact that data points are appended to the end of the metric file.",
                    "The tactic used to solve the problem is not manage sampling rate because there isn't any loss of data points."
                ]
            },
            {
                "questionId": "PerformanceThree",
                "content": "\n\tJeff Atwood wrote an article in its blog about performance of software systems that is entitled, \\emph{Hardware is Cheap, Programmers are Expensive}. Which performance tactic(s) is he suggesting\n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase resource efficiency.",
                    "Increase resources.",
                    "Increase resource efficiency and Increase resources.",
                    "Increase resources and Maintain multiple copies of computation."
                ]
            },
            {
                "questionId": "NginxThree",
                "content": "\n\tIn the description of the nginx case study we can read:\n\t\n\t\\begin{quote}\n\t\tnginx's modular architecture generally allows developers to extend the set of web server features without modifying the nginx core. nginx modules come in slightly different incarnations, namely core modules, event modules, phase handlers, protocols, variable handlers, filters, upstreams and load balancers. At this time, nginx doesn't support dynamically loaded modules; i.e., modules are compiled along with the core at build stage.\n\t\\end{quote}\n\t\n\tThe above sentence corresponds to\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "A security scenario because it allows the introduction of filters to encrypt the messages.",
                    "A availability scenario because it allows the introduction of load balancers.",
                    "A modifiability scenario where defer binding occurs at compile time.",
                    "A usability scenario because developers can extend the system without having to modify the nginx core."
                ]
            },
            {
                "questionId": "ModifiabilityThree",
                "content": "\n\tConsider the modifiability quality and the cost of change.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A low cost of change may imply a high cost of development.",
                    "A low cost of change implies a low cost of development, because changing the code is part of development.",
                    "There is no relation between the cost of change and the cost of development.",
                    "A high cost of change occurs if it is necessary to defer the binding of what needs to be changed."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-31A.tex",
        "quizTitle": "..-data-2015-test-3-test-31A",
        "questions": [
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Incremental development is a criteria that drives the design of views of this type.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "ContinuousIntegrationOne",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tThe space of architectures for continuous integration systems seems to be dominated by two extremes: master/slave architectures, in which a central server directs and controls remote builds; and reporting architectures, in which a central server aggregates build reports contributed by clients. All of the continuous integration systems of which we are aware have chosen some combination of features from these two architectures.\n\t\\end{quote}\n\t\n\tThe tactic that is referred in both architectures is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Passive redundancy.",
                    "Active redundancy.",
                    "Voting.",
                    "Maintain multiples copies of computation."
                ]
            },
            {
                "questionId": "InfinispanOne",
                "content": "\n\tThe Infinispan system can be used as a library, in which case it is embedded into a Java application, or as a server, in which case it is a remote data grid.\n\t\t\n    ",
                "image": [],
                "options": [
                    "The library approach allows non-java applications.",
                    "The server approach can scale independently of the number of applications.",
                    "The server approach implements a local cache.",
                    "The library approach does not build a cluster."
                ]
            },
            {
                "questionId": "ComponentAndConnectorOne",
                "content": "\n\tConsider the Component-and-Connector viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "A component cannot be decomposed into a set of components and connectors.",
                    "A connector cannot be decomposed into a set of components and connectors.",
                    "A connector embodies a communication protocol.",
                    "A component can only have a single type of port."
                ]
            },
            {
                "questionId": "CCStyleOne",
                "content": "\n\tWhen describing their system people refer to a part of it as containing a database server. Applying the component-and-connector styles learned in the course we can say that this system uses\n\n    ",
                "image": [],
                "options": [
                    "A client-server style.",
                    "A shared-data style.",
                    "Both, client-server and shared-data styles.",
                    "A blackboard style."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-31B.tex",
        "quizTitle": "..-data-2015-test-3-test-31B",
        "questions": [
            {
                "questionId": "CCStyleOne",
                "content": "\n\tWhen describing their system people refer to a part of it as containing a database server. Applying the component-and-connector styles learned in the course we can say that this system uses\n\n    ",
                "image": [],
                "options": [
                    "A client-server style.",
                    "A shared-data style.",
                    "Both, client-server and shared-data styles.",
                    "A blackboard style."
                ]
            },
            {
                "questionId": "ContinuousIntegrationOne",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tThe space of architectures for continuous integration systems seems to be dominated by two extremes: master/slave architectures, in which a central server directs and controls remote builds; and reporting architectures, in which a central server aggregates build reports contributed by clients. All of the continuous integration systems of which we are aware have chosen some combination of features from these two architectures.\n\t\\end{quote}\n\t\n\tThe tactic that is referred in both architectures is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Passive redundancy.",
                    "Active redundancy.",
                    "Voting.",
                    "Maintain multiples copies of computation."
                ]
            },
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Incremental development is a criteria that drives the design of views of this type.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "InfinispanOne",
                "content": "\n\tThe Infinispan system can be used as a library, in which case it is embedded into a Java application, or as a server, in which case it is a remote data grid.\n\t\t\n    ",
                "image": [],
                "options": [
                    "The library approach allows non-java applications.",
                    "The server approach can scale independently of the number of applications.",
                    "The server approach implements a local cache.",
                    "The library approach does not build a cluster."
                ]
            },
            {
                "questionId": "ComponentAndConnectorOne",
                "content": "\n\tConsider the Component-and-Connector viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "A component cannot be decomposed into a set of components and connectors.",
                    "A connector cannot be decomposed into a set of components and connectors.",
                    "A connector embodies a communication protocol.",
                    "A component can only have a single type of port."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-32A.tex",
        "quizTitle": "..-data-2015-test-3-test-32A",
        "questions": [
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "ContinuousIntegrationTwo",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tExternal resource coordination: Integration tests may depend on non-local resources such as a staging database or a remote web service. The CI system may therefore need to coordinate builds between multiple machines to organize access to these resources.\n\t\\end{quote}\n\t\n\tThe referred tactic is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Introduce concurrency.",
                    "Tailor interface.",
                    "Increase resources."
                ]
            },
            {
                "questionId": "InfinispanTwo",
                "content": "\n\tIn the Infinispan case study can be read\n\t\n\t\\begin{quote}\n\t\tThis allows applications to theoretically address an unlimited amount of in-memory storage as nodes are added to the cluster, increasing overall capacity.\n\t\\end{quote}\n\t\n\tThe quality that is referred is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability.",
                    "Performance.",
                    "Scalability."
                ]
            },
            {
                "questionId": "ComponentAndConnectorTwo",
                "content": "\n\tConsider the Component-and-Connector viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "A component is an instance and a view can have several instances of the same component type.",
                    "A component type is made of a single architectural style.",
                    "Only components can be associated with application-specific types.",
                    "A component-and-connector view can only use a single architectural style."
                ]
            },
            {
                "questionId": "CCStyleTwo",
                "content": "\n\tConsider the peer-to-peer architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "All the peers are equal.",
                    "Any peer can access any other peer.",
                    "Peers are only used to share files.",
                    "The interaction between peers is symmetric."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-32B.tex",
        "quizTitle": "..-data-2015-test-3-test-32B",
        "questions": [
            {
                "questionId": "ComponentAndConnectorTwo",
                "content": "\n\tConsider the Component-and-Connector viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "A component is an instance and a view can have several instances of the same component type.",
                    "A component type is made of a single architectural style.",
                    "Only components can be associated with application-specific types.",
                    "A component-and-connector view can only use a single architectural style."
                ]
            },
            {
                "questionId": "CCStyleTwo",
                "content": "\n\tConsider the peer-to-peer architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "All the peers are equal.",
                    "Any peer can access any other peer.",
                    "Peers are only used to share files.",
                    "The interaction between peers is symmetric."
                ]
            },
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "ContinuousIntegrationTwo",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tExternal resource coordination: Integration tests may depend on non-local resources such as a staging database or a remote web service. The CI system may therefore need to coordinate builds between multiple machines to organize access to these resources.\n\t\\end{quote}\n\t\n\tThe referred tactic is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Schedule resources.",
                    "Introduce concurrency.",
                    "Tailor interface.",
                    "Increase resources."
                ]
            },
            {
                "questionId": "InfinispanTwo",
                "content": "\n\tIn the Infinispan case study can be read\n\t\n\t\\begin{quote}\n\t\tThis allows applications to theoretically address an unlimited amount of in-memory storage as nodes are added to the cluster, increasing overall capacity.\n\t\\end{quote}\n\t\n\tThe quality that is referred is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability.",
                    "Performance.",
                    "Scalability."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-33A.tex",
        "quizTitle": "..-data-2015-test-3-test-33A",
        "questions": [
            {
                "questionId": "ModuleViewtypeThree",
                "content": "\n\tConsider the Layered architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "The modules inside a layer cannot use other modules in the same layer.",
                    "A layer cannot call the layer above.",
                    "Each layer defines a virtual machine because it provides a set of cohesive functionalities to the upper layer.",
                    "It is possible to have a circular allowed-to-use relationship between several layers."
                ]
            },
            {
                "questionId": "ContinuousIntegrationThree",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tIt takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools.\n\t\\end{quote}\n\t\n\tThe referred quality is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Interoperability.",
                    "Usability.",
                    "Performance.",
                    "Modifiability."
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tIn the Infinispan case study can be read\n\t\n\t\\begin{quote}\n\t\tBefore putting data on the network, application objects need to be serialized into bytes so that they can be pushed across a network, into the grid, and then again between peers. The bytes then need to be de-serialized back into application objects, when read by the application. In most common configurations, about 20\\% of the time spent in processing a request is spent in serialization and de-serialization.\n\t\\end{quote}\n\t\n\tThe above description can motivate a scenario for\n\t\t\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Modifiability.",
                    "Reliability."
                ]
            },
            {
                "questionId": "ComponentAndConnectorThree",
                "content": "\n\tConsider the two following views\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{pipes-and-filters}\n\t\\end{center}\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-3/pipes-and-filters.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The Merge component executes the module merge.",
                    "The Merge component executes the modules merge and stdio.",
                    "The module main is executed in the Merge component.",
                    "The Pipe connectors do not execute any module."
                ]
            },
            {
                "questionId": "CCStyleThree",
                "content": "\n\tConsider the shared-data style. Which of the following qualities does it support?\n\n    ",
                "image": [],
                "options": [
                    "Modifiability, because the Data Accessors do not depend on the data model.",
                    "Scalability of read requests, because it is easy add more repositories to where reads are distributed, though there may be some level of inconsistency.",
                    "Scalability of write requests, because a transactional system will synchronize the writes among the several repositories.",
                    "Confidentially of data, because it can be replicated in several repositories."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-3/test-33B.tex",
        "quizTitle": "..-data-2015-test-3-test-33B",
        "questions": [
            {
                "questionId": "ComponentAndConnectorThree",
                "content": "\n\tConsider the two following views\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{pipes-and-filters}\n\t\\end{center}\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-3/pipes-and-filters.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The Merge component executes the module merge.",
                    "The Merge component executes the modules merge and stdio.",
                    "The module main is executed in the Merge component.",
                    "The Pipe connectors do not execute any module."
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tIn the Infinispan case study can be read\n\t\n\t\\begin{quote}\n\t\tBefore putting data on the network, application objects need to be serialized into bytes so that they can be pushed across a network, into the grid, and then again between peers. The bytes then need to be de-serialized back into application objects, when read by the application. In most common configurations, about 20\\% of the time spent in processing a request is spent in serialization and de-serialization.\n\t\\end{quote}\n\t\n\tThe above description can motivate a scenario for\n\t\t\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Availability.",
                    "Modifiability.",
                    "Reliability."
                ]
            },
            {
                "questionId": "CCStyleThree",
                "content": "\n\tConsider the shared-data style. Which of the following qualities does it support?\n\n    ",
                "image": [],
                "options": [
                    "Modifiability, because the Data Accessors do not depend on the data model.",
                    "Scalability of read requests, because it is easy add more repositories to where reads are distributed, though there may be some level of inconsistency.",
                    "Scalability of write requests, because a transactional system will synchronize the writes among the several repositories.",
                    "Confidentially of data, because it can be replicated in several repositories."
                ]
            },
            {
                "questionId": "ContinuousIntegrationThree",
                "content": "\n\tIn the Continuous Integration case study can be read\n\t\n\t\\begin{quote}\n\t\tIt takes advantage of the JUnit XML standard for unit test and code coverage reporting to integrate reports from a variety of test tools.\n\t\\end{quote}\n\t\n\tThe referred quality is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Interoperability.",
                    "Usability.",
                    "Performance.",
                    "Modifiability."
                ]
            },
            {
                "questionId": "ModuleViewtypeThree",
                "content": "\n\tConsider the Layered architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "The modules inside a layer cannot use other modules in the same layer.",
                    "A layer cannot call the layer above.",
                    "Each layer defines a virtual machine because it provides a set of cohesive functionalities to the upper layer.",
                    "It is possible to have a circular allowed-to-use relationship between several layers."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-41A.tex",
        "quizTitle": "..-data-2015-test-4-test-41A",
        "questions": [
            {
                "questionId": "ComponentAndConnectorOne",
                "content": "\n\tConsider the Service-Oriented Architecture architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "The main quality this style addresses is interoperability.",
                    "It cannot be applied when the system includes legacy systems.",
                    "Its enterprise service bus cannot support asynchronous communication between the components.",
                    "The typical communication pattern is point-to-point."
                ]
            },
            {
                "questionId": "AllocationOne",
                "content": "\n\tConsider the work assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "InfinispanOne",
                "content": "\n\tConsider the Infinispan system when it is configured as a remote data grid. The relation between the Applications and the Grid is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Client-server.",
                    "Peer-to-peer.",
                    "Master-slave.",
                    "Pipe-and-filter."
                ]
            },
            {
                "questionId": "MicroAndAmazonOne",
                "content": "\n\tConsider the following distinction between Monoliths and Microservices made by Matin Fowler\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{MonolithsVsMicroservices}\n\t\\end{center}\n\t\n\tIf we try to map this figure into a set of views we will need.\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/MonolithsVsMicroservices.png",
                        "width": 100
                    }
                ],
                "options": [
                    "A decomposition view.",
                    "A view of the component-and-connector viewtype.",
                    "A view of the component-and-connector viewtype and a deployment view.",
                    "A decomposition view, a view of the component-and-connector viewtype and a deployment view."
                ]
            },
            {
                "questionId": "JenkinsOne",
                "content": "\n\tConsider the following representation of the Buildbot system.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{BuildbotArchitecture}\n\t\\end{center}\n\t\n\tThe architecture style between the Buildbot Master and the Clients is:\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/BuildbotArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Peer-to-peer.",
                    "Shared-data where the Buildbot is the data accessor.",
                    "Client-server where the Buildbot is the client.",
                    "Client-server where the Buildbot is the server."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-41B.tex",
        "quizTitle": "..-data-2015-test-4-test-41B",
        "questions": [
            {
                "questionId": "MicroAndAmazonOne",
                "content": "\n\tConsider the following distinction between Monoliths and Microservices made by Matin Fowler\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{MonolithsVsMicroservices}\n\t\\end{center}\n\t\n\tIf we try to map this figure into a set of views we will need.\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/MonolithsVsMicroservices.png",
                        "width": 100
                    }
                ],
                "options": [
                    "A decomposition view.",
                    "A view of the component-and-connector viewtype.",
                    "A view of the component-and-connector viewtype and a deployment view.",
                    "A decomposition view, a view of the component-and-connector viewtype and a deployment view."
                ]
            },
            {
                "questionId": "AllocationOne",
                "content": "\n\tConsider the work assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "InfinispanOne",
                "content": "\n\tConsider the Infinispan system when it is configured as a remote data grid. The relation between the Applications and the Grid is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Client-server.",
                    "Peer-to-peer.",
                    "Master-slave.",
                    "Pipe-and-filter."
                ]
            },
            {
                "questionId": "JenkinsOne",
                "content": "\n\tConsider the following representation of the Buildbot system.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{BuildbotArchitecture}\n\t\\end{center}\n\t\n\tThe architecture style between the Buildbot Master and the Clients is:\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/BuildbotArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Peer-to-peer.",
                    "Shared-data where the Buildbot is the data accessor.",
                    "Client-server where the Buildbot is the client.",
                    "Client-server where the Buildbot is the server."
                ]
            },
            {
                "questionId": "ComponentAndConnectorOne",
                "content": "\n\tConsider the Service-Oriented Architecture architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "The main quality this style addresses is interoperability.",
                    "It cannot be applied when the system includes legacy systems.",
                    "Its enterprise service bus cannot support asynchronous communication between the components.",
                    "The typical communication pattern is point-to-point."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-42A.tex",
        "quizTitle": "..-data-2015-test-4-test-42A",
        "questions": [
            {
                "questionId": "ComponentAndConnectorThree",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{AdventureBuilder-Tiers}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AdventureBuilder-Tiers.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Tiers.",
                    "Tiers, and Shared-data.",
                    "Tiers, Shared-data, and Service-oriented architecture.",
                    "Tiers, Shared-data, Service-oriented architecture, and Client-server."
                ]
            },
            {
                "questionId": "InfinispanTwo",
                "content": "\n\tIn the description of Infinispan system can be read\n\t\n\t\\begin{quote}\n\t\tInfinispan supports several pluggable cache stores-adapters that can be used to persist data to disk or any form of secondary storage. The current default implementation is a simplistic hash bucket and linked list implementation, where each hash bucket is represented by a file on the filesystem. While easy to use and configure, this isn't the best-performing implementation.\n\t\\end{quote}\n\t\n\tThe architectural style(s) that should be used to illustrate the sentence is (are)\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition.",
                    "Generalization.",
                    "Decomposition and Generalization.",
                    "Peer-to-peer."
                ]
            },
            {
                "questionId": "AllocationTwo",
                "content": "\n\tConsider the deployment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns modules to the hardware.",
                    "It cannot assign software elements to virtual servers because they are not hardware.",
                    "For each set of software elements there is a single possible assignment to hardwre.",
                    "It is useful for system administrators."
                ]
            },
            {
                "questionId": "MicroAndAmazonTwo",
                "content": "\n\tConsider the following representation of Amazon's architecture (sorry for the figure's layout: \\textbf{save trees})\n\t\t\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{AmazonArchitecture}\n\t\\end{center}\n\t\n\tWhat is the most relevant architecture style that is used in this figure?\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AmazonArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Client-server to represent performance.",
                    "Tiers to represent scalability.",
                    "Service-oriented architecture to represent interoperability.",
                    "Shared-data to represent modifiability."
                ]
            },
            {
                "questionId": "JenkinsTwo",
                "content": "\n\tIn the Continuous Integration case can be read\n\t\\begin{quote}\n\t\tBuild notification: The outcomes of builds generally need to be communicated to interested clients, either via pull (Web, RSS, RPC, etc.) or push notification (e-mail, Twitter, etc.) This can include notification of all builds, or only failed builds, or builds that haven't been executed within a certain period.\n\t\\end{quote}\n\t\tThe architectural style used in push notifications is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Publish-subscribe.",
                    "Client-server.",
                    "Shared-date.",
                    "Generalization."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-42B.tex",
        "quizTitle": "..-data-2015-test-4-test-42B",
        "questions": [
            {
                "questionId": "InfinispanTwo",
                "content": "\n\tIn the description of Infinispan system can be read\n\t\n\t\\begin{quote}\n\t\tInfinispan supports several pluggable cache stores-adapters that can be used to persist data to disk or any form of secondary storage. The current default implementation is a simplistic hash bucket and linked list implementation, where each hash bucket is represented by a file on the filesystem. While easy to use and configure, this isn't the best-performing implementation.\n\t\\end{quote}\n\t\n\tThe architectural style(s) that should be used to illustrate the sentence is (are)\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition.",
                    "Generalization.",
                    "Decomposition and Generalization.",
                    "Peer-to-peer."
                ]
            },
            {
                "questionId": "ComponentAndConnectorThree",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{AdventureBuilder-Tiers}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AdventureBuilder-Tiers.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Tiers.",
                    "Tiers, and Shared-data.",
                    "Tiers, Shared-data, and Service-oriented architecture.",
                    "Tiers, Shared-data, Service-oriented architecture, and Client-server."
                ]
            },
            {
                "questionId": "AllocationTwo",
                "content": "\n\tConsider the deployment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns modules to the hardware.",
                    "It cannot assign software elements to virtual servers because they are not hardware.",
                    "For each set of software elements there is a single possible assignment to hardwre.",
                    "It is useful for system administrators."
                ]
            },
            {
                "questionId": "JenkinsTwo",
                "content": "\n\tIn the Continuous Integration case can be read\n\t\\begin{quote}\n\t\tBuild notification: The outcomes of builds generally need to be communicated to interested clients, either via pull (Web, RSS, RPC, etc.) or push notification (e-mail, Twitter, etc.) This can include notification of all builds, or only failed builds, or builds that haven't been executed within a certain period.\n\t\\end{quote}\n\t\tThe architectural style used in push notifications is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Publish-subscribe.",
                    "Client-server.",
                    "Shared-date.",
                    "Generalization."
                ]
            },
            {
                "questionId": "MicroAndAmazonTwo",
                "content": "\n\tConsider the following representation of Amazon's architecture (sorry for the figure's layout: \\textbf{save trees})\n\t\t\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{AmazonArchitecture}\n\t\\end{center}\n\t\n\tWhat is the most relevant architecture style that is used in this figure?\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AmazonArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Client-server to represent performance.",
                    "Tiers to represent scalability.",
                    "Service-oriented architecture to represent interoperability.",
                    "Shared-data to represent modifiability."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-43A.tex",
        "quizTitle": "..-data-2015-test-4-test-43A",
        "questions": [
            {
                "questionId": "ComponentAndConnectorTwo",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{AdventureBuilder-SOA}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AdventureBuilder-SOA.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server.",
                    "Service-oriented architecture, and Shared-data.",
                    "Service-oriented architecture, Shared-data, and Peer-to-peer.",
                    "Service-oriented architecture, Shared-data, Peer-to-peer, and Client-server."
                ]
            },
            {
                "questionId": "AllocationThree",
                "content": "\n\tConsider the install architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The development team is the main stakeholder interesting in these views.",
                    "It assigns modules to files.",
                    "It is completely independent of the deployment architectural style.",
                    "It helps on the configuration of systems."
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tIn the description of Infinispan system can be read\n\t\n\t\\begin{quote}\n\t\tWhen dealing with thread pools to process such asynchronous tasks, there is always a context switching overhead. That threads are not cheap resources is also noteworthy. Allocating appropriately sized and configured thread pools is important to any installation making use of any of the asynchronous features of Infinispan.\n\t\\end{quote}\n\t\n\tThe architectural style that should be used to illustrate the sentence is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Client-server.",
                    "Communicating processes.",
                    "Peer-to-peer.",
                    "Shared-data."
                ]
            },
            {
                "questionId": "MicroAndAmazonThree",
                "content": "\n\tIn the interview Werner Vogels from Amazon gives to Jim Gray, Werner Vogels says that\n\t\n\t\\begin{quote}\n\t\tThe stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. \n\t\\end{quote}\n\t\n\tWhich means that in the software architecture of Amazon's systems\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The data-shared architectural style is not applied because data is encapsulated inside services.",
                    "The sharing of data is done using a service-oriented architecture.",
                    "Modifiability is not a concern of their architecture.",
                    "The decouple of data formats does not support scalability because of the transactional properties."
                ]
            },
            {
                "questionId": "JenkinsThree",
                "content": "\n\tConsider the following representation of the CDash system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{DashArchitecture}\n\t\\end{center}\n\t\n\tThe architecture style between the Dashboard and the Clients is:\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/DashArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Peer-to-peer.",
                    "Shared-data where the Dashboard is the repository.",
                    "Client-server where the Dashboard is the client.",
                    "Client-server where the Dashboard is the server."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2015/test-4/test-43B.tex",
        "quizTitle": "..-data-2015-test-4-test-43B",
        "questions": [
            {
                "questionId": "MicroAndAmazonThree",
                "content": "\n\tIn the interview Werner Vogels from Amazon gives to Jim Gray, Werner Vogels says that\n\t\n\t\\begin{quote}\n\t\tThe stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. \n\t\\end{quote}\n\t\n\tWhich means that in the software architecture of Amazon's systems\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The data-shared architectural style is not applied because data is encapsulated inside services.",
                    "The sharing of data is done using a service-oriented architecture.",
                    "Modifiability is not a concern of their architecture.",
                    "The decouple of data formats does not support scalability because of the transactional properties."
                ]
            },
            {
                "questionId": "JenkinsThree",
                "content": "\n\tConsider the following representation of the CDash system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{DashArchitecture}\n\t\\end{center}\n\t\n\tThe architecture style between the Dashboard and the Clients is:\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/DashArchitecture.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Peer-to-peer.",
                    "Shared-data where the Dashboard is the repository.",
                    "Client-server where the Dashboard is the client.",
                    "Client-server where the Dashboard is the server."
                ]
            },
            {
                "questionId": "ComponentAndConnectorTwo",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=80mm]{AdventureBuilder-SOA}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2015/test-4/AdventureBuilder-SOA.png",
                        "width": 80
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server.",
                    "Service-oriented architecture, and Shared-data.",
                    "Service-oriented architecture, Shared-data, and Peer-to-peer.",
                    "Service-oriented architecture, Shared-data, Peer-to-peer, and Client-server."
                ]
            },
            {
                "questionId": "AllocationThree",
                "content": "\n\tConsider the install architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The development team is the main stakeholder interesting in these views.",
                    "It assigns modules to files.",
                    "It is completely independent of the deployment architectural style.",
                    "It helps on the configuration of systems."
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tIn the description of Infinispan system can be read\n\t\n\t\\begin{quote}\n\t\tWhen dealing with thread pools to process such asynchronous tasks, there is always a context switching overhead. That threads are not cheap resources is also noteworthy. Allocating appropriately sized and configured thread pools is important to any installation making use of any of the asynchronous features of Infinispan.\n\t\\end{quote}\n\t\n\tThe architectural style that should be used to illustrate the sentence is\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Client-server.",
                    "Communicating processes.",
                    "Peer-to-peer.",
                    "Shared-data."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/20170113Exam/exame-20170113-companion-A.tex",
        "quizTitle": "..-data-2016-20170113Exam-exame-20170113-companion-A",
        "questions": [
            {
                "questionId": "SoftwareArchitectureOne",
                "content": "\n  Consider that a software development team uses an agile methodology\n  such as XP (Extreme Programming), where no documentation is\n  produced.  Then, the systems developed by that team\n\n    ",
                "image": [],
                "options": [
                    "Typically have a software architecture that results\n    from the common knowledge about the system that is shared among\n    the team members",
                    "Do not have a software architecture, because in agile\n    methodologies there is no architectural design phase",
                    "Do not have a software architecture, because the practice of\n    refactoring allows changing every part of the system easily",
                    "May have a software architecture, but that architecture is\n    not known because it was neither designed nor documented"
                ]
            },
            {
                "questionId": "RequirementsImpact",
                "content": "\n\tThe requirements impact on how an architecture is designed\n\n    ",
                "image": [],
                "options": [
                    "However, functional requirements do not have any impact on the architecture because the systemic qualities of an architecture are non-functional",
                    "The functional requirements have a large impact on the definition of views of the component-and-connector viewtype because each component executes a functionality",
                    "The functional requirements have a large impact on the definition of views of the module viewtype because they are used to define the high cohesion and low coupling of modules",
                    "The functional requirements can be considered as constraints on the software architecture design"
                ]
            },
            {
                "questionId": "AvailabilityScenarioOne",
                "content": "\n\t  Consider the following scenario\n\t  \n\t  \\begin{quote}\n\t\t  If one of the application servers fails to respond when the system is in its normal operation state, the load balancer should redirect requests to another application server.\n\t  \\end{quote}\n\t  \n      ",
                "image": [],
                "options": [
                    "The stimulus is incorrect response",
                    "The artefact is the load balancer",
                    "The response is not correctly stated",
                    "The quality it addresses is interoperability"
                ]
            },
            {
                "questionId": "AvailabilityVotingEN",
                "content": "\n\t  The availability quality can be supported by a voting tactic in order to identify faults of\n\n      ",
                "image": [],
                "options": [
                    "Programming, if the components execute modules developed by different teams",
                    "Hardware, if there is hardware redundancy",
                    "Operating Systems, if redundant components execute on top of different operating systems",
                    "All the previous options"
                ]
            },
            {
                "questionId": "MWResourceLoaderTacticEEEN",
                "content": "\n\t  Consider the following fragment of the \\emph{MediaWiki} system description:\n\t  \\newline\n\t  \n\t  \\emph{To optimize the delivery of JavaScript and CSS assets, the ResourceLoader module was developed to optimize delivery of JS and CSS. Started in 2009, it was completed in 2011 and has been a core feature of MediaWiki since version 1.17. ResourceLoader works by loading JS and CSS assets on demand, thus reducing loading and parsing time when features are unused, for example by older browsers. It also minifies the code, groups resources to save requests, and can embed images as data URIs}\n\t  \\newline\n\t  \n\t  The \\emph{ResourceLoader} supports a quality\n    \n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Usability",
                    "Availability",
                    "Modifiability"
                ]
            },
            {
                "questionId": "PerfomanceTacticOne",
                "content": "\n   In which performance tactic it may occur that not all the inputs are processed\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Reduce overhead",
                    "Bound execution times"
                ]
            },
            {
                "questionId": "ScalabilityINGLES",
                "content": "\n    Several of the cases studied in this course had scalability\n    requirements.  That means that those systems should be designed in\n    such a way that they\n\n    ",
                "image": [],
                "options": [
                    "Have high throughput",
                    "Have low latency",
                    "Allow many simultaneous users",
                    "May be easily changed to increase their performance"
                ]
            },
            {
                "questionId": "LayersTactics",
                "content": "\n    The main tactic associated with the layered architectural style is:\n\n    ",
                "image": [],
                "options": [
                    "Split module",
                    "Encapsulate",
                    "Restrict dependencies",
                    "Defer binding"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDadosINGLES",
                "content": "\n    One of the key requirements for the HDFS system is that the data\n    stored in the system remains available, even in the presence of\n    various types of failures (non simultaneous) in the hardware in\n    which the system executes.  To show that the system satisfies this\n    requirement\n\n    ",
                "image": [],
                "options": [
                    "We must use various different views, both of the\n      component-and-connector and the allocation viewtypes",
                    "We just have to show, through component-and-connector\n      views, that the system maintains replicas of the data in\n      different components",
                    "We just have to show, through Deployment views,\n      that the \\emph{DataNode} component executes in more than one\n      machine of the cluster",
                    "We just have to show, through Decomposition views, that\n      there are modules responsible for the replication of file blocks"
                ]
            },
            {
                "questionId": "HadoopTacticasRecuperacaoFaltasINGLES",
                "content": "\n    In the HDFS system the fault recovery tactics are:\n\n    ",
                "image": [],
                "options": [
                    "Active replication and passive replication",
                    "Active replication, passive replication, and spare",
                    "Passive replication and spare",
                    "Quorum, active replication, and passive replication"
                ]
            },
            {
                "questionId": "SecondEEEN",
                "content": "\n  The documentation of the software architecture for a system is often\n  composed of several views, because\n\n  ",
                "image": [],
                "options": [
                    "Different stakeholders are interested in different views of the system",
                    "A single view would be too simplistic",
                    "The views describe different aspects of the system",
                    "All of the above"
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability",
                    "Usability",
                    "Security",
                    "Availability"
                ]
            },
            {
                "questionId": "MemcachedModulesINGLES",
                "content": "\n    Consider the following description of \\emph{Memcached}, which is\n    adapted from its Wiki:\n    \\begin{quote}\n      Memcached is an in-memory key-value store for small chunks of\n      arbitrary data from results of database calls, API calls, or\n      page rendering.  It is made up of:\n      \\begin{itemize}\n      \\item Client software, which is given a list of available memcached servers.\n      \\item A client-based hashing algorithm, which chooses a server\n        based on the \"key\" input.\n      \\item Server software, which stores your values with their keys\n        into an internal hash table.\n      \\item Server algorithms, which determine when to throw out old\n        data (if out of memory), or reuse memory.\n      \\end{itemize}\n    \\end{quote}\n    Suppose that you want to present an architectural view for\n    \\emph{Memcached} that represents the above information.  Which\n    view is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "A view of the Data Model style",
                    "A view of the Layers style",
                    "A view of the Decomposition style",
                    "A view of the Uses style"
                ]
            },
            {
                "questionId": "AspectsINGLES",
                "content": "\n    Using the Aspects architectural style promotes the modifiability\n    of a system because\n    \n    ",
                "image": [],
                "options": [
                    "It imposes restrictions on which uses relationships may\n      exist between the system's modules",
                    "It makes it easier to create generalization relationships\n      between the system's modules",
                    "It separates in new modules responsibilities that were\n      spread over various of the system's modules",
                    "It allows the decomposition of each of the system's\n      modules into finer grained modules"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelTwo",
                "content": "\n\t Suppose that you are implementing a module in a system that has a two layered architecture.\n\t Knowing that your module belongs to the upper layer (assuming the usual notation\n\t for the layer style), this means that you\n\t \n\t ",
                "image": [],
                "options": [
                    "Can use the operations defined in any of the system's modules",
                    "Can use the operations defined in the lower layer, but not the ones defined in\n\t \tthe upper layer",
                    "Can use the operations defined in the upper layer, but not the ones defined in\n\t \tthe lower layer",
                    "Should use some operation defined in the lower layer"
                ]
            },
            {
                "questionId": "AdventureBuilderThree",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system, designed around the Order Processing Center\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderCandC}\n\t\\end{center}\n\t\n\tThe views \\textbf{does not} use the architectural style\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/AdventureBuilderCandC.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Per-to-peer",
                    "Shared-data",
                    "Communicating processes",
                    "Publish-subscribe"
                ]
            },
            {
                "questionId": "AdventureBuilderFive",
                "content": "\n  \tConsider the following requirement for availability of the Adventure Builder system\n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site sent a purchase order request to the order processing center (OPC). The OPC processed that request but didn't reply to Consumer Web site within five seconds, so the Consumer Web site resends the request to the OPC.\n\t\\end{quote}\n\t\n\tIf we represent this requirement as a scenario\n\n   \t",
                "image": [],
                "options": [
                    "The stimulus is an omission and the tactic is retry",
                    "The stimulus is a crash and the tactic is retry",
                    "The stimulus is an incorrect timing and the tactic is ignore faulty behaviour",
                    "The stimulus is incorrect response and the tactic is voting"
                ]
            },
            {
                "questionId": "DVDCatalogMeta",
                "content": "\n\tConsider the module viewtype views of the DVD Catalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tThe application should support other kinds of catalogs (CDs, games, books, ...). \n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to support a new specific layer for the customization of the catalog",
                    "The layered view to accommodate a new layer for each kind of catalog, which other layers may use",
                    "The data model view in order to define entities for each kind of catalog",
                    "The data model view in order to define generic entities that can be customized for different kinds of catalogs"
                ]
            },
            {
                "questionId": "AvailabilityINGLES",
                "content": "\n    Suppose that, to satisfy an availability requirement related with\n    the occurrence of faults at the network infrastructure used by\n    your system, you want to use the tactic named \\emph{Ping/Echo}.\n    How does the use of that tactic manifests in the architectural\n    views of your system?\n\n    ",
                "image": [],
                "options": [
                    "Only in the Deployment view",
                    "Only in the Decomposition view",
                    "Only in a component-and-connector view",
                    "Both in a component-and-connector and the Deployment\n      views"
                ]
            },
            {
                "questionId": "PeerToPeerDynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used",
                    "When a peer receives a connection it sends all its files to the peer connecting it",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used"
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced",
                    "Which improves modifiability, because filters are decoupled through pipes",
                    "But the size of buffers may reduce the composition power",
                    "And filters do not have to agree on the data formats"
                ]
            },
            {
                "questionId": "SOAINGLES",
                "content": "\n    In the Service Oriented Architecture style it is common to have a\n    specialized component, named \\emph{Enterprise Service Bus} (ESB).\n    The goal of using of an ESB in a system is\n\n    ",
                "image": [],
                "options": [
                    "To facilitate the interaction among heterogeneous\n      components that use distinct communication protocols",
                    "To promote the use of a common communication protocol for\n      all the remaining components of the system",
                    "To increase the performance of the interaction between\n      the components of the system",
                    "To create a strong coupling between the various services\n      provided by the organization"
                ]
            },
            {
                "questionId": "WhiteBoxTestingINGLES",
                "content": "\n    Consider the following excerpt from the Wikipedia page on\n    \\emph{white-box testing}:\n    \\begin{quote}\n      White-box testing is a method of testing software that tests\n      internal structures or workings of an application, as opposed to\n      its functionality. In white-box testing an internal perspective\n      of the system (including the module's code), as well as\n      programming skills, are required and used to design test\n      cases. The tester chooses inputs to exercise paths through the\n      code and determine the appropriate outputs.\n    \\end{quote}\n  \n    Assuming that you belong to the team testing a complex system and\n    that you are responsible for performing white box tests on the\n    system, which of the following architectural views of the system\n    would be most useful to you?\n\n    ",
                "image": [],
                "options": [
                    "Work Assignment views",
                    "Generalization views",
                    "Deployment views",
                    "Implementation views"
                ]
            },
            {
                "questionId": "ArqChrome",
                "content": "\n\tThe Chromium is a web browser that introduced an innovative architecture. In the Chromium description we can read:\n \n  \\begin{quote}\n    We use separate processes for browser tabs to protect the overall\n    application from bugs and glitches in the rendering engine.  We\n    also restrict access from each rendering engine process to others\n    and to the rest of the system.  In some ways, this brings to web\n    browsing the benefits that memory protection and access control\n    brought to operating systems.\n\n    We refer to the main process that runs the UI and manages tab and\n    plugin processes as the \"browser process\" or \"browser.\"  Likewise,\n    the tab-specific processes are called \"render processes\" or\n    \"renderers.\"  The renderers use the WebKit open-source layout\n    engine for interpreting and laying out HTML.\n  \\end{quote}\n  \n  Which architectural style should we use to represent this aspect of Chromium?\n\n    ",
                "image": [],
                "options": [
                    "Communicating Processes",
                    "Client-Server",
                    "Peer-to-Peer",
                    "Uses"
                ]
            },
            {
                "questionId": "TwitterOne",
                "content": "\n\tConsider the following description of the behavior of Twitter ingestion mechanisms\n\t\n\t\\begin{quote}\n\t\tWrite. when a tweet  comes in there's an O(n) process to write to Redis clusters, where n is the number of people following you. Painful for Lady Gaga and Barack Obama where they are doing 10s of millions of inserts across the cluster. All the Redis clusters are backing disk, the Flock cluster stores the user timeline to disk, but usually timelines are found in RAM in the Redis cluster.\n\t\\end{quote}\n\t\n\t",
                "image": [],
                "options": [
                    "The quality being addressed is performance and the tactic multiple copies of data",
                    "The quality being addressed is performance and the tactic multiple copies of computation",
                    "The quality being addressed is performance and the tactics multiple copies of data and multiple copies of computation",
                    "The quality being addressed is availability and the tactic passive redundancy"
                ]
            },
            {
                "questionId": "TwitterThree",
                "content": "\n\tConsider the following description of the behavior of Twitter\n\t\n\t\\begin{quote}\n\t\tSolution is a write based fanout approach. Do a lot of processing when tweets arrive to figure out where tweets should go. This makes read time access fast and easy. Don't do any computation on reads. With all the work being performed on the write path ingest rates are slower than the read path, on the order of 4000 QPS.\n\t\\end{quote}\n\t\n\tTo describe the performance quality of this behavior, and considering that the number of reads is much higher than the number of writes, we need to have a view that includes\n\t\n\t",
                "image": [],
                "options": [
                    "Tiers style",
                    "Client-server style",
                    "Shared-data style",
                    "Pipe-and-filter style"
                ]
            },
            {
                "questionId": "MicroservicesOne",
                "content": "\n\tConsider the Microservice architectural style. Which of the following sentences \\textbf{does not} describe an advantage of microservices?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Each service can be developed and deployed independently",
                    "Easier to scale development",
                    "Eliminates any long-term commitment to a technology stack",
                    "Testing is easier"
                ]
            },
            {
                "questionId": "MicroAndAmazonThree",
                "content": "\n\tIn the interview Werner Vogels from Amazon gives to Jim Gray, Werner Vogels says that\n\t\n\t\\begin{quote}\n\t\tThe stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. \n\t\\end{quote}\n\t\n\tWhich means that in the software architecture of Amazon's systems\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The shared-data architectural style is not applied because data is encapsulated inside services",
                    "The sharing of data is done using a service-oriented architecture",
                    "Modifiability is not a concern of their architecture",
                    "The decouple of data formats does not support scalability because of the transactional properties"
                ]
            },
            {
                "questionId": "BoundedContextOne",
                "content": "\n\t  Consider the following representation of a system following a microservices architecture,\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=140mm]{../MicroservicesArchitecture}\n  \t\\end{center}\n\t  \n\t  After an invocation through the REST API\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/MicroservicesArchitecture.png",
                        "width": 140
                    }
                ],
                "options": [
                    "an ACID transaction occurs in all the involved applications",
                    "a two-phase commit protocol takes place between the involved applications",
                    "a ACID transaction occurs in each of the involved applications, but we can not infer which transaction occurs first",
                    "an ACID transaction occurs in the invoked application and ACID transactions in the other involved applications will eventually occur later"
                ]
            },
            {
                "questionId": "DomainDesignOne",
                "content": "\n\t  Consider the following figure\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=70mm]{../ProductDomainModelTwo}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/ProductDomainModelTwo.png",
                        "width": 70
                    }
                ],
                "options": [
                    "The access to two different aggregate instances in the context of the same request does not hinder scalability",
                    "This is the solution followed by Twitter client applications",
                    "It describes the typical behavior of a microservices system",
                    "To support high scalability the request of \\texttt{User 1} needs to be decomposed into a request to only one of the aggregate instances and the processing in the other aggregate occurs in the background"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/20170113Exam/exame-20170113-companion-B.tex",
        "quizTitle": "..-data-2016-20170113Exam-exame-20170113-companion-B",
        "questions": [
            {
                "questionId": "AvailabilityINGLES",
                "content": "\n    Suppose that, to satisfy an availability requirement related with\n    the occurrence of faults at the network infrastructure used by\n    your system, you want to use the tactic named \\emph{Ping/Echo}.\n    How does the use of that tactic manifests in the architectural\n    views of your system?\n\n    ",
                "image": [],
                "options": [
                    "Only in the Deployment view",
                    "Only in the Decomposition view",
                    "Only in a component-and-connector view",
                    "Both in a component-and-connector and the Deployment\n      views"
                ]
            },
            {
                "questionId": "PeerToPeerDynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used",
                    "When a peer receives a connection it sends all its files to the peer connecting it",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used"
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\t\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced",
                    "Which improves modifiability, because filters are decoupled through pipes",
                    "But the size of buffers may reduce the composition power",
                    "And filters do not have to agree on the data formats"
                ]
            },
            {
                "questionId": "SOAINGLES",
                "content": "\n    In the Service Oriented Architecture style it is common to have a\n    specialized component, named \\emph{Enterprise Service Bus} (ESB).\n    The goal of using of an ESB in a system is\n\n    ",
                "image": [],
                "options": [
                    "To facilitate the interaction among heterogeneous\n      components that use distinct communication protocols",
                    "To promote the use of a common communication protocol for\n      all the remaining components of the system",
                    "To increase the performance of the interaction between\n      the components of the system",
                    "To create a strong coupling between the various services\n      provided by the organization"
                ]
            },
            {
                "questionId": "WhiteBoxTestingINGLES",
                "content": "\n    Consider the following excerpt from the Wikipedia page on\n    \\emph{white-box testing}:\n    \\begin{quote}\n      White-box testing is a method of testing software that tests\n      internal structures or workings of an application, as opposed to\n      its functionality. In white-box testing an internal perspective\n      of the system (including the module's code), as well as\n      programming skills, are required and used to design test\n      cases. The tester chooses inputs to exercise paths through the\n      code and determine the appropriate outputs.\n    \\end{quote}\n  \n    Assuming that you belong to the team testing a complex system and\n    that you are responsible for performing white box tests on the\n    system, which of the following architectural views of the system\n    would be most useful to you?\n\n    ",
                "image": [],
                "options": [
                    "Work Assignment views",
                    "Generalization views",
                    "Deployment views",
                    "Implementation views"
                ]
            },
            {
                "questionId": "ArqChrome",
                "content": "\n\tThe Chromium is a web browser that introduced an innovative architecture. In the Chromium description we can read:\n \n  \\begin{quote}\n    We use separate processes for browser tabs to protect the overall\n    application from bugs and glitches in the rendering engine.  We\n    also restrict access from each rendering engine process to others\n    and to the rest of the system.  In some ways, this brings to web\n    browsing the benefits that memory protection and access control\n    brought to operating systems.\n\n    We refer to the main process that runs the UI and manages tab and\n    plugin processes as the \"browser process\" or \"browser.\"  Likewise,\n    the tab-specific processes are called \"render processes\" or\n    \"renderers.\"  The renderers use the WebKit open-source layout\n    engine for interpreting and laying out HTML.\n  \\end{quote}\n  \n  Which architectural style should we use to represent this aspect of Chromium?\n\n    ",
                "image": [],
                "options": [
                    "Communicating Processes",
                    "Client-Server",
                    "Peer-to-Peer",
                    "Uses"
                ]
            },
            {
                "questionId": "SoftwareArchitectureOne",
                "content": "\n  Consider that a software development team uses an agile methodology\n  such as XP (Extreme Programming), where no documentation is\n  produced.  Then, the systems developed by that team\n\n    ",
                "image": [],
                "options": [
                    "Typically have a software architecture that results\n    from the common knowledge about the system that is shared among\n    the team members",
                    "Do not have a software architecture, because in agile\n    methodologies there is no architectural design phase",
                    "Do not have a software architecture, because the practice of\n    refactoring allows changing every part of the system easily",
                    "May have a software architecture, but that architecture is\n    not known because it was neither designed nor documented"
                ]
            },
            {
                "questionId": "RequirementsImpact",
                "content": "\n\tThe requirements impact on how an architecture is designed\n\n    ",
                "image": [],
                "options": [
                    "However, functional requirements do not have any impact on the architecture because the systemic qualities of an architecture are non-functional",
                    "The functional requirements have a large impact on the definition of views of the component-and-connector viewtype because each component executes a functionality",
                    "The functional requirements have a large impact on the definition of views of the module viewtype because they are used to define the high cohesion and low coupling of modules",
                    "The functional requirements can be considered as constraints on the software architecture design"
                ]
            },
            {
                "questionId": "AvailabilityScenarioOne",
                "content": "\n\t  Consider the following scenario\n\t  \n\t  \\begin{quote}\n\t\t  If one of the application servers fails to respond when the system is in its normal operation state, the load balancer should redirect requests to another application server.\n\t  \\end{quote}\n\t  \n      ",
                "image": [],
                "options": [
                    "The stimulus is incorrect response",
                    "The artefact is the load balancer",
                    "The response is not correctly stated",
                    "The quality it addresses is interoperability"
                ]
            },
            {
                "questionId": "AvailabilityVotingEN",
                "content": "\n\t  The availability quality can be supported by a voting tactic in order to identify faults of\n\n      ",
                "image": [],
                "options": [
                    "Programming, if the components execute modules developed by different teams",
                    "Hardware, if there is hardware redundancy",
                    "Operating Systems, if redundant components execute on top of different operating systems",
                    "All the previous options"
                ]
            },
            {
                "questionId": "MWResourceLoaderTacticEEEN",
                "content": "\n\t  Consider the following fragment of the \\emph{MediaWiki} system description:\n\t  \\newline\n\t  \n\t  \\emph{To optimize the delivery of JavaScript and CSS assets, the ResourceLoader module was developed to optimize delivery of JS and CSS. Started in 2009, it was completed in 2011 and has been a core feature of MediaWiki since version 1.17. ResourceLoader works by loading JS and CSS assets on demand, thus reducing loading and parsing time when features are unused, for example by older browsers. It also minifies the code, groups resources to save requests, and can embed images as data URIs}\n\t  \\newline\n\t  \n\t  The \\emph{ResourceLoader} supports a quality\n    \n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Usability",
                    "Availability",
                    "Modifiability"
                ]
            },
            {
                "questionId": "PerfomanceTacticOne",
                "content": "\n   In which performance tactic it may occur that not all the inputs are processed\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Reduce overhead",
                    "Bound execution times"
                ]
            },
            {
                "questionId": "ScalabilityINGLES",
                "content": "\n    Several of the cases studied in this course had scalability\n    requirements.  That means that those systems should be designed in\n    such a way that they\n\n    ",
                "image": [],
                "options": [
                    "Have high throughput",
                    "Have low latency",
                    "Allow many simultaneous users",
                    "May be easily changed to increase their performance"
                ]
            },
            {
                "questionId": "LayersTactics",
                "content": "\n    The main tactic associated with the layered architectural style is:\n\n    ",
                "image": [],
                "options": [
                    "Split module",
                    "Encapsulate",
                    "Restrict dependencies",
                    "Defer binding"
                ]
            },
            {
                "questionId": "AdventureBuilderThree",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system, designed around the Order Processing Center\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderCandC}\n\t\\end{center}\n\t\n\tThe views \\textbf{does not} use the architectural style\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/AdventureBuilderCandC.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Per-to-peer",
                    "Shared-data",
                    "Communicating processes",
                    "Publish-subscribe"
                ]
            },
            {
                "questionId": "AdventureBuilderFive",
                "content": "\n  \tConsider the following requirement for availability of the Adventure Builder system\n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site sent a purchase order request to the order processing center (OPC). The OPC processed that request but didn't reply to Consumer Web site within five seconds, so the Consumer Web site resends the request to the OPC.\n\t\\end{quote}\n\t\n\tIf we represent this requirement as a scenario\n\n   \t",
                "image": [],
                "options": [
                    "The stimulus is an omission and the tactic is retry",
                    "The stimulus is a crash and the tactic is retry",
                    "The stimulus is an incorrect timing and the tactic is ignore faulty behaviour",
                    "The stimulus is incorrect response and the tactic is voting"
                ]
            },
            {
                "questionId": "DVDCatalogMeta",
                "content": "\n\tConsider the module viewtype views of the DVD Catalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tThe application should support other kinds of catalogs (CDs, games, books, ...). \n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to support a new specific layer for the customization of the catalog",
                    "The layered view to accommodate a new layer for each kind of catalog, which other layers may use",
                    "The data model view in order to define entities for each kind of catalog",
                    "The data model view in order to define generic entities that can be customized for different kinds of catalogs"
                ]
            },
            {
                "questionId": "TwitterOne",
                "content": "\n\tConsider the following description of the behavior of Twitter ingestion mechanisms\n\t\n\t\\begin{quote}\n\t\tWrite. when a tweet  comes in there's an O(n) process to write to Redis clusters, where n is the number of people following you. Painful for Lady Gaga and Barack Obama where they are doing 10s of millions of inserts across the cluster. All the Redis clusters are backing disk, the Flock cluster stores the user timeline to disk, but usually timelines are found in RAM in the Redis cluster.\n\t\\end{quote}\n\t\n\t",
                "image": [],
                "options": [
                    "The quality being addressed is performance and the tactic multiple copies of data",
                    "The quality being addressed is performance and the tactic multiple copies of computation",
                    "The quality being addressed is performance and the tactics multiple copies of data and multiple copies of computation",
                    "The quality being addressed is availability and the tactic passive redundancy"
                ]
            },
            {
                "questionId": "TwitterThree",
                "content": "\n\tConsider the following description of the behavior of Twitter\n\t\n\t\\begin{quote}\n\t\tSolution is a write based fanout approach. Do a lot of processing when tweets arrive to figure out where tweets should go. This makes read time access fast and easy. Don't do any computation on reads. With all the work being performed on the write path ingest rates are slower than the read path, on the order of 4000 QPS.\n\t\\end{quote}\n\t\n\tTo describe the performance quality of this behavior, and considering that the number of reads is much higher than the number of writes, we need to have a view that includes\n\t\n\t",
                "image": [],
                "options": [
                    "Tiers style",
                    "Client-server style",
                    "Shared-data style",
                    "Pipe-and-filter style"
                ]
            },
            {
                "questionId": "MicroservicesOne",
                "content": "\n\tConsider the Microservice architectural style. Which of the following sentences \\textbf{does not} describe an advantage of microservices?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Each service can be developed and deployed independently",
                    "Easier to scale development",
                    "Eliminates any long-term commitment to a technology stack",
                    "Testing is easier"
                ]
            },
            {
                "questionId": "MicroAndAmazonThree",
                "content": "\n\tIn the interview Werner Vogels from Amazon gives to Jim Gray, Werner Vogels says that\n\t\n\t\\begin{quote}\n\t\tThe stored data formats are decoupled from the format in which you communicate data items. If there is no need for sharing schemas of the actual storage layout, you can focus on making sure that the service interfaces can evolve in a way that allows you to handle variations of data formats. \n\t\\end{quote}\n\t\n\tWhich means that in the software architecture of Amazon's systems\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "The shared-data architectural style is not applied because data is encapsulated inside services",
                    "The sharing of data is done using a service-oriented architecture",
                    "Modifiability is not a concern of their architecture",
                    "The decouple of data formats does not support scalability because of the transactional properties"
                ]
            },
            {
                "questionId": "BoundedContextOne",
                "content": "\n\t  Consider the following representation of a system following a microservices architecture,\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=140mm]{../MicroservicesArchitecture}\n  \t\\end{center}\n\t  \n\t  After an invocation through the REST API\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/MicroservicesArchitecture.png",
                        "width": 140
                    }
                ],
                "options": [
                    "an ACID transaction occurs in all the involved applications",
                    "a two-phase commit protocol takes place between the involved applications",
                    "a ACID transaction occurs in each of the involved applications, but we can not infer which transaction occurs first",
                    "an ACID transaction occurs in the invoked application and ACID transactions in the other involved applications will eventually occur later"
                ]
            },
            {
                "questionId": "DomainDesignOne",
                "content": "\n\t  Consider the following figure\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=70mm]{../ProductDomainModelTwo}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/ProductDomainModelTwo.png",
                        "width": 70
                    }
                ],
                "options": [
                    "The access to two different aggregate instances in the context of the same request does not hinder scalability",
                    "This is the solution followed by Twitter client applications",
                    "It describes the typical behavior of a microservices system",
                    "To support high scalability the request of \\texttt{User 1} needs to be decomposed into a request to only one of the aggregate instances and the processing in the other aggregate occurs in the background"
                ]
            },
            {
                "questionId": "HadoopDisponibilidadeDadosINGLES",
                "content": "\n    One of the key requirements for the HDFS system is that the data\n    stored in the system remains available, even in the presence of\n    various types of failures (non simultaneous) in the hardware in\n    which the system executes.  To show that the system satisfies this\n    requirement\n\n    ",
                "image": [],
                "options": [
                    "We must use various different views, both of the\n      component-and-connector and the allocation viewtypes",
                    "We just have to show, through component-and-connector\n      views, that the system maintains replicas of the data in\n      different components",
                    "We just have to show, through Deployment views,\n      that the \\emph{DataNode} component executes in more than one\n      machine of the cluster",
                    "We just have to show, through Decomposition views, that\n      there are modules responsible for the replication of file blocks"
                ]
            },
            {
                "questionId": "HadoopTacticasRecuperacaoFaltasINGLES",
                "content": "\n    In the HDFS system the fault recovery tactics are:\n\n    ",
                "image": [],
                "options": [
                    "Active replication and passive replication",
                    "Active replication, passive replication, and spare",
                    "Passive replication and spare",
                    "Quorum, active replication, and passive replication"
                ]
            },
            {
                "questionId": "SecondEEEN",
                "content": "\n  The documentation of the software architecture for a system is often\n  composed of several views, because\n\n  ",
                "image": [],
                "options": [
                    "Different stakeholders are interested in different views of the system",
                    "A single view would be too simplistic",
                    "The views describe different aspects of the system",
                    "All of the above"
                ]
            },
            {
                "questionId": "ModuleViewType",
                "content": "\n\tThe quality that is more relevant to views of the module viewtype is:\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability",
                    "Usability",
                    "Security",
                    "Availability"
                ]
            },
            {
                "questionId": "MemcachedModulesINGLES",
                "content": "\n    Consider the following description of \\emph{Memcached}, which is\n    adapted from its Wiki:\n    \\begin{quote}\n      Memcached is an in-memory key-value store for small chunks of\n      arbitrary data from results of database calls, API calls, or\n      page rendering.  It is made up of:\n      \\begin{itemize}\n      \\item Client software, which is given a list of available memcached servers.\n      \\item A client-based hashing algorithm, which chooses a server\n        based on the \"key\" input.\n      \\item Server software, which stores your values with their keys\n        into an internal hash table.\n      \\item Server algorithms, which determine when to throw out old\n        data (if out of memory), or reuse memory.\n      \\end{itemize}\n    \\end{quote}\n    Suppose that you want to present an architectural view for\n    \\emph{Memcached} that represents the above information.  Which\n    view is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "A view of the Data Model style",
                    "A view of the Layers style",
                    "A view of the Decomposition style",
                    "A view of the Uses style"
                ]
            },
            {
                "questionId": "AspectsINGLES",
                "content": "\n    Using the Aspects architectural style promotes the modifiability\n    of a system because\n    \n    ",
                "image": [],
                "options": [
                    "It imposes restrictions on which uses relationships may\n      exist between the system's modules",
                    "It makes it easier to create generalization relationships\n      between the system's modules",
                    "It separates in new modules responsibilities that were\n      spread over various of the system's modules",
                    "It allows the decomposition of each of the system's\n      modules into finer grained modules"
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelTwo",
                "content": "\n\t Suppose that you are implementing a module in a system that has a two layered architecture.\n\t Knowing that your module belongs to the upper layer (assuming the usual notation\n\t for the layer style), this means that you\n\t \n\t ",
                "image": [],
                "options": [
                    "Can use the operations defined in any of the system's modules",
                    "Can use the operations defined in the lower layer, but not the ones defined in\n\t \tthe upper layer",
                    "Can use the operations defined in the upper layer, but not the ones defined in\n\t \tthe lower layer",
                    "Should use some operation defined in the lower layer"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/20170131Exam/exame-20170131-companion-A.tex",
        "quizTitle": "..-data-2016-20170131Exam-exame-20170131-companion-A",
        "questions": [
            {
                "questionId": "SoftwareArchitectureTwo",
                "content": "\n  The software architecture of a system\n\n  ",
                "image": [],
                "options": [
                    "Is a high-level view of the system with the purpose of\n  understanding what are the system's goals and features",
                    "Is composed of things such as code units, runtime elements,\n  hardware, and people, together with the relationships among them",
                    "Is a set of guidelines that the developing team should\n  follow in the development of the system",
                    "Is a set of diagrams that show the runtime elements of the\n  system and their relationships"
                ]
            },
            {
                "questionId": "ConcreteScenarios",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  perform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n  should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n  usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "AvailabilityScenarioTwo",
                "content": "\n\t  Consider the following availability scenario\n\t  \n\t  \\begin{quote}\n\t\t If one of the application servers fails to respond to a request when the system is in its normal operation state, the system should notify the operator and continue to operate normally.\n\t  \\end{quote}\n\t  \n      ",
                "image": [],
                "options": [
                    "The scenario is not correct",
                    "The scenario is correct but it does not describe whether the request the servers fails to respond to succeeds or fails",
                    "The scenario is correct but it is not clear what is the artefact",
                    "The scenario is not completely correct because it contains two responses"
                ]
            },
            {
                "questionId": "AvailabilityINGLES",
                "content": "\n    Suppose that, to satisfy an availability requirement related with\n    the occurrence of faults at the network infrastructure used by\n    your system, you want to use the tactic named \\emph{Ping/Echo}.\n    How does the use of that tactic manifests in the architectural\n    views of your system?\n\n    ",
                "image": [],
                "options": [
                    "Only in the Deployment view",
                    "Only in the Decomposition view",
                    "Only in a component-and-connector view",
                    "Both in a component-and-connector and the Deployment\n      views"
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tConsider the following description of the \\emph{Infinispan} system:\n\t\n\t\\begin{quote}\n\t\tBefore putting data on the network, application objects need to be serialized into bytes so that they can be pushed across a network, into the grid, and then again between peers. The bytes then need to be de-serialized back into application objects, when read by the application. In most common configurations, about 20\\% of the time spent in processing a request is spent in serialization and de-serialization.\n\t\\end{quote}\n\t\n\tThe above description can motivate a scenario for\n\t\t\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Availability",
                    "Modifiability",
                    "Reliability"
                ]
            },
            {
                "questionId": "PerfomanceTacticTwo",
                "content": "\n   In which performance tactic it can occur that the inputs are not completely processed, even though they always start being processed\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Reduce overhead",
                    "Bound execution times"
                ]
            },
            {
                "questionId": "ModifiabilityScenario",
                "content": "\n    Consider the following modifiability scenario\n\t\n\t\\begin{quote}\n\t\tThe effort necessary to successfully port the system to execute in a new browser should not be higher than 5 person/month.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is to port the system to a new browser",
                    "The environment is build time",
                    "The response is 5 person/month",
                    "To implement the above scenario it is necessary to apply a runtime defer binding tactic"
                ]
            },
            {
                "questionId": "AspectsTactics",
                "content": "\n    The main tactic associated with the aspects architectural style is:\n\n    ",
                "image": [],
                "options": [
                    "Split module",
                    "Increase semantic coherence",
                    "Restrict dependencies",
                    "Defer binding"
                ]
            },
            {
                "questionId": "HadoopStakeholdersEurosINGLES",
                "content": "\n    In the HDFS system, in the stakeholders perspective, the use of low cost servers to build the clusters is:\n\n    ",
                "image": [],
                "options": [
                    "Essential to ensure the system scalability",
                    "Essential to reduce costs whenever there is a fault in a hardware element",
                    "Essential to ensure the system portability",
                    "Essential to facilitate the integration with legacy systems"
                ]
            },
            {
                "questionId": "HadoopHeartbeatINGLES",
                "content": "\n    In HDFS, during normal operation DataNodes use the heartbeat tactic\n\n    ",
                "image": [],
                "options": [
                    "Because this tactic simplifies the addition and removal of DataNodes",
                    "But they could have used the ping tactic instead without adding any overhead to the NameNode",
                    "But the exceptions tactic could have been used as well",
                    "To inform other DataNodes about their availability"
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n  A software system is usually described using different architectural views\n\n  ",
                "image": [],
                "options": [
                    "Each view contains a single architectural style",
                    "Views need to contain more than one architectural style",
                    "A view may not contain any architectural style",
                    "None of the above"
                ]
            },
            {
                "questionId": "FunctionalModule",
                "content": "\n\tWhen designing an architecture requirements can be split into functional, quality attributes, and constraints. Functional requirements have impact on:\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module view",
                    "A component-and-connector view",
                    "An allocation view",
                    "They are not represented by a view"
                ]
            },
            {
                "questionId": "SubcontractorsINGLES",
                "content": "\n    Suppose that you are developing a software architecture for a new\n    large scale system and that you intend to resort extensively to\n    third party subcontractors for the development of various parts of\n    the system.  Which architectural styles are most useful to plan\n    the development of the system in this case?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition and the Work Assignment styles",
                    "The Decomposition and the Layers styles",
                    "The Decomposition and the Uses styles",
                    "The Decomposition and the SOA styles"
                ]
            },
            {
                "questionId": "UsesStyle",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Deployment style",
                    "The Uses style",
                    "The Work-assignment style"
                ]
            },
            {
                "questionId": "nginxModuleTypesINGLES",
                "content": "\n    According to the document that describes nginx:\n    \\begin{quote}\n      nginx's modular architecture generally allows developers to\n      extend the set of web server features without modifying the\n      nginx core.  nginx modules come in slightly different\n      incarnations, namely core modules, event modules, phase\n      handlers, protocols, variable handlers, filters, upstreams and\n      load balancers.  [...]  Event modules provide a particular\n      OS-dependent event notification mechanism like kqueue or epoll.\n      Protocol modules allow nginx to communicate through HTTPS,\n      TLS/SSL, SMTP, POP3 and IMAP.\n    \\end{quote}\n    Which architectural style is more adequate to represent the\n    information presented above?\n\n    ",
                "image": [],
                "options": [
                    "The Generalization style",
                    "The Uses style",
                    "The Layers style",
                    "The Aspects style"
                ]
            },
            {
                "questionId": "AdventureBuilderFour",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system, designed around the Order Processing Center\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderCandC}\n\t\\end{center}\n\t\n\tThe views \\textbf{does not} allow the reason about the quality of\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/AdventureBuilderCandC.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Interoperability",
                    "Modifiability",
                    "Performance",
                    "Security"
                ]
            },
            {
                "questionId": "AdventureBuilderSix",
                "content": "\n  \tConsider the following requirement for availability of the Adventure Builder system\n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site is available to the user 24x7. If an instance of OPC application fails, the fault is detected and the system administrator is notified in 30 seconds; the system continues taking order requests; another OPC instance is automatically created; and data remains in consistent state.\n\t\\end{quote}\n\t\n\tIn order to support this quality it is necessary to \n\n   \t",
                "image": [],
                "options": [
                    "Use a passive redundancy tactic in the OPC (Order Processing Center)",
                    "Use a passive redundancy tactic in the Consumer Web site",
                    "Use an active redundancy tactic in the OPC (Order Processing Center) ",
                    "Use an active redundancy tactic in the Consumer Web site"
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities",
                    "The uses view to represent how the mobile device uses the Catalog application",
                    "The layered view to include a layer for each type of device",
                    "The domain layer of the layered style to represent the types of devices"
                ]
            },
            {
                "questionId": "TiposVistaDesempenhoINGLES",
                "content": "\n    To analyse the performance of a system\n\n    ",
                "image": [],
                "options": [
                    "Only views of the component-and-connector viewtype are needed",
                    "All viewtypes may be necessary",
                    "Only views of the component-and-connector viewtype and allocation viewtype are needed",
                    "Views of the module viewtype are not needed"
                ]
            },
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n    ",
                "image": [],
                "options": [
                    "The file transfers follows the same path of nodes used to identify where the file was located",
                    "The peer initiating the request for a file needs to know where the file is located",
                    "If a peer providing a file crashes it is necessary to restart downloading the file from the begin",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared"
                ]
            },
            {
                "questionId": "TresTiersINGLES",
                "content": "\n    Currently, the most popular architecture for an enterprise\n    application is composed of 3 tiers.  The three tiers are\n\n    ",
                "image": [],
                "options": [
                    "The presentation logic layer, domain logic layer, and\n      data access layer",
                    "The traditional web applications, the mashups, and the rich internet applications (RIAs)",
                    "The web browser, o web server, and the data base",
                    "The web services layer, the domain logic layer, and the\n      data access layer"
                ]
            },
            {
                "questionId": "ChromeMultiPlatform",
                "content": "\n\tThe Chromium is a web browser that introduced an innovative architecture. In the Chromium description we can read:\n\n  \\begin{quote}\n    Chromium is a large and complex cross-platform product.  We try to\n    share as much code as possible between platforms, while\n    implementing the UI and OS integration in the most appropriate way\n    for each.  While this gives a better user experience, it adds\n    extra complexity to the code.  This document describes the\n    recommended practices for keeping such cross-platform code clean.\n\n    We use a variety of different file naming suffixes to indicate\n    when a file should be used:\n    \\begin{itemize}\n    \\item Windows files use the \\texttt{\\_win} suffix.\n    \\item Cocoa (Mac UI) files use the \\texttt{\\_cocoa} suffix, and lower-level Mac files use the \\texttt{\\_mac} suffix.\n    \\item Linux files use \\texttt{\\_linux} for lower-level files, \\texttt{\\_gtk} for GTK-specific files, and \\texttt{\\_x} for X Windows (with no GTK) specific files.\n    \\item Posix files shared between Mac and Linux use the \\texttt{\\_posix} suffix.\n    \\item Files for Chrome's ``Views'' UI (on Windows and experimental GTK) layout system use the \\texttt{\\_views} suffix.\n   \\end{itemize}\n\n    The separate front-ends of the browser are contained in their own directories:\n    \\begin{itemize}\n    \\item Windows Views (and the experimental GTK-views): \\\\\n      \\texttt{chrome/browser/ui/views}\n    \\item Linux GTK: \\texttt{chrome/browser/gtk}\n    \\item Mac: \\texttt{chrome/browser/cocoa}\n    \\end{itemize}\n  \\end{quote}\n  \n  Which architectural style should we use to represent this aspect of Chromium?\n\n    ",
                "image": [],
                "options": [
                    "Implementation",
                    "Work assignment",
                    "Decomposition",
                    "None, because this description does not describe any architectural aspect of the system"
                ]
            },
            {
                "questionId": "SOAInteroperability",
                "content": "\n\tThe Service-Oriented Architecture style improves interoperability because\n\t\n    ",
                "image": [],
                "options": [
                    "It enforces the use of a single implementation language among all applications",
                    "The orchestration is in charge of improving the transparent location of service providers",
                    "The enterprise service bus coordinates the execution of several services",
                    "It decouples applications developed for different organizations"
                ]
            },
            {
                "questionId": "InstallView",
                "content": "\n  Consider a system that will require a significative configuration effort during deployment, because it provides several variations of the same functionalities and it is necessary to choose which functionalities better fit in each case. The most helpful architectural view for this situation is\n \n  ",
                "image": [],
                "options": [
                    "Work assignment view",
                    "Install view",
                    "Implementation view",
                    "Deployment view"
                ]
            },
            {
                "questionId": "TwitterTwo",
                "content": "\n\tConsider the following description of the behavior of Twitter\n\t\n\t\\begin{quote}\n\t\tSolution is a write based fanout approach. Do a lot of processing when tweets arrive to figure out where tweets should go. This makes read time access fast and easy. Don't do any computation on reads. With all the work being performed on the write path ingest rates are slower than the read path, on the order of 4000 QPS.\n\t\\end{quote}\n\t\n\tTo describe this behavior we need to \n\t\n\t",
                "image": [],
                "options": [
                    "Write a single scenario on performance",
                    "Write two scenarios on performance",
                    "Write a scenario on performance and a scenario on interoperability",
                    "Write a single scenario on interoperability"
                ]
            },
            {
                "questionId": "TwitterFour",
                "content": "\n\tConsider the following description of the behavior of Twitter ingestion mechanisms\n\t\n\t\\begin{quote}\n\t\tWrite. when a tweet  comes in there's an O(n) process to write to Redis clusters, where n is the number of people following you. Painful for Lady Gaga and Barack Obama where they are doing 10s of millions of inserts across the cluster. All the Redis clusters are backing disk, the Flock cluster stores the user timeline to disk, but usually timelines are found in RAM in the Redis cluster.\n\t\\end{quote}\n\t\n\tThe view that represents this behavior should be of the\n\t\n\t",
                "image": [],
                "options": [
                    "Module viewtype",
                    "Component-and-connector viewtype",
                    "Install architectural style of the allocation viewtype",
                    "It is not necessary to represent this behavior because it does not describe any qualities"
                ]
            },
            {
                "questionId": "MicroservicesTwo",
                "content": "\n\tConsider the following definition of Microservice architectural style by Martin Fowler\n\t\n\t\\begin{quote}\n\t\tThe microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business capabilities and independently deployable by fully automated deployment machinery. There is a bare minimum of centralized management of these services, which may be written in different programming languages and use different data storage technologies.\n\t\\end{quote}\n\t\n\tTo represent an architecture based on Microservices \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "We do not need a view of the module viewtype because it is about the runtime properties of the system",
                    "We do not need a view of the allocation viewtype because deployment is automated",
                    "The component-and-connector view should emphasize the performance qualities of systems following the microservices architecture",
                    "It is necessary to use views of the three viewtypes"
                ]
            },
            {
                "questionId": "WorldWideEN",
                "content": "\n\t  In world-wide systems like Facebook or Amazon,\n\t  \n      ",
                "image": [],
                "options": [
                    "All functionalities can be transactional",
                    "Only a small set of functionalities are transactional",
                    "It is not necessary to have transactional properties because all data is in memory",
                    "Only the isolation property of transactions is supported"
                ]
            },
            {
                "questionId": "BoundedContextTwo",
                "content": "\n\t  Consider the following representation of a system following a microservices architecture,\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=140mm]{../MicroservicesArchitecture}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/MicroservicesArchitecture.png",
                        "width": 140
                    }
                ],
                "options": [
                    "When an event is published to the distributed log, the order of delivery to the different subscribing applications is predefined",
                    "When two events are published to the distributed log they are delivered to the different subscribing applications in the same order",
                    "The distributed log guarantees that events will be delivered only once",
                    "The distributed log may not deliver some of the events that are published to their subscribers"
                ]
            },
            {
                "questionId": "DomainDesignTwo",
                "content": "\n\t  Consider the following data model\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=80mm]{../ProductDomainModel}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/ProductDomainModel.png",
                        "width": 80
                    }
                ],
                "options": [
                    "It allows high scalability because the data model has only four entities",
                    "It allows high scalability because it is possible the implement transactions associated to each one of the aggregates",
                    "It allows high scalability because the only synchronized access is to the \\texttt{ProductId}, so it requires a single contention point",
                    "It does not allow high scalability"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/20170131Exam/exame-20170131-companion-B.tex",
        "quizTitle": "..-data-2016-20170131Exam-exame-20170131-companion-B",
        "questions": [
            {
                "questionId": "ModifiabilityScenario",
                "content": "\n    Consider the following modifiability scenario\n\t\n\t\\begin{quote}\n\t\tThe effort necessary to successfully port the system to execute in a new browser should not be higher than 5 person/month.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The stimulus is to port the system to a new browser",
                    "The environment is build time",
                    "The response is 5 person/month",
                    "To implement the above scenario it is necessary to apply a runtime defer binding tactic"
                ]
            },
            {
                "questionId": "AspectsTactics",
                "content": "\n    The main tactic associated with the aspects architectural style is:\n\n    ",
                "image": [],
                "options": [
                    "Split module",
                    "Increase semantic coherence",
                    "Restrict dependencies",
                    "Defer binding"
                ]
            },
            {
                "questionId": "HadoopStakeholdersEurosINGLES",
                "content": "\n    In the HDFS system, in the stakeholders perspective, the use of low cost servers to build the clusters is:\n\n    ",
                "image": [],
                "options": [
                    "Essential to ensure the system scalability",
                    "Essential to reduce costs whenever there is a fault in a hardware element",
                    "Essential to ensure the system portability",
                    "Essential to facilitate the integration with legacy systems"
                ]
            },
            {
                "questionId": "HadoopHeartbeatINGLES",
                "content": "\n    In HDFS, during normal operation DataNodes use the heartbeat tactic\n\n    ",
                "image": [],
                "options": [
                    "Because this tactic simplifies the addition and removal of DataNodes",
                    "But they could have used the ping tactic instead without adding any overhead to the NameNode",
                    "But the exceptions tactic could have been used as well",
                    "To inform other DataNodes about their availability"
                ]
            },
            {
                "questionId": "SoftwareArchitectureTwo",
                "content": "\n  The software architecture of a system\n\n  ",
                "image": [],
                "options": [
                    "Is a high-level view of the system with the purpose of\n  understanding what are the system's goals and features",
                    "Is composed of things such as code units, runtime elements,\n  hardware, and people, together with the relationships among them",
                    "Is a set of guidelines that the developing team should\n  follow in the development of the system",
                    "Is a set of diagrams that show the runtime elements of the\n  system and their relationships"
                ]
            },
            {
                "questionId": "ConcreteScenarios",
                "content": "\n  As part of the process of creating an architecture, we talked about\n  a framework for capturing some of the requirements for a system.  In\n  this context, \\textbf{concrete scenarios} are used for\n\n  ",
                "image": [],
                "options": [
                    "Describing what are the qualities that the system should possess",
                    "Describing a set of steps that a user of the system must\n  perform to accomplish some task",
                    "Describing a use case for the system that makes clear what\n  should be the system's responses to each of the user's inputs",
                    "Describing the system's features by way of different\n  usage scenarios for it, in which users play the role of actors"
                ]
            },
            {
                "questionId": "AvailabilityScenarioTwo",
                "content": "\n\t  Consider the following availability scenario\n\t  \n\t  \\begin{quote}\n\t\t If one of the application servers fails to respond to a request when the system is in its normal operation state, the system should notify the operator and continue to operate normally.\n\t  \\end{quote}\n\t  \n      ",
                "image": [],
                "options": [
                    "The scenario is not correct",
                    "The scenario is correct but it does not describe whether the request the servers fails to respond to succeeds or fails",
                    "The scenario is correct but it is not clear what is the artefact",
                    "The scenario is not completely correct because it contains two responses"
                ]
            },
            {
                "questionId": "AvailabilityINGLES",
                "content": "\n    Suppose that, to satisfy an availability requirement related with\n    the occurrence of faults at the network infrastructure used by\n    your system, you want to use the tactic named \\emph{Ping/Echo}.\n    How does the use of that tactic manifests in the architectural\n    views of your system?\n\n    ",
                "image": [],
                "options": [
                    "Only in the Deployment view",
                    "Only in the Decomposition view",
                    "Only in a component-and-connector view",
                    "Both in a component-and-connector and the Deployment\n      views"
                ]
            },
            {
                "questionId": "InfinispanThree",
                "content": "\n\tConsider the following description of the \\emph{Infinispan} system:\n\t\n\t\\begin{quote}\n\t\tBefore putting data on the network, application objects need to be serialized into bytes so that they can be pushed across a network, into the grid, and then again between peers. The bytes then need to be de-serialized back into application objects, when read by the application. In most common configurations, about 20\\% of the time spent in processing a request is spent in serialization and de-serialization.\n\t\\end{quote}\n\t\n\tThe above description can motivate a scenario for\n\t\t\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Availability",
                    "Modifiability",
                    "Reliability"
                ]
            },
            {
                "questionId": "PerfomanceTacticTwo",
                "content": "\n   In which performance tactic it can occur that the inputs are not completely processed, even though they always start being processed\n\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Reduce overhead",
                    "Bound execution times"
                ]
            },
            {
                "questionId": "TresTiersINGLES",
                "content": "\n    Currently, the most popular architecture for an enterprise\n    application is composed of 3 tiers.  The three tiers are\n\n    ",
                "image": [],
                "options": [
                    "The presentation logic layer, domain logic layer, and\n      data access layer",
                    "The traditional web applications, the mashups, and the rich internet applications (RIAs)",
                    "The web browser, o web server, and the data base",
                    "The web services layer, the domain logic layer, and the\n      data access layer"
                ]
            },
            {
                "questionId": "SOAInteroperability",
                "content": "\n\tThe Service-Oriented Architecture style improves interoperability because\n\t\n    ",
                "image": [],
                "options": [
                    "It enforces the use of a single implementation language among all applications",
                    "The orchestration is in charge of improving the transparent location of service providers",
                    "The enterprise service bus coordinates the execution of several services",
                    "It decouples applications developed for different organizations"
                ]
            },
            {
                "questionId": "InstallView",
                "content": "\n  Consider a system that will require a significative configuration effort during deployment, because it provides several variations of the same functionalities and it is necessary to choose which functionalities better fit in each case. The most helpful architectural view for this situation is\n \n  ",
                "image": [],
                "options": [
                    "Work assignment view",
                    "Install view",
                    "Implementation view",
                    "Deployment view"
                ]
            },
            {
                "questionId": "TwitterTwo",
                "content": "\n\tConsider the following description of the behavior of Twitter\n\t\n\t\\begin{quote}\n\t\tSolution is a write based fanout approach. Do a lot of processing when tweets arrive to figure out where tweets should go. This makes read time access fast and easy. Don't do any computation on reads. With all the work being performed on the write path ingest rates are slower than the read path, on the order of 4000 QPS.\n\t\\end{quote}\n\t\n\tTo describe this behavior we need to \n\t\n\t",
                "image": [],
                "options": [
                    "Write a single scenario on performance",
                    "Write two scenarios on performance",
                    "Write a scenario on performance and a scenario on interoperability",
                    "Write a single scenario on interoperability"
                ]
            },
            {
                "questionId": "TwitterFour",
                "content": "\n\tConsider the following description of the behavior of Twitter ingestion mechanisms\n\t\n\t\\begin{quote}\n\t\tWrite. when a tweet  comes in there's an O(n) process to write to Redis clusters, where n is the number of people following you. Painful for Lady Gaga and Barack Obama where they are doing 10s of millions of inserts across the cluster. All the Redis clusters are backing disk, the Flock cluster stores the user timeline to disk, but usually timelines are found in RAM in the Redis cluster.\n\t\\end{quote}\n\t\n\tThe view that represents this behavior should be of the\n\t\n\t",
                "image": [],
                "options": [
                    "Module viewtype",
                    "Component-and-connector viewtype",
                    "Install architectural style of the allocation viewtype",
                    "It is not necessary to represent this behavior because it does not describe any qualities"
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n  A software system is usually described using different architectural views\n\n  ",
                "image": [],
                "options": [
                    "Each view contains a single architectural style",
                    "Views need to contain more than one architectural style",
                    "A view may not contain any architectural style",
                    "None of the above"
                ]
            },
            {
                "questionId": "FunctionalModule",
                "content": "\n\tWhen designing an architecture requirements can be split into functional, quality attributes, and constraints. Functional requirements have impact on:\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module view",
                    "A component-and-connector view",
                    "An allocation view",
                    "They are not represented by a view"
                ]
            },
            {
                "questionId": "SubcontractorsINGLES",
                "content": "\n    Suppose that you are developing a software architecture for a new\n    large scale system and that you intend to resort extensively to\n    third party subcontractors for the development of various parts of\n    the system.  Which architectural styles are most useful to plan\n    the development of the system in this case?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition and the Work Assignment styles",
                    "The Decomposition and the Layers styles",
                    "The Decomposition and the Uses styles",
                    "The Decomposition and the SOA styles"
                ]
            },
            {
                "questionId": "UsesStyle",
                "content": "\n  To achieve a faster time-to-market, software companies are\n  increasingly using a strategy of incremental releases of their\n  software, where each new release has a set of new features.  Which\n  architectural style is better to analyse whether the system's\n  software architecture is adequate for the planned incremental\n  releases?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style",
                    "The Deployment style",
                    "The Uses style",
                    "The Work-assignment style"
                ]
            },
            {
                "questionId": "nginxModuleTypesINGLES",
                "content": "\n    According to the document that describes nginx:\n    \\begin{quote}\n      nginx's modular architecture generally allows developers to\n      extend the set of web server features without modifying the\n      nginx core.  nginx modules come in slightly different\n      incarnations, namely core modules, event modules, phase\n      handlers, protocols, variable handlers, filters, upstreams and\n      load balancers.  [...]  Event modules provide a particular\n      OS-dependent event notification mechanism like kqueue or epoll.\n      Protocol modules allow nginx to communicate through HTTPS,\n      TLS/SSL, SMTP, POP3 and IMAP.\n    \\end{quote}\n    Which architectural style is more adequate to represent the\n    information presented above?\n\n    ",
                "image": [],
                "options": [
                    "The Generalization style",
                    "The Uses style",
                    "The Layers style",
                    "The Aspects style"
                ]
            },
            {
                "questionId": "AdventureBuilderFour",
                "content": "\n  \tConsider the following architectural view of the Adventure Builder system, designed around the Order Processing Center\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{../AdventureBuilderCandC}\n\t\\end{center}\n\t\n\tThe views \\textbf{does not} allow the reason about the quality of\n\n   \t",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/AdventureBuilderCandC.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Interoperability",
                    "Modifiability",
                    "Performance",
                    "Security"
                ]
            },
            {
                "questionId": "AdventureBuilderSix",
                "content": "\n  \tConsider the following requirement for availability of the Adventure Builder system\n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site is available to the user 24x7. If an instance of OPC application fails, the fault is detected and the system administrator is notified in 30 seconds; the system continues taking order requests; another OPC instance is automatically created; and data remains in consistent state.\n\t\\end{quote}\n\t\n\tIn order to support this quality it is necessary to \n\n   \t",
                "image": [],
                "options": [
                    "Use a passive redundancy tactic in the OPC (Order Processing Center)",
                    "Use a passive redundancy tactic in the Consumer Web site",
                    "Use an active redundancy tactic in the OPC (Order Processing Center) ",
                    "Use an active redundancy tactic in the Consumer Web site"
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities",
                    "The uses view to represent how the mobile device uses the Catalog application",
                    "The layered view to include a layer for each type of device",
                    "The domain layer of the layered style to represent the types of devices"
                ]
            },
            {
                "questionId": "TiposVistaDesempenhoINGLES",
                "content": "\n    To analyse the performance of a system\n\n    ",
                "image": [],
                "options": [
                    "Only views of the component-and-connector viewtype are needed",
                    "All viewtypes may be necessary",
                    "Only views of the component-and-connector viewtype and allocation viewtype are needed",
                    "Views of the module viewtype are not needed"
                ]
            },
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n    ",
                "image": [],
                "options": [
                    "The file transfers follows the same path of nodes used to identify where the file was located",
                    "The peer initiating the request for a file needs to know where the file is located",
                    "If a peer providing a file crashes it is necessary to restart downloading the file from the begin",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared"
                ]
            },
            {
                "questionId": "MicroservicesTwo",
                "content": "\n\tConsider the following definition of Microservice architectural style by Martin Fowler\n\t\n\t\\begin{quote}\n\t\tThe microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business capabilities and independently deployable by fully automated deployment machinery. There is a bare minimum of centralized management of these services, which may be written in different programming languages and use different data storage technologies.\n\t\\end{quote}\n\t\n\tTo represent an architecture based on Microservices \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "We do not need a view of the module viewtype because it is about the runtime properties of the system",
                    "We do not need a view of the allocation viewtype because deployment is automated",
                    "The component-and-connector view should emphasize the performance qualities of systems following the microservices architecture",
                    "It is necessary to use views of the three viewtypes"
                ]
            },
            {
                "questionId": "WorldWideEN",
                "content": "\n\t  In world-wide systems like Facebook or Amazon,\n\t  \n      ",
                "image": [],
                "options": [
                    "All functionalities can be transactional",
                    "Only a small set of functionalities are transactional",
                    "It is not necessary to have transactional properties because all data is in memory",
                    "Only the isolation property of transactions is supported"
                ]
            },
            {
                "questionId": "BoundedContextTwo",
                "content": "\n\t  Consider the following representation of a system following a microservices architecture,\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=140mm]{../MicroservicesArchitecture}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/MicroservicesArchitecture.png",
                        "width": 140
                    }
                ],
                "options": [
                    "When an event is published to the distributed log, the order of delivery to the different subscribing applications is predefined",
                    "When two events are published to the distributed log they are delivered to the different subscribing applications in the same order",
                    "The distributed log guarantees that events will be delivered only once",
                    "The distributed log may not deliver some of the events that are published to their subscribers"
                ]
            },
            {
                "questionId": "DomainDesignTwo",
                "content": "\n\t  Consider the following data model\n\t  \n  \t\\begin{center}\n  \t\t\\includegraphics[width=80mm]{../ProductDomainModel}\n  \t\\end{center}\n\t  \n      ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/ProductDomainModel.png",
                        "width": 80
                    }
                ],
                "options": [
                    "It allows high scalability because the data model has only four entities",
                    "It allows high scalability because it is possible the implement transactions associated to each one of the aggregates",
                    "It allows high scalability because the only synchronized access is to the \\texttt{ProductId}, so it requires a single contention point",
                    "It does not allow high scalability"
                ]
            },
            {
                "questionId": "ChromeMultiPlatform",
                "content": "\n\tThe Chromium is a web browser that introduced an innovative architecture. In the Chromium description we can read:\n\n  \\begin{quote}\n    Chromium is a large and complex cross-platform product.  We try to\n    share as much code as possible between platforms, while\n    implementing the UI and OS integration in the most appropriate way\n    for each.  While this gives a better user experience, it adds\n    extra complexity to the code.  This document describes the\n    recommended practices for keeping such cross-platform code clean.\n\n    We use a variety of different file naming suffixes to indicate\n    when a file should be used:\n    \\begin{itemize}\n    \\item Windows files use the \\texttt{\\_win} suffix.\n    \\item Cocoa (Mac UI) files use the \\texttt{\\_cocoa} suffix, and lower-level Mac files use the \\texttt{\\_mac} suffix.\n    \\item Linux files use \\texttt{\\_linux} for lower-level files, \\texttt{\\_gtk} for GTK-specific files, and \\texttt{\\_x} for X Windows (with no GTK) specific files.\n    \\item Posix files shared between Mac and Linux use the \\texttt{\\_posix} suffix.\n    \\item Files for Chrome's ``Views'' UI (on Windows and experimental GTK) layout system use the \\texttt{\\_views} suffix.\n   \\end{itemize}\n\n    The separate front-ends of the browser are contained in their own directories:\n    \\begin{itemize}\n    \\item Windows Views (and the experimental GTK-views): \\\\\n      \\texttt{chrome/browser/ui/views}\n    \\item Linux GTK: \\texttt{chrome/browser/gtk}\n    \\item Mac: \\texttt{chrome/browser/cocoa}\n    \\end{itemize}\n  \\end{quote}\n  \n  Which architectural style should we use to represent this aspect of Chromium?\n\n    ",
                "image": [],
                "options": [
                    "Implementation",
                    "Work assignment",
                    "Decomposition",
                    "None, because this description does not describe any architectural aspect of the system"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-1/test-11A.tex",
        "quizTitle": "..-data-2016-test-1-test-11A",
        "questions": [
            {
                "questionId": "SoftwareArchitecture",
                "content": "\n  The software architecture of a system\n\n    ",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements",
                    "Depends more on the architect's experience than on anything else",
                    "Should not depend on the skills of the developing team",
                    "None of the above"
                ]
            },
            {
                "questionId": "TwitterScaleOne",
                "content": "\n\tIn the description of the Twitter system we can read:\n\t\n\t\\begin{quote}\n\t\t Twitter is optimized to be highly available on the read path on the home timeline. Read path is in the 10s of milliseconds.\n\t\\end{quote}\n\t\n\tThis is achieved because:\n\n    ",
                "image": [],
                "options": [
                    "The writing of a tweet is a synchronous process where different users have a consistent view of the sequence of tweets",
                    "A tweet is written in each one of the Twitter's servers",
                    "The tweet unique ID is written in the home timeline of each one of the writer's followers",
                    "The tweet content is written in the home timeline of each one of the writer's followers"
                ]
            },
            {
                "questionId": "GeneralScenario",
                "content": "\n\tA general scenario for a quality attribute\n\n    ",
                "image": [],
                "options": [
                    "Describes a concrete quality that a particular system has to implement",
                    "Enumerates, for each kind of quality attribute, all the possible types of source of stimulus, stimulus, response, etc",
                    "Can omit some of the elements like, for instance, the environment, if they are not relevant for the general scenario",
                    "Is a very reusable scenario that can be effectively used in many different concrete situations"
                ]
            },
            {
                "questionId": "ProxyServer",
                "content": "\n\tConsider the following figure that presents a Proxy Server, which collapses requests from different users.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{ProxyServer}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/ProxyServer.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This solution optimizes the performance in terms of the latency of each request",
                    "This solution allows an \"infinite\"\\ increase of the number clients by allowing the inclusion of more Request Nodes",
                    "This solution continues to provide service even if a crash occurs in the Data server",
                    "This solution optimizes the performance in terms of the throughput of processed requests"
                ]
            },
            {
                "questionId": "HadoopCluster",
                "content": "\n\tConsider the following figure that presents the Hadoop cluster topology.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{HadoopClusterTopology}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/HadoopClusterTopology.png",
                        "width": 100
                    }
                ],
                "options": [
                    "When a new block is created, the first replica is written in the node where the writer is located, to improve availability",
                    "When a new block is created, the second replica is not stored in the same rack than the first replica to increase the availability when a Data Node fails",
                    "When a new block is created, the third replica is stored in the same rack than the second replica to improve the performance of reads",
                    "When a read occurs, the client, if it is located in the cluster, receives a list of the DataNodes where the replicas are, ordered by its closeness to the client, to improve performance of reads"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-1/test-11B.tex",
        "quizTitle": "..-data-2016-test-1-test-11B",
        "questions": [
            {
                "questionId": "HadoopCluster",
                "content": "\n\tConsider the following figure that presents the Hadoop cluster topology.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{HadoopClusterTopology}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/HadoopClusterTopology.png",
                        "width": 100
                    }
                ],
                "options": [
                    "When a new block is created, the first replica is written in the node where the writer is located, to improve availability",
                    "When a new block is created, the second replica is not stored in the same rack than the first replica to increase the availability when a Data Node fails",
                    "When a new block is created, the third replica is stored in the same rack than the second replica to improve the performance of reads",
                    "When a read occurs, the client, if it is located in the cluster, receives a list of the DataNodes where the replicas are, ordered by its closeness to the client, to improve performance of reads"
                ]
            },
            {
                "questionId": "SoftwareArchitecture",
                "content": "\n  The software architecture of a system\n\n    ",
                "image": [],
                "options": [
                    "Depends mostly on the system's functional requirements",
                    "Depends more on the architect's experience than on anything else",
                    "Should not depend on the skills of the developing team",
                    "None of the above"
                ]
            },
            {
                "questionId": "GeneralScenario",
                "content": "\n\tA general scenario for a quality attribute\n\n    ",
                "image": [],
                "options": [
                    "Describes a concrete quality that a particular system has to implement",
                    "Enumerates, for each kind of quality attribute, all the possible types of source of stimulus, stimulus, response, etc",
                    "Can omit some of the elements like, for instance, the environment, if they are not relevant for the general scenario",
                    "Is a very reusable scenario that can be effectively used in many different concrete situations"
                ]
            },
            {
                "questionId": "TwitterScaleOne",
                "content": "\n\tIn the description of the Twitter system we can read:\n\t\n\t\\begin{quote}\n\t\t Twitter is optimized to be highly available on the read path on the home timeline. Read path is in the 10s of milliseconds.\n\t\\end{quote}\n\t\n\tThis is achieved because:\n\n    ",
                "image": [],
                "options": [
                    "The writing of a tweet is a synchronous process where different users have a consistent view of the sequence of tweets",
                    "A tweet is written in each one of the Twitter's servers",
                    "The tweet unique ID is written in the home timeline of each one of the writer's followers",
                    "The tweet content is written in the home timeline of each one of the writer's followers"
                ]
            },
            {
                "questionId": "ProxyServer",
                "content": "\n\tConsider the following figure that presents a Proxy Server, which collapses requests from different users.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{ProxyServer}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/ProxyServer.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This solution optimizes the performance in terms of the latency of each request",
                    "This solution allows an \"infinite\"\\ increase of the number clients by allowing the inclusion of more Request Nodes",
                    "This solution continues to provide service even if a crash occurs in the Data server",
                    "This solution optimizes the performance in terms of the throughput of processed requests"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-1/test-12A.tex",
        "quizTitle": "..-data-2016-test-1-test-12A",
        "questions": [
            {
                "questionId": "ArchitecturalTactics",
                "content": "\n\tAn architectural tactic for a system describes\n\n    ",
                "image": [],
                "options": [
                    "A non-functional requirement a system has to achieve",
                    "How to control the response to one or more stimulus",
                    "What should be the system response in the occurrence of a stimulus",
                    "A decomposition of the system that fulfills an architectural quality"
                ]
            },
            {
                "questionId": "EarlyDecisions",
                "content": "\n\tIn his article, \\emph{Who Needs and Architect?}, Martin Fowler cites Ralph Johnson definition:\n\t\n\t\\begin{quote}\n\t\tArchitecture is the set of decisions that must be made early in a project.\n\t\\end{quote}\n\t\n\tIn his opinion:\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is right because if you don't the project fails",
                    "This is wrong because you can easily change these decisions during the project lifetime",
                    "This is right but you cannot be completely sure whether the decisions are the right ones",
                    "This is wrong because it is against the agile way of thinking the software development process"
                ]
            },
            {
                "questionId": "TwitterScaleTwo",
                "content": "\n\tIn the description of the Twitter system we can read:\n\t\n\t\\begin{quote}\n\t\tOn the search timeline:\n\t\t Write. when a tweet comes in and hits the Ingester only one Early Bird machine is hit. Write time path is O(1). A single tweet is ingested in under 5 seconds between the queuing and processing to find the one Early Bird to write it to.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The search timeline is the most important business use case for Twitter",
                    "The ingestion process includes tokenizing of the tweet to include in an index",
                    "The Early Bird server contains the tweet content",
                    "The write in the Early Bird server is synchronous, only when it finishes does the user receives the feedback of a successful post"
                ]
            },
            {
                "questionId": "Queues",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be served by a server.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=130mm]{Queues}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/Queues.png",
                        "width": 130
                    }
                ],
                "options": [
                    "This solution assures a consistency view to the clients of the data that is written",
                    "In this solution the clients invocations have to be synchronous",
                    "In this solution the tasks in the queue need to be sequentially processed, only when a task is finished can another start to be processed",
                    "This solution allows the dimensioning of the number of activities (threads or processes) that run in the server, taking into consideration the server's hardware capacity, in order to have a efficient usage of the server's CPU"
                ]
            },
            {
                "questionId": "HadoopCreateFile",
                "content": "\n\tIn the description of Hadoop we can red.\n\t\n\t\\begin{quote}\n\t\tThe CheckpointNode periodically combines the existing checkpoint and journal to create a new checkpoint and an empty journal. The CheckpointNode usually runs on a different host from the NameNode since it has the same memory requirements as the NameNode.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The periodic rebuild of the checkpoint is done to increase the availability of the NameNode",
                    "The advantage of running the CheckpointNode in a different host is to not degrade the availability of the NameNode during checkpoint construction",
                    "The periodic rebuild of the checkpoint improves the performance of the NameNode during normal operation",
                    "The periodic rebuild of the checkpoint improves the performance of the NameNode during its initialization"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-1/test-12B.tex",
        "quizTitle": "..-data-2016-test-1-test-12B",
        "questions": [
            {
                "questionId": "HadoopCreateFile",
                "content": "\n\tIn the description of Hadoop we can red.\n\t\n\t\\begin{quote}\n\t\tThe CheckpointNode periodically combines the existing checkpoint and journal to create a new checkpoint and an empty journal. The CheckpointNode usually runs on a different host from the NameNode since it has the same memory requirements as the NameNode.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The periodic rebuild of the checkpoint is done to increase the availability of the NameNode",
                    "The advantage of running the CheckpointNode in a different host is to not degrade the availability of the NameNode during checkpoint construction",
                    "The periodic rebuild of the checkpoint improves the performance of the NameNode during normal operation",
                    "The periodic rebuild of the checkpoint improves the performance of the NameNode during its initialization"
                ]
            },
            {
                "questionId": "ArchitecturalTactics",
                "content": "\n\tAn architectural tactic for a system describes\n\n    ",
                "image": [],
                "options": [
                    "A non-functional requirement a system has to achieve",
                    "How to control the response to one or more stimulus",
                    "What should be the system response in the occurrence of a stimulus",
                    "A decomposition of the system that fulfills an architectural quality"
                ]
            },
            {
                "questionId": "TwitterScaleTwo",
                "content": "\n\tIn the description of the Twitter system we can read:\n\t\n\t\\begin{quote}\n\t\tOn the search timeline:\n\t\t Write. when a tweet comes in and hits the Ingester only one Early Bird machine is hit. Write time path is O(1). A single tweet is ingested in under 5 seconds between the queuing and processing to find the one Early Bird to write it to.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The search timeline is the most important business use case for Twitter",
                    "The ingestion process includes tokenizing of the tweet to include in an index",
                    "The Early Bird server contains the tweet content",
                    "The write in the Early Bird server is synchronous, only when it finishes does the user receives the feedback of a successful post"
                ]
            },
            {
                "questionId": "EarlyDecisions",
                "content": "\n\tIn his article, \\emph{Who Needs and Architect?}, Martin Fowler cites Ralph Johnson definition:\n\t\n\t\\begin{quote}\n\t\tArchitecture is the set of decisions that must be made early in a project.\n\t\\end{quote}\n\t\n\tIn his opinion:\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is right because if you don't the project fails",
                    "This is wrong because you can easily change these decisions during the project lifetime",
                    "This is right but you cannot be completely sure whether the decisions are the right ones",
                    "This is wrong because it is against the agile way of thinking the software development process"
                ]
            },
            {
                "questionId": "Queues",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be served by a server.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=130mm]{Queues}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-1/Queues.png",
                        "width": 130
                    }
                ],
                "options": [
                    "This solution assures a consistency view to the clients of the data that is written",
                    "In this solution the clients invocations have to be synchronous",
                    "In this solution the tasks in the queue need to be sequentially processed, only when a task is finished can another start to be processed",
                    "This solution allows the dimensioning of the number of activities (threads or processes) that run in the server, taking into consideration the server's hardware capacity, in order to have a efficient usage of the server's CPU"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-2/test-21A.tex",
        "quizTitle": "..-data-2016-test-2-test-21A",
        "questions": [
            {
                "questionId": "OmissionRetry",
                "content": "\n\tConsidering the availability architectural quality, the tactic of retry\n\n    ",
                "image": [],
                "options": [
                    "Can be applied to any kind stimulus in availability scenarios",
                    "Is useful to support scenarios where the stimulus is an omission",
                    "Can guarantee that the system will not become unavailable",
                    "When applied it increases the latency of the availability scenario's response time"
                ]
            },
            {
                "questionId": "Scalability",
                "content": "\n    Several of the cases studied in this course have scalability\n    requirements.  That means that those systems should be designed in\n    such a way that they\n\n    ",
                "image": [],
                "options": [
                    "Have high throughput",
                    "Have low latency",
                    "Allow many simultaneous users",
                    "May be easily changed to increase their storage capacity"
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tIn a modifiability scenario the environment can be characterized as design time, compile time, build time, initiation time, and runtime.\n\t\n    ",
                "image": [],
                "options": [
                    "When the environment is design time it means that the change should be done before the system enters into production",
                    "When the environment is build time it means that it is necessary to codify a new module that is added by rebuilding the system",
                    "When the environment is initiation time it means that it is necessary to restart the system for the change to effect",
                    "When the environment is runtime the cost of doing the change is higher than in the other environments"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Interoperability",
                    "Availability (Reliability)",
                    "Security"
                ]
            },
            {
                "questionId": "HadoopCheckpoint",
                "content": "\n    In the HDFS system when the \\emph{CheckpointNode} and the \\emph{NameNode} are deployed in different nodes, the \\emph{CheckpointNode} provides:\n    ",
                "image": [],
                "options": [
                    "Performance and availability qualities",
                    "Performance qualities only",
                    "Availability qualities only",
                    "Performance and security qualities"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-2/test-21B.tex",
        "quizTitle": "..-data-2016-test-2-test-21B",
        "questions": [
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tIn a modifiability scenario the environment can be characterized as design time, compile time, build time, initiation time, and runtime.\n\t\n    ",
                "image": [],
                "options": [
                    "When the environment is design time it means that the change should be done before the system enters into production",
                    "When the environment is build time it means that it is necessary to codify a new module that is added by rebuilding the system",
                    "When the environment is initiation time it means that it is necessary to restart the system for the change to effect",
                    "When the environment is runtime the cost of doing the change is higher than in the other environments"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Interoperability",
                    "Availability (Reliability)",
                    "Security"
                ]
            },
            {
                "questionId": "HadoopCheckpoint",
                "content": "\n    In the HDFS system when the \\emph{CheckpointNode} and the \\emph{NameNode} are deployed in different nodes, the \\emph{CheckpointNode} provides:\n    ",
                "image": [],
                "options": [
                    "Performance and availability qualities",
                    "Performance qualities only",
                    "Availability qualities only",
                    "Performance and security qualities"
                ]
            },
            {
                "questionId": "OmissionRetry",
                "content": "\n\tConsidering the availability architectural quality, the tactic of retry\n\n    ",
                "image": [],
                "options": [
                    "Can be applied to any kind stimulus in availability scenarios",
                    "Is useful to support scenarios where the stimulus is an omission",
                    "Can guarantee that the system will not become unavailable",
                    "When applied it increases the latency of the availability scenario's response time"
                ]
            },
            {
                "questionId": "Scalability",
                "content": "\n    Several of the cases studied in this course have scalability\n    requirements.  That means that those systems should be designed in\n    such a way that they\n\n    ",
                "image": [],
                "options": [
                    "Have high throughput",
                    "Have low latency",
                    "Allow many simultaneous users",
                    "May be easily changed to increase their storage capacity"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-2/test-22A.tex",
        "quizTitle": "..-data-2016-test-2-test-22A",
        "questions": [
            {
                "questionId": "Availability",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "The Ping/Echo tactic",
                    "The Heartbeat tactic",
                    "The Voting tactic",
                    "The Removal from Service tactic"
                ]
            },
            {
                "questionId": "Performance",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Prioritize events",
                    "Bound execution time"
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider that a module, that contains a complex business logic, needs to invoke a remote entity using a particular communication protocol and it is needs to manage the invocation, like deal with the possible errors, delays and omissions in the invocation, transform the data before sending it, etc. Which tactic should be applied for a scenario where there will be changes in the communication protocol. Note that the business logic comprises a set of functionalities that is independent of the remote invocation technological aspects. \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Encapsulate the module such that the clients of the module should not be aware of the remote invocations",
                    "Use an intermediary that contains all the code associated with the remote invocation separating it from the modules' business logic",
                    "Refactor the common parts between the business logic and the remote invocation",
                    "Increase the semantic coherence between the business logic code and the remote invocation code"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance",
                    "Usability",
                    "Performance",
                    "Testability"
                ]
            },
            {
                "questionId": "HadoopNameNodeReplica",
                "content": "\n    The architecture of the HDFS system only allows the existence of\n    one NameNode.  Given the responsibilities of this component and\n    the current architecture of HDFS, what would be the consequences\n    of adding the possibility of having replicas of the NameNode in\n    the system?\n\n    ",
                "image": [],
                "options": [
                    "The system would respond faster to all the\n      clients' requests",
                    "The performance of the system would not change",
                    "The system would respond faster to requests about\n      file locations",
                    "The system would respond faster to requests made by\n      DataNodes to update the metadata"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-2/test-22B.tex",
        "quizTitle": "..-data-2016-test-2-test-22B",
        "questions": [
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider that a module, that contains a complex business logic, needs to invoke a remote entity using a particular communication protocol and it is needs to manage the invocation, like deal with the possible errors, delays and omissions in the invocation, transform the data before sending it, etc. Which tactic should be applied for a scenario where there will be changes in the communication protocol. Note that the business logic comprises a set of functionalities that is independent of the remote invocation technological aspects. \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Encapsulate the module such that the clients of the module should not be aware of the remote invocations",
                    "Use an intermediary that contains all the code associated with the remote invocation separating it from the modules' business logic",
                    "Refactor the common parts between the business logic and the remote invocation",
                    "Increase the semantic coherence between the business logic code and the remote invocation code"
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance",
                    "Usability",
                    "Performance",
                    "Testability"
                ]
            },
            {
                "questionId": "HadoopNameNodeReplica",
                "content": "\n    The architecture of the HDFS system only allows the existence of\n    one NameNode.  Given the responsibilities of this component and\n    the current architecture of HDFS, what would be the consequences\n    of adding the possibility of having replicas of the NameNode in\n    the system?\n\n    ",
                "image": [],
                "options": [
                    "The system would respond faster to all the\n      clients' requests",
                    "The performance of the system would not change",
                    "The system would respond faster to requests about\n      file locations",
                    "The system would respond faster to requests made by\n      DataNodes to update the metadata"
                ]
            },
            {
                "questionId": "Performance",
                "content": "\n\tConsider a scenario for performance where the arrival of events is stochastic with a distribution where there are peeks of events but the arrival of events over a long period is uniform. The best tactic to apply is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Limit event response",
                    "Prioritize events",
                    "Bound execution time"
                ]
            },
            {
                "questionId": "Availability",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "The Ping/Echo tactic",
                    "The Heartbeat tactic",
                    "The Voting tactic",
                    "The Removal from Service tactic"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-3/test-31A.tex",
        "quizTitle": "..-data-2016-test-3-test-31A",
        "questions": [
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together",
                    "The project manager uses this view to get advice on the incremental development of the system",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic"
                ]
            },
            {
                "questionId": "DVDCatalogMultiPlatform",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support multi-platform (Mac, Windows, Linux)\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to deal with the aspects of portability",
                    "The uses view to show the coupling between the different platforms",
                    "The uses view to show the uses relationships between the different platforms",
                    "The data model view to represent each one of the platforms"
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n\tConsider the kind of relations between components and modules.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module contains the code that executes in a single component and a component executes the code of a single module",
                    "A module contains the code that can execute in several components and a component executes the code of a single module",
                    "A module contains the code that executes in a single component and a component can execute the code of several modules",
                    "A module contains the code that can execute in several components and a component can execute the code of several modules"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n\tAn architect is decomposing a system into a set of responsibilities using a view of the Decomposition style. However, she had already to backtrack several times and try new decompositions because she always end up with some responsibility that cannot fit within a single module.\n\t\n    ",
                "image": [],
                "options": [
                    "This means that in this software system it is not possible to modularize each responsibility in a cohesive module",
                    "She should define finer-grained modules where she splits the unassigned responsibility",
                    "She should try to use a view of the Aspects style, assign this responsibility to a single module and define where it crosscuts the other modules",
                    "She should try to use a view of the Layered style and assign this responsibility to a module in the bottom layer that can be used by all the other modules"
                ]
            },
            {
                "questionId": "AdventureBuilderModuleOne",
                "content": "\n\tConsider the following modifiability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tA new business partner (airline, lodging, or activity provider) that uses its own web services interface is added to the system in no more than 10 person-days of effort for the implementation. The business goal is easy integration with new business partners.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{AdventureBuilderHighLevelVIew}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-3/AdventureBuilderHighLevelVIew.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module does not use the interfaces a new business partner has to implement"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-3/test-31B.tex",
        "quizTitle": "..-data-2016-test-3-test-31B",
        "questions": [
            {
                "questionId": "DVDCatalogMultiPlatform",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support multi-platform (Mac, Windows, Linux)\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The layered view to deal with the aspects of portability",
                    "The uses view to show the coupling between the different platforms",
                    "The uses view to show the uses relationships between the different platforms",
                    "The data model view to represent each one of the platforms"
                ]
            },
            {
                "questionId": "ModuleComponent",
                "content": "\n\tConsider the kind of relations between components and modules.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A module contains the code that executes in a single component and a component executes the code of a single module",
                    "A module contains the code that can execute in several components and a component executes the code of a single module",
                    "A module contains the code that executes in a single component and a component can execute the code of several modules",
                    "A module contains the code that can execute in several components and a component can execute the code of several modules"
                ]
            },
            {
                "questionId": "ModuleViewtypeTwo",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together",
                    "The project manager uses this view to get advice on the incremental development of the system",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic"
                ]
            },
            {
                "questionId": "AdventureBuilderModuleOne",
                "content": "\n\tConsider the following modifiability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tA new business partner (airline, lodging, or activity provider) that uses its own web services interface is added to the system in no more than 10 person-days of effort for the implementation. The business goal is easy integration with new business partners.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{AdventureBuilderHighLevelVIew}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-3/AdventureBuilderHighLevelVIew.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module does not use the interfaces a new business partner has to implement"
                ]
            },
            {
                "questionId": "Aspects",
                "content": "\n\tAn architect is decomposing a system into a set of responsibilities using a view of the Decomposition style. However, she had already to backtrack several times and try new decompositions because she always end up with some responsibility that cannot fit within a single module.\n\t\n    ",
                "image": [],
                "options": [
                    "This means that in this software system it is not possible to modularize each responsibility in a cohesive module",
                    "She should define finer-grained modules where she splits the unassigned responsibility",
                    "She should try to use a view of the Aspects style, assign this responsibility to a single module and define where it crosscuts the other modules",
                    "She should try to use a view of the Layered style and assign this responsibility to a module in the bottom layer that can be used by all the other modules"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-3/test-32A.tex",
        "quizTitle": "..-data-2016-test-3-test-32A",
        "questions": [
            {
                "questionId": "DVDCatalogAspects",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo allow the share of catalogs with family and friends, including some access control. \n\t\\end{quote}\n\t\n\tThis requirement requires \n\t\n    ",
                "image": [],
                "options": [
                    "A change to the uses view to represent that friends can use each other catalog",
                    "A change of the layered view to support different presentations, one for each friend",
                    "A change of the decomposition view to include a set of new modules with the responsibilities associated with the access control",
                    "A new aspect view that includes a module with the responsibilities associated with the access control and that crosscuts some of the other modules"
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module",
                    "The invoked function may not have any input parameter",
                    "The invoked function may not have any output parameter",
                    "The invoked function may not have both any input parameter nor any output parameter"
                ]
            },
            {
                "questionId": "ModuleViewtypeThree",
                "content": "\n\tConsider the Layered architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "The modules inside a layer cannot use other modules in the same layer",
                    "A layer cannot call the layer above",
                    "Each layer defines a virtual machine because it provides a set of cohesive functionalities to the upper layer",
                    "It is possible to have a circular allowed-to-use relationship between several layers"
                ]
            },
            {
                "questionId": "DataModelFacebook",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and applications are routed to the right servers for queries and updates. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure",
                    "It is enough to design a view of the Data Model architectural style at the logical level because the information will be stored in a relational database",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance and consistency issues of the access to data"
                ]
            },
            {
                "questionId": "AdventureBuilderModuleTwo",
                "content": "\n\tConsider the following performance/scalability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tUp to 500 users click to see the catalog of adventure packages following a random distribution over 1 minute; the system is under normal operating conditions; the maximal latency to serve the first page of content is under 5 seconds; average latency for same is less than 2 seconds. If required, the system should easily support an increase in the number of simultaneous requests while maintaining the same latency per request.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=105mm]{AdventureBuilderHighLevelVIew}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-3/AdventureBuilderHighLevelVIew.png",
                        "width": 105
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module to allow the execution of the \\texttt{Consumer Website} module in a component that can have multiple copies of computation",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-3/test-32B.tex",
        "quizTitle": "..-data-2016-test-3-test-32B",
        "questions": [
            {
                "questionId": "ModuleViewtypeThree",
                "content": "\n\tConsider the Layered architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "The modules inside a layer cannot use other modules in the same layer",
                    "A layer cannot call the layer above",
                    "Each layer defines a virtual machine because it provides a set of cohesive functionalities to the upper layer",
                    "It is possible to have a circular allowed-to-use relationship between several layers"
                ]
            },
            {
                "questionId": "DVDCatalogAspects",
                "content": "\n\tConsider the module viewtype views of the DVDCatalog application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo allow the share of catalogs with family and friends, including some access control. \n\t\\end{quote}\n\t\n\tThis requirement requires \n\t\n    ",
                "image": [],
                "options": [
                    "A change to the uses view to represent that friends can use each other catalog",
                    "A change of the layered view to support different presentations, one for each friend",
                    "A change of the decomposition view to include a set of new modules with the responsibilities associated with the access control",
                    "A new aspect view that includes a module with the responsibilities associated with the access control and that crosscuts some of the other modules"
                ]
            },
            {
                "questionId": "UsesCalls",
                "content": "\n\tA function call is not necessarily a uses relation of the Uses architectural style of the Module viewtype because\n\t\n    ",
                "image": [],
                "options": [
                    "The correctness of the caller module may not depend on the correct implementation of the invoked function in the called module",
                    "The invoked function may not have any input parameter",
                    "The invoked function may not have any output parameter",
                    "The invoked function may not have both any input parameter nor any output parameter"
                ]
            },
            {
                "questionId": "AdventureBuilderModuleTwo",
                "content": "\n\tConsider the following performance/scalability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tUp to 500 users click to see the catalog of adventure packages following a random distribution over 1 minute; the system is under normal operating conditions; the maximal latency to serve the first page of content is under 5 seconds; average latency for same is less than 2 seconds. If required, the system should easily support an increase in the number of simultaneous requests while maintaining the same latency per request.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=105mm]{AdventureBuilderHighLevelVIew}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-3/AdventureBuilderHighLevelVIew.png",
                        "width": 105
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module to allow the execution of the \\texttt{Consumer Website} module in a component that can have multiple copies of computation",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules"
                ]
            },
            {
                "questionId": "DataModelFacebook",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and applications are routed to the right servers for queries and updates. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure",
                    "It is enough to design a view of the Data Model architectural style at the logical level because the information will be stored in a relational database",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance and consistency issues of the access to data"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-4/test-41A.tex",
        "quizTitle": "..-data-2016-test-4-test-41A",
        "questions": [
            {
                "questionId": "ComponentConnectorTwo",
                "content": "\n\tThe connectors on component-and-connector view\n\t\n\t",
                "image": [],
                "options": [
                    "Represent the hardware infrastructure that allows components to communicate\n\t\twith each other",
                    "May, on another view of the system, be represented by a set of components\n\t\tand connectors",
                    "Represent the dependency relations that exist among the various components",
                    "Represent the control flow during an execution of the system"
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer",
                    "Pipe-and-Filter",
                    "Client-Server",
                    "Publish-Subscribe"
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n    ",
                "image": [],
                "options": [
                    "Applies layers to tiers",
                    "Restricts the communication between components because, for instance, a group of components should be located in the same hardware",
                    "Is an extension of the Client-Server architectural style",
                    "Defines tiers as components"
                ]
            },
            {
                "questionId": "GraphiteViewsOne",
                "content": "\n    In Graphite system  the \\emph{receiver} and the \\emph{writer threads} support asynchronous writing of metrics to optimize disk accesses. The interaction between these two components follow the architectural style\n\n    ",
                "image": [],
                "options": [
                    "Client-server",
                    "Communicating Processes",
                    "Repository",
                    "Pipes-and-Filters"
                ]
            },
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{AdventureBuilder-SOA}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-4/AdventureBuilder-SOA.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server",
                    "Service-oriented architecture, and Shared-data",
                    "Service-oriented architecture, Shared-data, and Peer-to-peer",
                    "Service-oriented architecture, Shared-data, Peer-to-peer, and Client-server"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-4/test-41B.tex",
        "quizTitle": "..-data-2016-test-4-test-41B",
        "questions": [
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{AdventureBuilder-SOA}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-4/AdventureBuilder-SOA.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server",
                    "Service-oriented architecture, and Shared-data",
                    "Service-oriented architecture, Shared-data, and Peer-to-peer",
                    "Service-oriented architecture, Shared-data, Peer-to-peer, and Client-server"
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n    ",
                "image": [],
                "options": [
                    "Applies layers to tiers",
                    "Restricts the communication between components because, for instance, a group of components should be located in the same hardware",
                    "Is an extension of the Client-Server architectural style",
                    "Defines tiers as components"
                ]
            },
            {
                "questionId": "ComponentConnectorTwo",
                "content": "\n\tThe connectors on component-and-connector view\n\t\n\t",
                "image": [],
                "options": [
                    "Represent the hardware infrastructure that allows components to communicate\n\t\twith each other",
                    "May, on another view of the system, be represented by a set of components\n\t\tand connectors",
                    "Represent the dependency relations that exist among the various components",
                    "Represent the control flow during an execution of the system"
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer",
                    "Pipe-and-Filter",
                    "Client-Server",
                    "Publish-Subscribe"
                ]
            },
            {
                "questionId": "GraphiteViewsOne",
                "content": "\n    In Graphite system  the \\emph{receiver} and the \\emph{writer threads} support asynchronous writing of metrics to optimize disk accesses. The interaction between these two components follow the architectural style\n\n    ",
                "image": [],
                "options": [
                    "Client-server",
                    "Communicating Processes",
                    "Repository",
                    "Pipes-and-Filters"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-4/test-42A.tex",
        "quizTitle": "..-data-2016-test-4-test-42A",
        "questions": [
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view",
                    "It represents a relation between a connector's role and a port of one of its internal components",
                    "It represents a relation between a component's port and a port of one of its internal components",
                    "It represent a relation between a component's port and a connector's role"
                ]
            },
            {
                "questionId": "CommunicationProcesses",
                "content": "\n\tThe Java web servers, like Tomcat, use threads to process requests. For each request they create (or reuse) a thread to process it.\n\tTo draw a architectural view that describes this behaviour we should use \n\t\n    ",
                "image": [],
                "options": [
                    "A Module viewtype view",
                    "A Allocation viewtype view",
                    "A Communicating processes view",
                    "A Install view"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events",
                    "It is always guaranteed that all the published events are received by their subscribing components",
                    "The events should be delivered by the same order they are sent",
                    "The set of events types are predefined at initialization time"
                ]
            },
            {
                "questionId": "GraphiteViewsTwo",
                "content": "\n\t  A high-level component-and-connect view of Graphite system can be designed using only the architectural style(s)\n\n    ",
                "image": [],
                "options": [
                    "Shared-data and Communicating-Processes",
                    "Communicating-Processes",
                    "Tiers",
                    "Client-Server and Shared-data"
                ]
            },
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=140mm]{AdventureBuilder-Tiers}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-4/AdventureBuilder-Tiers.png",
                        "width": 140
                    }
                ],
                "options": [
                    "Tiers",
                    "Tiers, and Shared-data",
                    "Tiers, Shared-data, and Service-oriented architecture",
                    "Tiers, Shared-data, Service-oriented architecture, and Client-server"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2016/test-4/test-42B.tex",
        "quizTitle": "..-data-2016-test-4-test-42B",
        "questions": [
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=140mm]{AdventureBuilder-Tiers}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2016/test-4/AdventureBuilder-Tiers.png",
                        "width": 140
                    }
                ],
                "options": [
                    "Tiers",
                    "Tiers, and Shared-data",
                    "Tiers, Shared-data, and Service-oriented architecture",
                    "Tiers, Shared-data, Service-oriented architecture, and Client-server"
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events",
                    "It is always guaranteed that all the published events are received by their subscribing components",
                    "The events should be delivered by the same order they are sent",
                    "The set of events types are predefined at initialization time"
                ]
            },
            {
                "questionId": "GraphiteViewsTwo",
                "content": "\n\t  A high-level component-and-connect view of Graphite system can be designed using only the architectural style(s)\n\n    ",
                "image": [],
                "options": [
                    "Shared-data and Communicating-Processes",
                    "Communicating-Processes",
                    "Tiers",
                    "Client-Server and Shared-data"
                ]
            },
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view",
                    "It represents a relation between a connector's role and a port of one of its internal components",
                    "It represents a relation between a component's port and a port of one of its internal components",
                    "It represent a relation between a component's port and a connector's role"
                ]
            },
            {
                "questionId": "CommunicationProcesses",
                "content": "\n\tThe Java web servers, like Tomcat, use threads to process requests. For each request they create (or reuse) a thread to process it.\n\tTo draw a architectural view that describes this behaviour we should use \n\t\n    ",
                "image": [],
                "options": [
                    "A Module viewtype view",
                    "A Allocation viewtype view",
                    "A Communicating processes view",
                    "A Install view"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/20180112-Exam/exame-20180112-companion-A.tex",
        "quizTitle": "..-data-2017-20180112-Exam-exame-20180112-companion-A",
        "questions": [
            {
                "questionId": "AvailabilityOne",
                "content": "\n\tThe stimulus of an availability scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "A failure.",
                    "An error.",
                    "A fault.",
                    "An input."
                ]
            },
            {
                "questionId": "PerformanceOne",
                "content": "\n\tA response measure of a performance scenario is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Stochastic event.",
                    "Overload.",
                    "Change level of service.",
                    "Throughput."
                ]
            },
            {
                "questionId": "ModifiabilityExamOne",
                "content": "\n\tThe layered architectural style applies the modifiability architectural tactic of\n\t\t\n    ",
                "image": [],
                "options": [
                    "Split module.",
                    "Use an intermediary.",
                    "Restrict dependencies.",
                    "Refactor."
                ]
            },
            {
                "questionId": "ModuleViewtypeExamOne",
                "content": "\n\tOne of the advantages of having views of the module viewtype is that they allow to do an impact analysis to predict the effect of modifying the system. The architectural style of the module viewtype which provides richer information for this impact analysis is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition style.",
                    "Uses style.",
                    "Generalization style.",
                    "Layered style."
                ]
            },
            {
                "questionId": "DecompositionGeneralization",
                "content": "\n  Consider that a chess game should\n  provide an automatic and intelligent chess player, and that to\n  implement that player we will use some of the many chess engines\n  already available in the market.  Moreover, the system should allow\n  the user to choose which engine to use for each new game.  Given\n  these requirements, which of the architectural styles from the\n  module viewtype are best suited to satisfy them?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Decomposition and Uses styles.",
                    "The Layered style.",
                    "The Generalization and Decomposition styles."
                ]
            },
            {
                "questionId": "ComponentAndConnectorViewtypeOne",
                "content": "\n\tIn the component-and-connector viewtype connectors can be complex, which means that they provide a rich set of qualities to the interaction between the components that they connect. These complex connectors can be documented in another view using a set of components interacting through simpler connectors.\n\t\t\n    ",
                "image": [],
                "options": [
                    "Whenever complex connectors are used in architectural views it is necessary to also document their decomposition.",
                    "It is preferable to only design views that do not use complex connectors to increase understandability.",
                    "If there is some technology available that implements the complex connectors it is not necessary to document their decomposition.",
                    "Whenever possible it should be avoided to use complex connectors because developers have difficult to know how to implement them."
                ]
            },
            {
                "questionId": "PublishsubscribeOne",
                "content": "\n\t  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n\t  show in that window the status of each contact (whether it is available, unavailable, busy,\n\t  etc). Given that the status of a contact may be changed at any time, and that the contact's\n\t  status is given by the Instant Messaging application of that contact, which architectural\n\t  style represents best the interaction pattern between these components?\n\n\t   ",
                "image": [],
                "options": [
                    "The Shared Data style.",
                    "The Pipes-and-filters style.",
                    "The Publish-subscribe style.",
                    "The Client-Server style."
                ]
            },
            {
                "questionId": "ProxyServer",
                "content": "\n\tConsider the following figure that presents a Proxy Server that collapses requests from different users.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-proxy-server}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-proxy-server.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This solution optimizes the performance in terms of the latency of each request.",
                    "This solution allows an \"infinite\"\\ increase of the number clients by allowing the inclusion of more Request Nodes.",
                    "This solution continues to provide service even if a crash occurs in the Data server.",
                    "This solution optimizes the performance in terms of the throughput of processed requests."
                ]
            },
            {
                "questionId": "GraphiteOne",
                "content": "\n\tConsider the following fragment in the description of the Graphite system.\n\t\n\t\\begin{quote}\n\t\tThe Graphite webapp allows users to request custom graphs with a simple URL-based API. Graphing parameters are specified in the query-string of an HTTP GET request, and a PNG image is returned in response. \n\t\\end{quote}\n\t\n\tTo describe this scenario it should be designed a view that applies the following architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition.",
                    "Aspects.",
                    "Layered.",
                    "Data model."
                ]
            },
            {
                "questionId": "DVDOne",
                "content": "\n\tConsider the following usability scenario of the Catalog of DVDs case study\n\t\n\t\\begin{quote}\n\t\tThe user intends to have up-to-date info about the movies and the system informs the user that the existing sources have new information about one of his DVDs, which helps to maintain an up-to-date catalog. \n\t\\end{quote}\n\t\n\tThe tactic used to fulfill this scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Aggregate.",
                    "Maintain user model.",
                    "Maintain task model.",
                    "Maintain system model."
                ]
            },
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n\tConsider the following view of the Adventure Builder case study that applies the tiers architectural style \n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{1-adventure-tiers}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-adventure-tiers.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view shows that if is possible to scale differently the \\texttt{web tier} from the \\texttt{EJB tier}.",
                    "This view shows that the \\texttt{Adventure Builder Catalog DB} and the \\texttt{OPC} components should be deployed in the same hardware.",
                    "This view \\textbf{does not} show that the \\texttt{Adventure Builder Catalog DB} and the \\texttt{OPC} components can execute behind a firewall.",
                    "This view \\textbf{does not} show that the access to the \\texttt{web tier} has some security qualities."
                ]
            },
            {
                "questionId": "PulseOne",
                "content": "\n\tConsider the following view of the Pulse case study \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-pulse-multiple-copies-computation}\n\t\\end{center}\n\t\n\tThis view provides a solution that uses the following tactic\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-pulse-multiple-copies-computation.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Pipe-and-filter.",
                    "Maintain multiple copies of data.",
                    "Maintain multiple copies of computation.",
                    "Introduce concurrency."
                ]
            },
            {
                "questionId": "OrderPadOne",
                "content": "\n\tIn the description of architecture of the OrderPad case study it can be read that the updates the user does on the OrderPad when it is offline are not lost. This availability quality is achieved through a\t\n\n  ",
                "image": [],
                "options": [
                    "Ignore faulty behaviour tactic",
                    "Ping-and-echo tactic",
                    "Active redundancy tactic",
                    "Retry tactic"
                ]
            },
            {
                "questionId": "Layered",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "DynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network.",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used.",
                    "When a peer receives a connection it sends all its files to the peer connecting it.",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used."
                ]
            },
            {
                "questionId": "Deployment",
                "content": "\n  In the software architecture of a system, the Deployment architectural style of the allocation viewtype is\n  best suited for\n\n    ",
                "image": [],
                "options": [
                    "Analysing the performance of the system.",
                    "Planning incremental releases of the system.",
                    "Estimating the effort needed to implement the system.",
                    "Analysing the system's portability and reusability."
                ]
            },
            {
                "questionId": "WebAppsOne",
                "content": "\n\tConsider a web application that was implemented using three layers: presentation, domain logic, and data access. How are these layers mapped into the components if it is a rich interface application.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "All layers are mapped to the application server component.",
                    "The presentation and domain logic layers are mapped to the application server component and the data access layer to the repository component.",
                    "The presentation layer is mapped to the browser component and the other two layers are mapped to the application server component.",
                    "All layers are mapped to the browser component where the data access layer will contains, besides a module to access a local repository, modules to access external services."
                ]
            },
            {
                "questionId": "FenixOne",
                "content": "\n\tIn the context of the FenixEdu case study, the business case was to\n\n    ",
                "image": [],
                "options": [
                    "Incorporate in the organization's core business the goals of a software house.",
                    "Do in-house development.",
                    "Integrate the development of the software system with the organization's business goals.",
                    "Reimplement all the information systems of the organization"
                ]
            },
            {
                "questionId": "AggregateOne",
                "content": "\n\tIn a microservices architecture, aggregates are used as a unit of processing\n\n    ",
                "image": [],
                "options": [
                    "An aggregate can contain a large number of instances.",
                    "An aggregate is usually loaded in its entirety from the database.",
                    "An aggregate has runtime references to other aggregates.",
                    "An aggregate is cluster of domain classes."
                ]
            },
            {
                "questionId": "MicroservicesExamOne",
                "content": "\n\tConsider the Microservice architectural style. Which of the following sentences \\textbf{does not} describe an advantage of microservices?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Each service can be developed and deployed independently",
                    "Easier to scale development",
                    "Eliminates any long-term commitment to a technology stack",
                    "Testing is easier"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/20180112-Exam/exame-20180112-companion-B.tex",
        "quizTitle": "..-data-2017-20180112-Exam-exame-20180112-companion-B",
        "questions": [
            {
                "questionId": "ComponentAndConnectorViewtypeOne",
                "content": "\n\tIn the component-and-connector viewtype connectors can be complex, which means that they provide a rich set of qualities to the interaction between the components that they connect. These complex connectors can be documented in another view using a set of components interacting through simpler connectors.\n\t\t\n    ",
                "image": [],
                "options": [
                    "Whenever complex connectors are used in architectural views it is necessary to also document their decomposition.",
                    "It is preferable to only design views that do not use complex connectors to increase understandability.",
                    "If there is some technology available that implements the complex connectors it is not necessary to document their decomposition.",
                    "Whenever possible it should be avoided to use complex connectors because developers have difficult to know how to implement them."
                ]
            },
            {
                "questionId": "PublishsubscribeOne",
                "content": "\n\t  Typically, Instant Messaging clients have a window to list the contacts of the user, and\n\t  show in that window the status of each contact (whether it is available, unavailable, busy,\n\t  etc). Given that the status of a contact may be changed at any time, and that the contact's\n\t  status is given by the Instant Messaging application of that contact, which architectural\n\t  style represents best the interaction pattern between these components?\n\n\t   ",
                "image": [],
                "options": [
                    "The Shared Data style.",
                    "The Pipes-and-filters style.",
                    "The Publish-subscribe style.",
                    "The Client-Server style."
                ]
            },
            {
                "questionId": "GraphiteOne",
                "content": "\n\tConsider the following fragment in the description of the Graphite system.\n\t\n\t\\begin{quote}\n\t\tThe Graphite webapp allows users to request custom graphs with a simple URL-based API. Graphing parameters are specified in the query-string of an HTTP GET request, and a PNG image is returned in response. \n\t\\end{quote}\n\t\n\tTo describe this scenario it should be designed a view that applies the following architectural style\n\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition.",
                    "Aspects.",
                    "Layered.",
                    "Data model."
                ]
            },
            {
                "questionId": "ProxyServer",
                "content": "\n\tConsider the following figure that presents a Proxy Server that collapses requests from different users.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-proxy-server}\n\t\\end{center}\n\t\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-proxy-server.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This solution optimizes the performance in terms of the latency of each request.",
                    "This solution allows an \"infinite\"\\ increase of the number clients by allowing the inclusion of more Request Nodes.",
                    "This solution continues to provide service even if a crash occurs in the Data server.",
                    "This solution optimizes the performance in terms of the throughput of processed requests."
                ]
            },
            {
                "questionId": "FenixOne",
                "content": "\n\tIn the context of the FenixEdu case study, the business case was to\n\n    ",
                "image": [],
                "options": [
                    "Incorporate in the organization's core business the goals of a software house.",
                    "Do in-house development.",
                    "Integrate the development of the software system with the organization's business goals.",
                    "Reimplement all the information systems of the organization"
                ]
            },
            {
                "questionId": "AvailabilityOne",
                "content": "\n\tThe stimulus of an availability scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "A failure.",
                    "An error.",
                    "A fault.",
                    "An input."
                ]
            },
            {
                "questionId": "PerformanceOne",
                "content": "\n\tA response measure of a performance scenario is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Stochastic event.",
                    "Overload.",
                    "Change level of service.",
                    "Throughput."
                ]
            },
            {
                "questionId": "ModifiabilityExamOne",
                "content": "\n\tThe layered architectural style applies the modifiability architectural tactic of\n\t\t\n    ",
                "image": [],
                "options": [
                    "Split module.",
                    "Use an intermediary.",
                    "Restrict dependencies.",
                    "Refactor."
                ]
            },
            {
                "questionId": "ModuleViewtypeExamOne",
                "content": "\n\tOne of the advantages of having views of the module viewtype is that they allow to do an impact analysis to predict the effect of modifying the system. The architectural style of the module viewtype which provides richer information for this impact analysis is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Decomposition style.",
                    "Uses style.",
                    "Generalization style.",
                    "Layered style."
                ]
            },
            {
                "questionId": "DecompositionGeneralization",
                "content": "\n  Consider that a chess game should\n  provide an automatic and intelligent chess player, and that to\n  implement that player we will use some of the many chess engines\n  already available in the market.  Moreover, the system should allow\n  the user to choose which engine to use for each new game.  Given\n  these requirements, which of the architectural styles from the\n  module viewtype are best suited to satisfy them?\n \n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Decomposition and Uses styles.",
                    "The Layered style.",
                    "The Generalization and Decomposition styles."
                ]
            },
            {
                "questionId": "AggregateOne",
                "content": "\n\tIn a microservices architecture, aggregates are used as a unit of processing\n\n    ",
                "image": [],
                "options": [
                    "An aggregate can contain a large number of instances.",
                    "An aggregate is usually loaded in its entirety from the database.",
                    "An aggregate has runtime references to other aggregates.",
                    "An aggregate is cluster of domain classes."
                ]
            },
            {
                "questionId": "MicroservicesExamOne",
                "content": "\n\tConsider the Microservice architectural style. Which of the following sentences \\textbf{does not} describe an advantage of microservices?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Each service can be developed and deployed independently",
                    "Easier to scale development",
                    "Eliminates any long-term commitment to a technology stack",
                    "Testing is easier"
                ]
            },
            {
                "questionId": "DVDOne",
                "content": "\n\tConsider the following usability scenario of the Catalog of DVDs case study\n\t\n\t\\begin{quote}\n\t\tThe user intends to have up-to-date info about the movies and the system informs the user that the existing sources have new information about one of his DVDs, which helps to maintain an up-to-date catalog. \n\t\\end{quote}\n\t\n\tThe tactic used to fulfill this scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Aggregate.",
                    "Maintain user model.",
                    "Maintain task model.",
                    "Maintain system model."
                ]
            },
            {
                "questionId": "AdventureBuilderOne",
                "content": "\n\tConsider the following view of the Adventure Builder case study that applies the tiers architectural style \n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{1-adventure-tiers}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-adventure-tiers.png",
                        "width": 100
                    }
                ],
                "options": [
                    "This view shows that if is possible to scale differently the \\texttt{web tier} from the \\texttt{EJB tier}.",
                    "This view shows that the \\texttt{Adventure Builder Catalog DB} and the \\texttt{OPC} components should be deployed in the same hardware.",
                    "This view \\textbf{does not} show that the \\texttt{Adventure Builder Catalog DB} and the \\texttt{OPC} components can execute behind a firewall.",
                    "This view \\textbf{does not} show that the access to the \\texttt{web tier} has some security qualities."
                ]
            },
            {
                "questionId": "PulseOne",
                "content": "\n\tConsider the following view of the Pulse case study \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-pulse-multiple-copies-computation}\n\t\\end{center}\n\t\n\tThis view provides a solution that uses the following tactic\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180112-Exam/1-pulse-multiple-copies-computation.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Pipe-and-filter.",
                    "Maintain multiple copies of data.",
                    "Maintain multiple copies of computation.",
                    "Introduce concurrency."
                ]
            },
            {
                "questionId": "OrderPadOne",
                "content": "\n\tIn the description of architecture of the OrderPad case study it can be read that the updates the user does on the OrderPad when it is offline are not lost. This availability quality is achieved through a\t\n\n  ",
                "image": [],
                "options": [
                    "Ignore faulty behaviour tactic",
                    "Ping-and-echo tactic",
                    "Active redundancy tactic",
                    "Retry tactic"
                ]
            },
            {
                "questionId": "Layered",
                "content": "\n\tConsider the Uses architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Cycles in the uses relation between modules are a good sign, because it indicates that several modules should be tested together.",
                    "The project manager uses this view to get advice on the incremental development of the system.",
                    "The uses relation should be applied to the coarse-grained modules, because it allows to identify circular dependences.",
                    "There isn't any relation with the layered architectural style because the allowed-to-use relation is more generic."
                ]
            },
            {
                "questionId": "DynamicReconfiguration",
                "content": "\n\tIn the description of the Gnutella system can be read:\n\t\n\t\\begin{quote}\n\t\tThe topology of the system changes at runtime as peer components connect and disconnect to the network.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "When a peer connects to the network it establishes connections with all other peers in the network.",
                    "The behavior described in the sentence can be represented in a view where the dynamic reconfiguration architectural style is used.",
                    "When a peer receives a connection it sends all its files to the peer connecting it.",
                    "The behavior described in the sentence can be represented in a view where the tier architectural style is used."
                ]
            },
            {
                "questionId": "Deployment",
                "content": "\n  In the software architecture of a system, the Deployment architectural style of the allocation viewtype is\n  best suited for\n\n    ",
                "image": [],
                "options": [
                    "Analysing the performance of the system.",
                    "Planning incremental releases of the system.",
                    "Estimating the effort needed to implement the system.",
                    "Analysing the system's portability and reusability."
                ]
            },
            {
                "questionId": "WebAppsOne",
                "content": "\n\tConsider a web application that was implemented using three layers: presentation, domain logic, and data access. How are these layers mapped into the components if it is a rich interface application.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "All layers are mapped to the application server component.",
                    "The presentation and domain logic layers are mapped to the application server component and the data access layer to the repository component.",
                    "The presentation layer is mapped to the browser component and the other two layers are mapped to the application server component.",
                    "All layers are mapped to the browser component where the data access layer will contains, besides a module to access a local repository, modules to access external services."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/20180130-Exam/exame-20180130-companion-A.tex",
        "quizTitle": "..-data-2017-20180130-Exam-exame-20180130-companion-A",
        "questions": [
            {
                "questionId": "AvailabilityTwo",
                "content": "\n\tAn availability tactic to prevent faults is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase competence set.",
                    "Shadow.",
                    "Voting.",
                    "Ignore faulty behavior."
                ]
            },
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tA performance tactic to control resource demand is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Reduce overhead.",
                    "Bound queue sizes.",
                    "Introduce concurrency."
                ]
            },
            {
                "questionId": "ModifiabilityExamTwo",
                "content": "\n\tA response measure of a modifiability scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "When the modification should occur.",
                    "The features that will be implemented.",
                    "The new defects introduced.",
                    "Defer binding."
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the Catalog of DVD application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities",
                    "The uses view to represent how the mobile device uses the Catalog application",
                    "The layered view to include a layer for each type of device",
                    "The domain layer of the layered style to represent the types of devices"
                ]
            },
            {
                "questionId": "ComponentAndConnectorViewtypeTwo",
                "content": "\n\tConsidered the following two views of a system that receive a stream of character and produce the same stream where the characters are alternately uppercase and lowercase.\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-module-and-cc}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-module-and-cc.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The \\emph{config} module is not used in the implementation of any component.",
                    "The \\emph{main} module is used in the implementation of all components.",
                    "The connectors only use the \\emph{stdio} module for their implementation.",
                    "The \\emph{Split} component uses the \\emph{to\\_lower} module for its implementation"
                ]
            },
            {
                "questionId": "ModuleViewtypeExamTwo",
                "content": "\n\tOne of the advantages of having views of the module viewtype is that they allow to do a traceability analysis of requirements, how the functional requirements of the system are supported by module responsibilities. The modifiability tactic that is involved in this mapping is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Split module.",
                    "Abstract common services.",
                    "Restrict dependencies.",
                    "Encapsulation."
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer.",
                    "Pipe-and-Filter.",
                    "Client-Server.",
                    "Publish-Subscribe."
                ]
            },
            {
                "questionId": "ScalableArchitectureOne",
                "content": "\n    Consider the following figure that presents a Image Hosting System.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-image-hosting}\n\t\\end{center}\n\t\n\tBy adding another Image File Storage component, which contains a redundant copy of the data and provides read access to the clients, but without guaranteeing a ACID transactional behavior between reads and writes, it improves the quality(ies) of\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-image-hosting.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Performance.",
                    "Availability for incorrect responses from the Image File Storage component.",
                    "Performance and Availability for crashes of the Image File Storage component.",
                    "Performance and Availability for incorrect responses from the Image File Storage component."
                ]
            },
            {
                "questionId": "GraphiteTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance.",
                    "Usability.",
                    "Performance.",
                    "Modifiability."
                ]
            },
            {
                "questionId": "WorkAssigment",
                "content": "\n\tConsider the Work Assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "WebAppsTwo",
                "content": "\n\tConsider a web application that supports several types of user interface, e.g., web, mobile, etc. If it has to process a high volume of requests, which depend on the type of user interface, and a multi-tier architecture is followed. How many tiers should be used?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "One.",
                    "Two.",
                    "Three.",
                    "Four."
                ]
            },
            {
                "questionId": "DVDTwo",
                "content": "\n\tConsider the following generalization view of the Catalog of DVD case study to fulfill a modifiability scenario\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=60mm]{1-dvd-generalization}\n\t\\end{center}\n\t\n\tFrom this view the stakeholders can infer\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-dvd-generalization.png",
                        "width": 60
                    }
                ],
                "options": [
                    "The cost of the modification.",
                    "That the integration of a new source will not have any impact on the other modules of the Catalog of DVDs.",
                    "That the impact of integrating a new source is controlled by the interface of \\emph{Import DVD Info} Module.",
                    "That the modification can occur at runtime."
                ]
            },
            {
                "questionId": "DataModel",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and requests are routed to the right servers for queries and updates. Additionally, due to performance requirements, the information needs to be replicated in several servers. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure.",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure.",
                    "It is enough to design a view of the Data Model architectural style at the logical level because the information will be stored in a relational database.",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance and consistency issues of the access to data."
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    Suppose that you are developing the software architecture of a new\n    system for an organization composed of several organizational\n    units, each one with its own information systems, which have been\n    developed independently of each other over the course of several\n    years and depending on the particular needs of each unit.  Your\n    system has the goal of integrating the various existing systems,\n    providing in this way not only a unified view of how the\n    organization works, but also allowing the creation of new\n    processes within the organization that involve more than one unit.\n    Which architectural style is better suited to design such a\n    system?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Client-Server style.",
                    "The Service Oriented Architecture style.",
                    "The Communicating Processes style."
                ]
            },
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n\tConsider the following view of the Adventure Builder case study \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-adventure-com-proc}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-adventure-com-proc.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This view shows that the processing of orders is done synchronously.",
                    "This view shows that the processing of tracking requests is done synchronously.",
                    "This view shows that bank debits are done asynchronously.",
                    "This view shows that the responses from the providers are processed synchronously."
                ]
            },
            {
                "questionId": "PulseTwo",
                "content": "\n\tConsider the following view of the Pulse case study \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-pulse-multiple-copies-computation}\n\t\\end{center}\n\t\n\tThis view applies the following architectural styles\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-pulse-multiple-copies-computation.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Pipe-and-filter and tiers.",
                    "Shared-data and publish-subscribe.",
                    "Pipe-and-filter and publish-subscribe.",
                    "Pipe-and-filter and shared-data."
                ]
            },
            {
                "questionId": "OrderPadTwo",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The connector between the client component, executing in the Pad, and the server component, executing in the OrderPadDatabase\n\t\n    ",
                "image": [],
                "options": [
                    "Guarantees that the redundant data in the client and the server is always synchronized.",
                    "Implements an event bus that allows the server to inform the client about new order recommendations.",
                    "Do not loose the changes done on the client component if the server is not available.",
                    "It completely hides the server faults from the Pad user."
                ]
            },
            {
                "questionId": "FenixTwo",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "AggregateTwo",
                "content": "\n\tConsider the following decomposition of a domain model into 3 aggregates. If, instead of this decomposition, \\texttt{Customer} and \\texttt{Order} were in the same aggregate  \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-aggregate}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-aggregate.png",
                        "width": 120
                    }
                ],
                "options": [
                    "It would reduce the scalability for updates of different orders for the same customer.",
                    "Two users would conflict if they attempt to edit different orders for the same customer.",
                    "As the number of orders grows it will be increasingly expensive to load the aggregate.",
                    "All the above."
                ]
            },
            {
                "questionId": "MicroservicesExamTwo",
                "content": "\n\tConsider the following definition of Microservice architectural style by Martin Fowler\n\t\n\t\\begin{quote}\n\t\tThe microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business capabilities and independently deployable by fully automated deployment machinery. There is a bare minimum of centralized management of these services, which may be written in different programming languages and use different data storage technologies.\n\t\\end{quote}\n\t\n\tTo represent an architecture based on Microservices \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "We do not need a view of the module viewtype because it is about the runtime properties of the system.",
                    "We do not need a view of the allocation viewtype because deployment is automated.",
                    "The component-and-connector view should emphasize the performance qualities of systems following the microservices architecture.",
                    "It is necessary to use views of the three viewtypes."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/20180130-Exam/exame-20180130-companion-B.tex",
        "quizTitle": "..-data-2017-20180130-Exam-exame-20180130-companion-B",
        "questions": [
            {
                "questionId": "AggregateTwo",
                "content": "\n\tConsider the following decomposition of a domain model into 3 aggregates. If, instead of this decomposition, \\texttt{Customer} and \\texttt{Order} were in the same aggregate  \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-aggregate}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-aggregate.png",
                        "width": 120
                    }
                ],
                "options": [
                    "It would reduce the scalability for updates of different orders for the same customer.",
                    "Two users would conflict if they attempt to edit different orders for the same customer.",
                    "As the number of orders grows it will be increasingly expensive to load the aggregate.",
                    "All the above."
                ]
            },
            {
                "questionId": "AvailabilityTwo",
                "content": "\n\tAn availability tactic to prevent faults is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase competence set.",
                    "Shadow.",
                    "Voting.",
                    "Ignore faulty behavior."
                ]
            },
            {
                "questionId": "PerformanceTwo",
                "content": "\n\tA performance tactic to control resource demand is \n\t\t\n    ",
                "image": [],
                "options": [
                    "Increase resources.",
                    "Reduce overhead.",
                    "Bound queue sizes.",
                    "Introduce concurrency."
                ]
            },
            {
                "questionId": "MicroservicesExamTwo",
                "content": "\n\tConsider the following definition of Microservice architectural style by Martin Fowler\n\t\n\t\\begin{quote}\n\t\tThe microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business capabilities and independently deployable by fully automated deployment machinery. There is a bare minimum of centralized management of these services, which may be written in different programming languages and use different data storage technologies.\n\t\\end{quote}\n\t\n\tTo represent an architecture based on Microservices \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "We do not need a view of the module viewtype because it is about the runtime properties of the system.",
                    "We do not need a view of the allocation viewtype because deployment is automated.",
                    "The component-and-connector view should emphasize the performance qualities of systems following the microservices architecture.",
                    "It is necessary to use views of the three viewtypes."
                ]
            },
            {
                "questionId": "ModifiabilityExamTwo",
                "content": "\n\tA response measure of a modifiability scenario is\n\t\t\n    ",
                "image": [],
                "options": [
                    "When the modification should occur.",
                    "The features that will be implemented.",
                    "The new defects introduced.",
                    "Defer binding."
                ]
            },
            {
                "questionId": "DVDCatalogMobile",
                "content": "\n\tConsider the module viewtype views of the Catalog of DVD application. The architect knows about a new requirement \n\t\n\t\\begin{quote}\n\t\tTo support iPhone/iPad/Android version with sync, which allows offline use of the application in the mobile device and data synchronization to occur when a connection is available\n\t\\end{quote}\n\t\n\tThis requirement requires a change of\n\t\n    ",
                "image": [],
                "options": [
                    "The decomposition view to include a module for the synchronization responsibilities",
                    "The uses view to represent how the mobile device uses the Catalog application",
                    "The layered view to include a layer for each type of device",
                    "The domain layer of the layered style to represent the types of devices"
                ]
            },
            {
                "questionId": "GraphiteTwo",
                "content": "\n\t  Which quality, or qualities, of the Graphite system are described by the sentence: \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL.}\n\n    ",
                "image": [],
                "options": [
                    "Usability and Performance.",
                    "Usability.",
                    "Performance.",
                    "Modifiability."
                ]
            },
            {
                "questionId": "WorkAssigment",
                "content": "\n\tConsider the Work Assignment architectural style of the allocation viewtype.\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "It assigns components and connectors to people and teams.",
                    "It is useful for the project managers.",
                    "It does not consider the software that is outsourced.",
                    "It allows to estimate the cost of hardware."
                ]
            },
            {
                "questionId": "ScalableArchitectureOne",
                "content": "\n    Consider the following figure that presents a Image Hosting System.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-image-hosting}\n\t\\end{center}\n\t\n\tBy adding another Image File Storage component, which contains a redundant copy of the data and provides read access to the clients, but without guaranteeing a ACID transactional behavior between reads and writes, it improves the quality(ies) of\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-image-hosting.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Performance.",
                    "Availability for incorrect responses from the Image File Storage component.",
                    "Performance and Availability for crashes of the Image File Storage component.",
                    "Performance and Availability for incorrect responses from the Image File Storage component."
                ]
            },
            {
                "questionId": "WebAppsTwo",
                "content": "\n\tConsider a web application that supports several types of user interface, e.g., web, mobile, etc. If it has to process a high volume of requests, which depend on the type of user interface, and a multi-tier architecture is followed. How many tiers should be used?\n\t\t\t\n    ",
                "image": [],
                "options": [
                    "One.",
                    "Two.",
                    "Three.",
                    "Four."
                ]
            },
            {
                "questionId": "DVDTwo",
                "content": "\n\tConsider the following generalization view of the Catalog of DVD case study to fulfill a modifiability scenario\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=60mm]{1-dvd-generalization}\n\t\\end{center}\n\t\n\tFrom this view the stakeholders can infer\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-dvd-generalization.png",
                        "width": 60
                    }
                ],
                "options": [
                    "The cost of the modification.",
                    "That the integration of a new source will not have any impact on the other modules of the Catalog of DVDs.",
                    "That the impact of integrating a new source is controlled by the interface of \\emph{Import DVD Info} Module.",
                    "That the modification can occur at runtime."
                ]
            },
            {
                "questionId": "DataModel",
                "content": "\n\tIn Facebook it is not possible to have the information about more that one bilion users in a single disk. Therefore, a sharding technique is applied, where the persistent information is split between several database servers, and requests are routed to the right servers for queries and updates. Additionally, due to performance requirements, the information needs to be replicated in several servers. To describe this architecture\n\t\n    ",
                "image": [],
                "options": [
                    "It is not necessary to have any view of the Data Model architectural style because Facebook information has a very simple structure.",
                    "It is enough to design a view of the Data Model architectural style at the conceptual level because Facebook information has a very simple structure.",
                    "It is enough to design a view of the Data Model architectural style at the logical level because the information will be stored in a relational database.",
                    "It is necessary to design a view of the Data Model architectural style at the physical level to deal with performance and consistency issues of the access to data."
                ]
            },
            {
                "questionId": "SOA",
                "content": "\n    Suppose that you are developing the software architecture of a new\n    system for an organization composed of several organizational\n    units, each one with its own information systems, which have been\n    developed independently of each other over the course of several\n    years and depending on the particular needs of each unit.  Your\n    system has the goal of integrating the various existing systems,\n    providing in this way not only a unified view of how the\n    organization works, but also allowing the creation of new\n    processes within the organization that involve more than one unit.\n    Which architectural style is better suited to design such a\n    system?\n\n    ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Client-Server style.",
                    "The Service Oriented Architecture style.",
                    "The Communicating Processes style."
                ]
            },
            {
                "questionId": "AdventureBuilderTwo",
                "content": "\n\tConsider the following view of the Adventure Builder case study \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-adventure-com-proc}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-adventure-com-proc.png",
                        "width": 120
                    }
                ],
                "options": [
                    "This view shows that the processing of orders is done synchronously.",
                    "This view shows that the processing of tracking requests is done synchronously.",
                    "This view shows that bank debits are done asynchronously.",
                    "This view shows that the responses from the providers are processed synchronously."
                ]
            },
            {
                "questionId": "FenixTwo",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "PulseTwo",
                "content": "\n\tConsider the following view of the Pulse case study \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=120mm]{1-pulse-multiple-copies-computation}\n\t\\end{center}\n\t\n\tThis view applies the following architectural styles\n\t\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-pulse-multiple-copies-computation.png",
                        "width": 120
                    }
                ],
                "options": [
                    "Pipe-and-filter and tiers.",
                    "Shared-data and publish-subscribe.",
                    "Pipe-and-filter and publish-subscribe.",
                    "Pipe-and-filter and shared-data."
                ]
            },
            {
                "questionId": "OrderPadTwo",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The connector between the client component, executing in the Pad, and the server component, executing in the OrderPadDatabase\n\t\n    ",
                "image": [],
                "options": [
                    "Guarantees that the redundant data in the client and the server is always synchronized.",
                    "Implements an event bus that allows the server to inform the client about new order recommendations.",
                    "Do not loose the changes done on the client component if the server is not available.",
                    "It completely hides the server faults from the Pad user."
                ]
            },
            {
                "questionId": "ModuleViewtypeExamTwo",
                "content": "\n\tOne of the advantages of having views of the module viewtype is that they allow to do a traceability analysis of requirements, how the functional requirements of the system are supported by module responsibilities. The modifiability tactic that is involved in this mapping is\n\t\t\n    ",
                "image": [],
                "options": [
                    "Split module.",
                    "Abstract common services.",
                    "Restrict dependencies.",
                    "Encapsulation."
                ]
            },
            {
                "questionId": "PipesFilters",
                "content": "\n\tConsider that you intend to develop a system where it is necessary to change the emails received by the server (for instance, to remove potential virus or URLs for phishing sites). The goal is that each email is processed by this system before it is sent to other servers or it is stored locally. Additionally, the system should be easily modified to support new kinds of transformations. Which style is more suitable to satisfy these requirements? \n\n    ",
                "image": [],
                "options": [
                    "Peer-to-Peer.",
                    "Pipe-and-Filter.",
                    "Client-Server.",
                    "Publish-Subscribe."
                ]
            },
            {
                "questionId": "ComponentAndConnectorViewtypeTwo",
                "content": "\n\tConsidered the following two views of a system that receive a stream of character and produce the same stream where the characters are alternately uppercase and lowercase.\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{1-module-and-cc}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/20180130-Exam/1-module-and-cc.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The \\emph{config} module is not used in the implementation of any component.",
                    "The \\emph{main} module is used in the implementation of all components.",
                    "The connectors only use the \\emph{stdio} module for their implementation.",
                    "The \\emph{Split} component uses the \\emph{to\\_lower} module for its implementation"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-11A.tex",
        "quizTitle": "..-data-2017-test-1-test-11A",
        "questions": [
            {
                "questionId": "QueuesQualities",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\n\tThis solution \\textbf{does not} provide the following quality:\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Availability whenever the server running the tasks crashes, the tasks are restarted and eventually finished",
                    "Performance of the tasks execution, scheduling of tasks can be optimized for the particular context of the system",
                    "Performance of the services being executed by the clients, they can execute other actions while waiting for the response",
                    "Simple programming model, the clients only need to concern about the business logic of the application, the remote services are transparent"
                ]
            },
            {
                "questionId": "ElevatorCommon",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tFinding the appropriate context requires the architect to visit many floors of the organization.\n\t\\end{quote}\n\t\n\tThis sentence reflects the fact that an architecture is\n\n    ",
                "image": [],
                "options": [
                    "The result of decisions that are made at the \"upper floors\" of the organization",
                    "The sole decision of an architect",
                    "A common understanding to be achieve among all the system stakeholders",
                    "A set of software elements and their relations"
                ]
            },
            {
                "questionId": "MicroservicesProject",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tThe microservice approach to division ..., splitting up into services organized around business capability. Such services take a broad-stack implementation of software for that business area, including user-interface, persistent storage, and any external collaborations. Consequently the teams are cross-functional, including the full range of skills required for the development: user-experience, database, and project management.\n\t\\end{quote}\n\t\n\tConsidering the architecture influence cycle, which influence factor it is being considered?\n\n    ",
                "image": [],
                "options": [
                    "Commercial",
                    "Technical",
                    "Project",
                    "Professional"
                ]
            },
            {
                "questionId": "ScalablePartitioning",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application} which resulted from the enrichment of another architectural view by adding another \\emph{Image File Storage} pair, in the figure they are distinguished by 1 and 2. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\n\tWhich quality results from this enrichment, that was not provided by the previous version of the architecture?\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Availability of the Image Write Service, whenever one of the Image Write Service components crashes",
                    "Scalability of the Image File Storage in terms of the storage capacity",
                    "Availability of the Image File Storage, whenever the Image File Storage component crashes",
                    "Performance of the Image Write Service"
                ]
            },
            {
                "questionId": "PerformanceSenario",
                "content": "\n\tConsider the following scenario for performance\n\t\n\t\\begin{quote}\n\t\tDuring the enrollment period the FenixEDU system should be able to completely enroll 5.000 students in less than 30 minutes.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The source of stimulus is the FenixEDU system",
                    "The stimulus is periodic",
                    "The environment is overloaded",
                    "The measure of the response is throughput"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-11B.tex",
        "quizTitle": "..-data-2017-test-1-test-11B",
        "questions": [
            {
                "questionId": "ElevatorCommon",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tFinding the appropriate context requires the architect to visit many floors of the organization.\n\t\\end{quote}\n\t\n\tThis sentence reflects the fact that an architecture is\n\n    ",
                "image": [],
                "options": [
                    "The result of decisions that are made at the \"upper floors\" of the organization",
                    "The sole decision of an architect",
                    "A common understanding to be achieve among all the system stakeholders",
                    "A set of software elements and their relations"
                ]
            },
            {
                "questionId": "PerformanceSenario",
                "content": "\n\tConsider the following scenario for performance\n\t\n\t\\begin{quote}\n\t\tDuring the enrollment period the FenixEDU system should be able to completely enroll 5.000 students in less than 30 minutes.\n\t\\end{quote}\n\t\n    ",
                "image": [],
                "options": [
                    "The source of stimulus is the FenixEDU system",
                    "The stimulus is periodic",
                    "The environment is overloaded",
                    "The measure of the response is throughput"
                ]
            },
            {
                "questionId": "MicroservicesProject",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tThe microservice approach to division ..., splitting up into services organized around business capability. Such services take a broad-stack implementation of software for that business area, including user-interface, persistent storage, and any external collaborations. Consequently the teams are cross-functional, including the full range of skills required for the development: user-experience, database, and project management.\n\t\\end{quote}\n\t\n\tConsidering the architecture influence cycle, which influence factor it is being considered?\n\n    ",
                "image": [],
                "options": [
                    "Commercial",
                    "Technical",
                    "Project",
                    "Professional"
                ]
            },
            {
                "questionId": "ScalablePartitioning",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application} which resulted from the enrichment of another architectural view by adding another \\emph{Image File Storage} pair, in the figure they are distinguished by 1 and 2. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\n\tWhich quality results from this enrichment, that was not provided by the previous version of the architecture?\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Availability of the Image Write Service, whenever one of the Image Write Service components crashes",
                    "Scalability of the Image File Storage in terms of the storage capacity",
                    "Availability of the Image File Storage, whenever the Image File Storage component crashes",
                    "Performance of the Image Write Service"
                ]
            },
            {
                "questionId": "QueuesQualities",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\n\tThis solution \\textbf{does not} provide the following quality:\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Availability whenever the server running the tasks crashes, the tasks are restarted and eventually finished",
                    "Performance of the tasks execution, scheduling of tasks can be optimized for the particular context of the system",
                    "Performance of the services being executed by the clients, they can execute other actions while waiting for the response",
                    "Simple programming model, the clients only need to concern about the business logic of the application, the remote services are transparent"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-12A.tex",
        "quizTitle": "..-data-2017-test-1-test-12A",
        "questions": [
            {
                "questionId": "ElevatorInteroperability",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tOnce a developer approached our architecture team with an application that had \"significant scalability demands\". A quick look at the architecture diagram revealed numerous components communicating via XML messages. When I pointed out that this may be the very reason for the performance concerns, I was quickly informed that this was an architecture decision and couldn't be changed. Assuming the architects are smart and well-intentioned, they may have thought about interoperability when they made this decision but may be unaware of the negative impact on run-time performance and development velocity.\n\t\\end{quote}\n\t\n\tFrom this sentence we can conclude that\n\t\t\n    ",
                "image": [],
                "options": [
                    "Interoperability is a quality that as lower priority than performance",
                    "Scalability should be the quality to be achieved first by any architecture",
                    "That the use of XML technology for interoperability is not a correct decision",
                    "None of the above"
                ]
            },
            {
                "questionId": "MicroservicesModularity",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tAs well as the fact that services are independently deployable and scalable, each service also provides a firm module boundary, even allowing for different services to be written in different programming languages. They can also be managed by different teams.\n\t\\end{quote}\n\t\n\tWhich is not necessarily an advantage of being independently deployable and scalable?\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Availability",
                    "Modifiability",
                    "Time to market"
                ]
            },
            {
                "questionId": "ReadsAndWrites",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application}. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The number of Image Write Service components should be the same of the number Image Retrieval Service components",
                    "The hardware where of Image Write Service components execute should have the same capabilities of the hardware where Image Retrieval Service components run",
                    "Both components, the Image Write Service and the Image Retrieval Service, should be designed using an synchronous model of interactions, where a thread is associated with each request",
                    "The separation of write and retrieval services allows them do scale independently"
                ]
            },
            {
                "questionId": "QueuesSyncAndAsync",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server (asynchronous) and compare with another architectural design (synchronous) where a thread is associated with each request.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The synchronous solution requires less memory than asynchronous solution",
                    "The asynchronous solution can support a larger number of simultaneous requests",
                    "In the synchronous solution a task can be associated, during its execution, with different execution entities, e.g. thread",
                    "In the asynchronous solution a task is always associated, during its execution, with the same execution entity, e.g. thread"
                ]
            },
            {
                "questionId": "PerformanceTacticsOne",
                "content": "\n\tWhich of the following tactics is not related with the management of resources\n\t\n    ",
                "image": [],
                "options": [
                    "Introduce concurrency",
                    "Limit event response",
                    "Maintain multiple copies of data",
                    "Schedule resources"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-12B.tex",
        "quizTitle": "..-data-2017-test-1-test-12B",
        "questions": [
            {
                "questionId": "QueuesSyncAndAsync",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server (asynchronous) and compare with another architectural design (synchronous) where a thread is associated with each request.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The synchronous solution requires less memory than asynchronous solution",
                    "The asynchronous solution can support a larger number of simultaneous requests",
                    "In the synchronous solution a task can be associated, during its execution, with different execution entities, e.g. thread",
                    "In the asynchronous solution a task is always associated, during its execution, with the same execution entity, e.g. thread"
                ]
            },
            {
                "questionId": "ElevatorInteroperability",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tOnce a developer approached our architecture team with an application that had \"significant scalability demands\". A quick look at the architecture diagram revealed numerous components communicating via XML messages. When I pointed out that this may be the very reason for the performance concerns, I was quickly informed that this was an architecture decision and couldn't be changed. Assuming the architects are smart and well-intentioned, they may have thought about interoperability when they made this decision but may be unaware of the negative impact on run-time performance and development velocity.\n\t\\end{quote}\n\t\n\tFrom this sentence we can conclude that\n\t\t\n    ",
                "image": [],
                "options": [
                    "Interoperability is a quality that as lower priority than performance",
                    "Scalability should be the quality to be achieved first by any architecture",
                    "That the use of XML technology for interoperability is not a correct decision",
                    "None of the above"
                ]
            },
            {
                "questionId": "MicroservicesModularity",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tAs well as the fact that services are independently deployable and scalable, each service also provides a firm module boundary, even allowing for different services to be written in different programming languages. They can also be managed by different teams.\n\t\\end{quote}\n\t\n\tWhich is not necessarily an advantage of being independently deployable and scalable?\n\n    ",
                "image": [],
                "options": [
                    "Performance",
                    "Availability",
                    "Modifiability",
                    "Time to market"
                ]
            },
            {
                "questionId": "ReadsAndWrites",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application}. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The number of Image Write Service components should be the same of the number Image Retrieval Service components",
                    "The hardware where of Image Write Service components execute should have the same capabilities of the hardware where Image Retrieval Service components run",
                    "Both components, the Image Write Service and the Image Retrieval Service, should be designed using an synchronous model of interactions, where a thread is associated with each request",
                    "The separation of write and retrieval services allows them do scale independently"
                ]
            },
            {
                "questionId": "PerformanceTacticsOne",
                "content": "\n\tWhich of the following tactics is not related with the management of resources\n\t\n    ",
                "image": [],
                "options": [
                    "Introduce concurrency",
                    "Limit event response",
                    "Maintain multiple copies of data",
                    "Schedule resources"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-13A.tex",
        "quizTitle": "..-data-2017-test-1-test-13A",
        "questions": [
            {
                "questionId": "DataStorageAvailability",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application}. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\n\tThe replication between the Image File Storage \\emph{n} and Image File Storage \\emph{nb}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Provides the quality of availability",
                    "Provides the quality of performance",
                    "Provides the quality of modifiability",
                    "Does not provide any additional quality"
                ]
            },
            {
                "questionId": "MicroservicesConsistency",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tDecentralizing responsibility for data across microservices has implications for managing updates. The common approach to dealing with updates has been to use transactions to guarantee consistency when updating multiple resources. This approach is often used within monoliths.\n\t\\end{quote}\n\t\n\tWhat is the impact of decentralizing responsibility for data across microservices?\n\n    ",
                "image": [],
                "options": [
                    "The need to use a two-phase commit protocol",
                    "The need to have a tight integration of the development teams",
                    "The need to have eventual consistency and compensating operations",
                    "The need to deploy all the microservices simultaneously"
                ]
            },
            {
                "questionId": "ElevatorDevops",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tA lot of large companies have discovered the benefits of cloud computing but see it mainly as an infrastructure topic. I feel that's misguided: being able to get compute resources more quickly and cheaply is useful, but the real business benefit lies in a fully automated tool chain that minimizes the time in which a normal code change can go into production. Not quite coincidentally, this is my favorite definition of DevOps.\n\t\\end{quote}\n\t\n\tIn the author's opinion\n\t\t\n    ",
                "image": [],
                "options": [
                    "Time to market is the most important impact of cloud computing in an architecture",
                    "Reduction of cost is the most important impact of cloud computing in an architecture",
                    "Cloud computing has impact on the business but it is not an architectural aspect",
                    "Using cloud computing we cannot delay some architectural decisions"
                ]
            },
            {
                "questionId": "QueuesCrash",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server (asynchronous) and compare with another architectural design (synchronous) where a thread is associated with each request.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\n\tConsider a situation where the server that processes the tasks crashes\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "In the synchronous solution only some of the tasks that are being executed are lost and they have to be resubmitted by the client",
                    "In the asynchronous solution the tasks that are being executed are lost and they have to be resubmitted by the client",
                    "In the asynchronous solution it is possible to provide an implement where the tasks being executed are finished without requiring the client to resubmitted them",
                    "In the synchronous solution the tasks being executed are finished without requiring the client to resubmitted them"
                ]
            },
            {
                "questionId": "PerformanceTacticsTwo",
                "content": "\n\tWhich of the following tactics is not related with the control of resource demand\n\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Bound execution times",
                    "Maintain multiple copies of computation",
                    "Increase resource efficiency"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-1/test-13B.tex",
        "quizTitle": "..-data-2017-test-1-test-13B",
        "questions": [
            {
                "questionId": "QueuesCrash",
                "content": "\n\tConsider the following figure that presents a Queue where client applications write their requests to be processed by a server (asynchronous) and compare with another architectural design (synchronous) where a thread is associated with each request.\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{Queues}\n\t\\end{center}\n\t\n\tConsider a situation where the server that processes the tasks crashes\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/Queues.png",
                        "width": 100
                    }
                ],
                "options": [
                    "In the synchronous solution only some of the tasks that are being executed are lost and they have to be resubmitted by the client",
                    "In the asynchronous solution the tasks that are being executed are lost and they have to be resubmitted by the client",
                    "In the asynchronous solution it is possible to provide an implement where the tasks being executed are finished without requiring the client to resubmitted them",
                    "In the synchronous solution the tasks being executed are finished without requiring the client to resubmitted them"
                ]
            },
            {
                "questionId": "DataStorageAvailability",
                "content": "\n\tConsider the following figure that presents an architectural view of an \\emph{Image Hosting Application}. \n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=100mm]{ScalablePartitioning}\n\t\\end{center}\n\t\n\tThe replication between the Image File Storage \\emph{n} and Image File Storage \\emph{nb}\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-1/ScalablePartitioning.png",
                        "width": 100
                    }
                ],
                "options": [
                    "Provides the quality of availability",
                    "Provides the quality of performance",
                    "Provides the quality of modifiability",
                    "Does not provide any additional quality"
                ]
            },
            {
                "questionId": "MicroservicesConsistency",
                "content": "\n\tIn the description of the Microservices Architecture by James Lewis and Martin Fowler can be read:\n\t\n\t\\begin{quote}\n\t\tDecentralizing responsibility for data across microservices has implications for managing updates. The common approach to dealing with updates has been to use transactions to guarantee consistency when updating multiple resources. This approach is often used within monoliths.\n\t\\end{quote}\n\t\n\tWhat is the impact of decentralizing responsibility for data across microservices?\n\n    ",
                "image": [],
                "options": [
                    "The need to use a two-phase commit protocol",
                    "The need to have a tight integration of the development teams",
                    "The need to have eventual consistency and compensating operations",
                    "The need to deploy all the microservices simultaneously"
                ]
            },
            {
                "questionId": "PerformanceTacticsTwo",
                "content": "\n\tWhich of the following tactics is not related with the control of resource demand\n\t\n    ",
                "image": [],
                "options": [
                    "Manage sampling rate",
                    "Bound execution times",
                    "Maintain multiple copies of computation",
                    "Increase resource efficiency"
                ]
            },
            {
                "questionId": "ElevatorDevops",
                "content": "\n\tIn the Architect Elevator article by Gregor Hohpe can be read:\n\t\n\t\\begin{quote}\n\t\tA lot of large companies have discovered the benefits of cloud computing but see it mainly as an infrastructure topic. I feel that's misguided: being able to get compute resources more quickly and cheaply is useful, but the real business benefit lies in a fully automated tool chain that minimizes the time in which a normal code change can go into production. Not quite coincidentally, this is my favorite definition of DevOps.\n\t\\end{quote}\n\t\n\tIn the author's opinion\n\t\t\n    ",
                "image": [],
                "options": [
                    "Time to market is the most important impact of cloud computing in an architecture",
                    "Reduction of cost is the most important impact of cloud computing in an architecture",
                    "Cloud computing has impact on the business but it is not an architectural aspect",
                    "Using cloud computing we cannot delay some architectural decisions"
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-21-A.tex",
        "quizTitle": "..-data-2017-test-2-test-21-A",
        "questions": [
            {
                "questionId": "AvailabilityVotingFirst",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Ping/Echo.",
                    "Retry.",
                    "Voting.",
                    "Passive Redundancy."
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that makes the original modules independent.",
                    "Increases the cohesion between the two modules.",
                    "May conflict with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "FenixADD",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            },
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Views of this type are mostly useful to guide the testing of the system.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "GraphiteComposerUIPerformance",
                "content": "\n\t  The \\emph{Composer UI} component of Graphite system, described as - \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL} - to be effective needs to show to the user the changes she performs in the graph such that she has immediate feedback whenever she clicks on a option. To do so, the architecture needs to include\n\n    ",
                "image": [],
                "options": [
                    "Task Model tactics.",
                    "System Model tactics.",
                    "performance tactics.",
                    "User Model tactics."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-21-B.tex",
        "quizTitle": "..-data-2017-test-2-test-21-B",
        "questions": [
            {
                "questionId": "ModuleViewtypeOne",
                "content": "\n\tConsider the Decomposition architectural style of the Module viewtype\n\t\t\n    ",
                "image": [],
                "options": [
                    "Its main goal is to establish the reusability qualities of the architecture.",
                    "Project managers are not interested in views that use this style because it lacks the necessary level of detail.",
                    "Views of this type are mostly useful to guide the testing of the system.",
                    "There should be at least one view of the system using this architectural style."
                ]
            },
            {
                "questionId": "GraphiteComposerUIPerformance",
                "content": "\n\t  The \\emph{Composer UI} component of Graphite system, described as - \\emph{Graphite's Composer UI provides a point-and-click method to create a graph from which you can simply copy and paste the URL} - to be effective needs to show to the user the changes she performs in the graph such that she has immediate feedback whenever she clicks on a option. To do so, the architecture needs to include\n\n    ",
                "image": [],
                "options": [
                    "Task Model tactics.",
                    "System Model tactics.",
                    "performance tactics.",
                    "User Model tactics."
                ]
            },
            {
                "questionId": "AvailabilityVotingFirst",
                "content": "\n    There are several tactics to satisfy availability requirements,\n    which may be applied depending on the concrete requirement that we\n    want to satisfy.  Assuming that you want to detect faults of type\n    \\emph{response} in your system, which tactic is more adequate?\n\n    ",
                "image": [],
                "options": [
                    "Ping/Echo.",
                    "Retry.",
                    "Voting.",
                    "Passive Redundancy."
                ]
            },
            {
                "questionId": "ModifiabilityOne",
                "content": "\n\tThe modifiability tactic Use an Intermediary between two modules\n\t\t\n    ",
                "image": [],
                "options": [
                    "Has as main goal the reduction of the modules' size.",
                    "Results in the creation of a third module that makes the original modules independent.",
                    "Increases the cohesion between the two modules.",
                    "May conflict with the Reduce Overhead performance tactic."
                ]
            },
            {
                "questionId": "FenixADD",
                "content": "\n\tWhen applying Attribute-Driven Design (ADD) to the FenixEdu system the creation of a view where there are redundant web servers, load balancers and database servers \n\n    ",
                "image": [],
                "options": [
                    "Results from a utility tree for performance.",
                    "Results from a single availability scenario.",
                    "Results from the application of a single ADD iteration.",
                    "Results from the application of several ADD iterations."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-22-A.tex",
        "quizTitle": "..-data-2017-test-2-test-22-A",
        "questions": [
            {
                "questionId": "AvailabilityVotingSecond",
                "content": "\n\t  The availability quality can be supported by a voting tactic in order to identify faults of\n\n      ",
                "image": [],
                "options": [
                    "Programming, if the components execute modules developed by different teams.",
                    "Hardware, if there is hardware redundancy.",
                    "Operating Systems, if redundant components execute on top of different operating systems..",
                    "All the previous options."
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator adds more copies of computation of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario and the measure of the response is 10 minutes latency.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "LowArchitecturalImpact",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a low impact on the architecture but a high business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture because it has little effect in the architecture.",
                    "This ASR requires a specific architectural design because it profoundly affects the architecture.",
                    "The cost of meeting the ASR after development starts is too high.",
                    "Any ASR that has a high business value cannot have a low architecture impact because it needs to be supported by the architecture."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            },
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Interoperability.",
                    "Availability.",
                    "Security."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-22-B.tex",
        "quizTitle": "..-data-2017-test-2-test-22-B",
        "questions": [
            {
                "questionId": "GraphiteScenarioTacticsOne",
                "content": "\n    In the Graphite system the component \\emph{carbon} provides to \\emph{webapp} components an access interface to the \\emph{buffers} in order to improve the quality of\n\n    ",
                "image": [],
                "options": [
                    "Performance.",
                    "Interoperability.",
                    "Availability.",
                    "Security."
                ]
            },
            {
                "questionId": "AvailabilityVotingSecond",
                "content": "\n\t  The availability quality can be supported by a voting tactic in order to identify faults of\n\n      ",
                "image": [],
                "options": [
                    "Programming, if the components execute modules developed by different teams.",
                    "Hardware, if there is hardware redundancy.",
                    "Operating Systems, if redundant components execute on top of different operating systems..",
                    "All the previous options."
                ]
            },
            {
                "questionId": "LowArchitecturalImpact",
                "content": "\n\tConsider an architecturally significant requirement (ASR) that has a low impact on the architecture but a high business value\n\n    ",
                "image": [],
                "options": [
                    "This ASR can easily be supported by the architecture because it has little effect in the architecture.",
                    "This ASR requires a specific architectural design because it profoundly affects the architecture.",
                    "The cost of meeting the ASR after development starts is too high.",
                    "Any ASR that has a high business value cannot have a low architecture impact because it needs to be supported by the architecture."
                ]
            },
            {
                "questionId": "ModifiabilityTwo",
                "content": "\n\tConsider the following scenario: \\emph{A system administrator adds more copies of computation of the system, each one using a different database, and is able to do it in less than 10 minutes.}\n\t\t\n    ",
                "image": [],
                "options": [
                    "This is a performance scenario and the measure of the response is 10 minutes latency.",
                    "This is a modifiability scenario which has a defer binding tactic.",
                    "This is not a modifiability scenario because the source of the stimulus cannot be a system administrator.",
                    "This is a modifiability scenario and its environment design time."
                ]
            },
            {
                "questionId": "Decomposition",
                "content": "\n\tThe Decomposition architectural style of the Module viewtype \n\t\n    ",
                "image": [],
                "options": [
                    "Is applied only once at the beginning of the architectural design process.",
                    "Is applied at the begin of the architectural design process but may be necessary to redo it later.",
                    "Is mostly driven by the security attribute quality.",
                    "Follows a bottom-up decomposition process of the system."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-23-A.tex",
        "quizTitle": "..-data-2017-test-2-test-23-A",
        "questions": [
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "ModifiabilityThree",
                "content": "\n\tConsider the modifiability quality and the cost of change.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A low cost of change may imply a high cost of development.",
                    "A low cost of change implies a low cost of development, because changing the code is part of development.",
                    "There is no relation between the cost of change and the cost of development.",
                    "The cost of change is higher if it occurs at runtime."
                ]
            },
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n  A software system is usually described using different architectural views\n\n  ",
                "image": [],
                "options": [
                    "Each view contains a single architectural style.",
                    "Views need to contain more than one architectural style.",
                    "A view may not contain any architectural style.",
                    "None of the above."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability and transactions tactic is required to solve the problem.",
                    "The quality addressed is performance and a limit event response is required to solve the problem.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-2/test-23-B.tex",
        "quizTitle": "..-data-2017-test-2-test-23-B",
        "questions": [
            {
                "questionId": "IterativeDesign",
                "content": "\n\tDesigning an architecture\n\n    ",
                "image": [],
                "options": [
                    "Is driven by functional requirements.",
                    "Is done in a single step, after all the tactics were identified.",
                    "Is a top-down process where a initial decomposition is chosen and it is successively decomposed without changing the initial decisions.",
                    "Is an iterative process where architectural designs are proposed as hypothesis and tested."
                ]
            },
            {
                "questionId": "ArchitecturalViews",
                "content": "\n  A software system is usually described using different architectural views\n\n  ",
                "image": [],
                "options": [
                    "Each view contains a single architectural style.",
                    "Views need to contain more than one architectural style.",
                    "A view may not contain any architectural style.",
                    "None of the above."
                ]
            },
            {
                "questionId": "GraphiteReliability",
                "content": "\n\tIn the Graphite system description can be read:\n\t\n\t\\begin{quote}\n\t\tWe've got 600,000 metrics that update every minute and we're assuming our storage can only keep up with 60,000 write operations per minute. This means we will have approximately 10 minutes worth of data sitting in carbon's queues at any given time. To a user this means that the graphs they request from the Graphite webapp will be missing the most recent 10 minutes of data.\n\t\\end{quote}\n\n    ",
                "image": [],
                "options": [
                    "The quality addressed is availability and transactions tactic is required to solve the problem.",
                    "The quality addressed is performance and a limit event response is required to solve the problem.",
                    "The quality addressed is availability and a voting design tactic is required to solve the problem.",
                    "The quality addressed is performance and a maintain multiple copies of data design tactic is required to solve the problem."
                ]
            },
            {
                "questionId": "Voting",
                "content": "\n\tA voting tactic can be used to\n\n    ",
                "image": [],
                "options": [
                    "Prevent a fault in hardware.",
                    "Prevent a fault in software.",
                    "Prevent a fault in a process.",
                    "Detect a fault."
                ]
            },
            {
                "questionId": "ModifiabilityThree",
                "content": "\n\tConsider the modifiability quality and the cost of change.\n\t\t\n    ",
                "image": [],
                "options": [
                    "A low cost of change may imply a high cost of development.",
                    "A low cost of change implies a low cost of development, because changing the code is part of development.",
                    "There is no relation between the cost of change and the cost of development.",
                    "The cost of change is higher if it occurs at runtime."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-31A.tex",
        "quizTitle": "..-data-2017-test-3-test-31A",
        "questions": [
            {
                "questionId": "ModuleStylesOne",
                "content": "\n\t  Suppose that in the development of an enterprise application (which needs to access a\n\t  database) it was decided to use the FenixFramework library to simplify the development\n\t  of the data access code. Which architectural style is the most adequate to represent this\n\t  decision?\n\t  \n\t  ",
                "image": [],
                "options": [
                    "The Aspects style.",
                    "The Generalisation style.",
                    "The Decomposition style.",
                    "The Shared-data style."
                ]
            },
            {
                "questionId": "AdventureBuilderComponentAndConnectorOne",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server.",
                    "Service-oriented architecture, and Shared-data.",
                    "Service-oriented architecture, Shared-data, and Client-server.",
                    "Service-oriented architecture, Shared-data, Client-server and Peer-to-peer."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleOne",
                "content": "\n\tConsider the following modifiability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tA new business partner (airline, lodging, or activity provider) that uses its own web services interface is added to the system in no more than 10 person-days of effort for the implementation. The business goal is easy integration with new business partners.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module does not use the interfaces a new business partner has to implement."
                ]
            },
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view.",
                    "It represents a relation between a connector's role and a port of one of its internal components.",
                    "It represents a relation between a component's port and a port of one of its internal components.",
                    "It represents a relation between a component's port and a connector's role."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-31B.tex",
        "quizTitle": "..-data-2017-test-3-test-31B",
        "questions": [
            {
                "questionId": "AdventureBuilderComponentAndConnectorOne",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tIn this view the following architectural styles are used\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "Service-oriented architecture, and Client-server.",
                    "Service-oriented architecture, and Shared-data.",
                    "Service-oriented architecture, Shared-data, and Client-server.",
                    "Service-oriented architecture, Shared-data, Client-server and Peer-to-peer."
                ]
            },
            {
                "questionId": "ModuleStylesOne",
                "content": "\n\t  Suppose that in the development of an enterprise application (which needs to access a\n\t  database) it was decided to use the FenixFramework library to simplify the development\n\t  of the data access code. Which architectural style is the most adequate to represent this\n\t  decision?\n\t  \n\t  ",
                "image": [],
                "options": [
                    "The Aspects style.",
                    "The Generalisation style.",
                    "The Decomposition style.",
                    "The Shared-data style."
                ]
            },
            {
                "questionId": "InterfaceDelegation",
                "content": "\n\tConsider the concept of interface delegation \n\t\t\n    ",
                "image": [],
                "options": [
                    "It corresponds to a particular case of a specialization in a generalization view.",
                    "It represents a relation between a connector's role and a port of one of its internal components.",
                    "It represents a relation between a component's port and a port of one of its internal components.",
                    "It represents a relation between a component's port and a connector's role."
                ]
            },
            {
                "questionId": "PipeFilterComposition",
                "content": "\n\tThe Pipe-and-Filter style allows composition of filters \n\n    ",
                "image": [],
                "options": [
                    "But when the filters are executed sequentially the composition power is reduced.",
                    "Which improves modifiability, because filters are decoupled through pipes.",
                    "But the size of buffers may reduce the composition power.",
                    "And filters do not have to agree on the data formats."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleOne",
                "content": "\n\tConsider the following modifiability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tA new business partner (airline, lodging, or activity provider) that uses its own web services interface is added to the system in no more than 10 person-days of effort for the implementation. The business goal is easy integration with new business partners.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module does not use the interfaces a new business partner has to implement."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-32A.tex",
        "quizTitle": "..-data-2017-test-3-test-32A",
        "questions": [
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events.",
                    "All the published events are received by their subscribing components.",
                    "The events should be received by the same order they are sent.",
                    "The set of events types are predefined at initialization time."
                ]
            },
            {
                "questionId": "AdventureBuilderComponentAndConnectorSecond",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tIn this view it is possible to reason that\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "If the OPC crashes the Consumer Website can continue to provide service in degraded mode.",
                    "If the OPC crashes the Consumer Website can continue to provide service in normal mode.",
                    "If the Adventure Catalog BD crashes the Consumer Website can continue to present the Adventure Builder offers.",
                    "If a Bank component is not available the OPC cannot continue to provide service."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleThree",
                "content": "\n\tConsider the following performance/scalability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tUp to 500 users click to see the catalog of adventure packages following a random distribution over 1 minute; the system is under normal operating conditions; the maximal latency to serve the first page of content is under 5 seconds; average latency for same is less than 2 seconds. If required, the system should easily support an increase in the number of simultaneous requests while maintaining the same latency per request.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario.",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module to allow the execution of the \\texttt{Consumer Website} module in a component that can have multiple copies of computation.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules."
                ]
            },
            {
                "questionId": "ConnectorAttach",
                "content": "\n\tA connector may be attached to components of different types because\n\t\t\n    ",
                "image": [],
                "options": [
                    "The type of a connector does not depend on the type of its roles.",
                    "Components of different types may have ports of the same type.",
                    "The attachment is a runtime relation which dynamically manages type compliance.",
                    "The attachment between components and connectors only depends on their ports and roles types."
                ]
            },
            {
                "questionId": "UsesOne",
                "content": "\n  Which\n  architectural style is \n  adequate for planning incremental\n  releases?\n\n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Generalisation style.",
                    "The Uses style.",
                    "The Aspects style."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-32B.tex",
        "quizTitle": "..-data-2017-test-3-test-32B",
        "questions": [
            {
                "questionId": "AdventureBuilderComponentAndConnectorSecond",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tIn this view it is possible to reason that\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "If the OPC crashes the Consumer Website can continue to provide service in degraded mode.",
                    "If the OPC crashes the Consumer Website can continue to provide service in normal mode.",
                    "If the Adventure Catalog BD crashes the Consumer Website can continue to present the Adventure Builder offers.",
                    "If a Bank component is not available the OPC cannot continue to provide service."
                ]
            },
            {
                "questionId": "PublishSubscribe",
                "content": "\n\tIn the Publish-Subscribe architectural style \n\t\n    ",
                "image": [],
                "options": [
                    "A component can subscribe to events.",
                    "All the published events are received by their subscribing components.",
                    "The events should be received by the same order they are sent.",
                    "The set of events types are predefined at initialization time."
                ]
            },
            {
                "questionId": "UsesOne",
                "content": "\n  Which\n  architectural style is \n  adequate for planning incremental\n  releases?\n\n  ",
                "image": [],
                "options": [
                    "The Decomposition style.",
                    "The Generalisation style.",
                    "The Uses style.",
                    "The Aspects style."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleThree",
                "content": "\n\tConsider the following performance/scalability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tUp to 500 users click to see the catalog of adventure packages following a random distribution over 1 minute; the system is under normal operating conditions; the maximal latency to serve the first page of content is under 5 seconds; average latency for same is less than 2 seconds. If required, the system should easily support an increase in the number of simultaneous requests while maintaining the same latency per request.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario.",
                    "The view addresses the scenario because it separates the \\texttt{Consumer Website} module from the \\texttt{OpcApp} module to allow the execution of the \\texttt{Consumer Website} module in a component that can have multiple copies of computation.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules."
                ]
            },
            {
                "questionId": "ConnectorAttach",
                "content": "\n\tA connector may be attached to components of different types because\n\t\t\n    ",
                "image": [],
                "options": [
                    "The type of a connector does not depend on the type of its roles.",
                    "Components of different types may have ports of the same type.",
                    "The attachment is a runtime relation which dynamically manages type compliance.",
                    "The attachment between components and connectors only depends on their ports and roles types."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-33A.tex",
        "quizTitle": "..-data-2017-test-3-test-33A",
        "questions": [
            {
                "questionId": "LayeredAspectsDataModelOne",
                "content": "\n  In a layered architecture composed by four layers, where the topmost\n  layer is the layer number 1 and the bottommost layer is the layer\n  number 4, which of the layers is more modifiable?\n\n    ",
                "image": [],
                "options": [
                    "Layer 1.",
                    "Layer 4.",
                    "In a layered architecture all layers are equally modifiable.",
                    "Modifiability is not made easier by a layered architecture."
                ]
            },
            {
                "questionId": "AdventureBuilderComponentAndConnectorThird",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tThis view \\textbf{does not} apply the architectural style\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "Client-server.",
                    "Publish-subscribe.",
                    "Shared-data.",
                    "Peer-to-peer."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleTwo",
                "content": "\n\tConsider the following availability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site is available to the user 24x7. If an instance of OPC application fails, the fault is detected and the system administrator is notified in 30 seconds; the system continues taking order requests; another OPC instance is created; and data remains in consistent state.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because the uses relation between the \\texttt{Consumer Website} module and the \\texttt{OpcApp} module has the require properties.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules."
                ]
            },
            {
                "questionId": "ComponentViewType",
                "content": "\n\tThe quality(ies) that is(are) more relevant to views of the component-and-connector viewtype is(are):\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability and Performance.",
                    "Testability and Modifiability.",
                    "Maintainability and Availability."
                ]
            },
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n    ",
                "image": [],
                "options": [
                    "The file transfer has to follow the same path of nodes used to identify where the file was located.",
                    "The peer initiating the request for a file needs to know where the file is located.",
                    "If a peer providing a file crashes the file will not be downloaded.",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-3/test-33B.tex",
        "quizTitle": "..-data-2017-test-3-test-33B",
        "questions": [
            {
                "questionId": "AdventureBuilderComponentAndConnectorThird",
                "content": "\n\tConsider the following view of the Adventure Builder system\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderComponentAndConnector}\n\t\\end{center}\n\t\n\tThis view \\textbf{does not} apply the architectural style\n\t\n\t\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderComponentAndConnector.png",
                        "width": 95
                    }
                ],
                "options": [
                    "Client-server.",
                    "Publish-subscribe.",
                    "Shared-data.",
                    "Peer-to-peer."
                ]
            },
            {
                "questionId": "LayeredAspectsDataModelOne",
                "content": "\n  In a layered architecture composed by four layers, where the topmost\n  layer is the layer number 1 and the bottommost layer is the layer\n  number 4, which of the layers is more modifiable?\n\n    ",
                "image": [],
                "options": [
                    "Layer 1.",
                    "Layer 4.",
                    "In a layered architecture all layers are equally modifiable.",
                    "Modifiability is not made easier by a layered architecture."
                ]
            },
            {
                "questionId": "AdventureBuilderModuleTwo",
                "content": "\n\tConsider the following availability scenario for the Adventure Builder system \n\t\n\t\\begin{quote}\n\t\tThe Consumer Web site is available to the user 24x7. If an instance of OPC application fails, the fault is detected and the system administrator is notified in 30 seconds; the system continues taking order requests; another OPC instance is created; and data remains in consistent state.\n\t\\end{quote}\n\t\n\tand the following architectural view\n\t\n\t\\begin{center}\n\t\t\\includegraphics[width=95mm]{AdventureBuilderModule}\n\t\\end{center}\n\t\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-3/AdventureBuilderModule.png",
                        "width": 95
                    }
                ],
                "options": [
                    "The view does not address the scenario",
                    "The view addresses the scenario because the uses relation between the \\texttt{Consumer Website} module and the \\texttt{OpcApp} module has the require properties.",
                    "The view addresses the scenario because it separates the modules that represent the interfaces a new business partner has to implement.",
                    "The view addresses the scenario because the \\texttt{Consumer Website} module uses the \\texttt{gwt} and \\texttt{waf} modules."
                ]
            },
            {
                "questionId": "PeerToPeerSpace",
                "content": "\n\tThe Peer-to-Peer architectural style provides high scalability and availability. In the context of a file sharing system  \n\t\n    ",
                "image": [],
                "options": [
                    "The file transfer has to follow the same path of nodes used to identify where the file was located.",
                    "The peer initiating the request for a file needs to know where the file is located.",
                    "If a peer providing a file crashes the file will not be downloaded.",
                    "The price for high scalability and availability is the need to have several replicas of the files to be shared."
                ]
            },
            {
                "questionId": "ComponentViewType",
                "content": "\n\tThe quality(ies) that is(are) more relevant to views of the component-and-connector viewtype is(are):\n\t\t\n    ",
                "image": [],
                "options": [
                    "Modifiability.",
                    "Availability and Performance.",
                    "Testability and Modifiability.",
                    "Maintainability and Availability."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-41A.tex",
        "quizTitle": "..-data-2017-test-4-test-41A",
        "questions": [
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n    ",
                "image": [],
                "options": [
                    "Applies layers to tiers.",
                    "Restricts the communication between components because, for instance, a group of components should be located in the same hardware.",
                    "Is an extension of the Client-Server architectural style.",
                    "Defines tiers as components."
                ]
            },
            {
                "questionId": "DVDTopDecomposition",
                "content": "\n\tConsider the following decomposition view of the Catalog of DVD case study.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{dvd-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The decomposition was driven by a defer binding tactic.",
                    "The decomposition was driven by a quality that is supported by a restrict dependencies tactic.",
                    "The decomposition was driven by a split module tactic.",
                    "The decomposition was driven by a quality that is supported by an encapsulate tactic."
                ]
            },
            {
                "questionId": "GraphitePerformanceScenario",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following view that represents the internal behavior of the \\emph{Carbon} component, where the components \\texttt{r1,... , rn, w} are threads and \\texttt{q1, ..., qn} are buffers. This view shows the Graphite's architecture support of\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-carbon}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-carbon.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A performance scenario associated with the throughput of writing data points to disk.",
                    "A performance scenario associated with the latency of writing data points to disk.",
                    "An availability scenario associated with a fault in the \\emph{Carbon} component.",
                    "A usability scenario."
                ]
            },
            {
                "questionId": "OrderPadPortability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The decision whether use a Native application or HTML5 for the implementation of the client in the Pad was taken because\n\t\n    ",
                "image": [],
                "options": [
                    "HTML5 provides better portability qualities.",
                    "Native applications provide better modifiability qualities.",
                    "HTML5 provides better usability qualities.",
                    "Native applications provide better support for working offline."
                ]
            },
            {
                "questionId": "MicroservicesOne",
                "content": "\n\tConsider the architectural solutions for microservices architectures that use the event sourcing technique. This technique has the following advantage \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Simplifies the evolution of the event schema.",
                    "Simplifies the query operations in  the event store.",
                    "Allows the querying of a past state.",
                    "Provides a programming model developers are familiar with."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-41B.tex",
        "quizTitle": "..-data-2017-test-4-test-41B",
        "questions": [
            {
                "questionId": "GraphitePerformanceScenario",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following view that represents the internal behavior of the \\emph{Carbon} component, where the components \\texttt{r1,... , rn, w} are threads and \\texttt{q1, ..., qn} are buffers. This view shows the Graphite's architecture support of\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-carbon}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-carbon.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A performance scenario associated with the throughput of writing data points to disk.",
                    "A performance scenario associated with the latency of writing data points to disk.",
                    "An availability scenario associated with a fault in the \\emph{Carbon} component.",
                    "A usability scenario."
                ]
            },
            {
                "questionId": "MicroservicesOne",
                "content": "\n\tConsider the architectural solutions for microservices architectures that use the event sourcing technique. This technique has the following advantage \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Simplifies the evolution of the event schema.",
                    "Simplifies the query operations in  the event store.",
                    "Allows the querying of a past state.",
                    "Provides a programming model developers are familiar with."
                ]
            },
            {
                "questionId": "Tiers",
                "content": "\n\tThe Tiers architectural style\n\t\n    ",
                "image": [],
                "options": [
                    "Applies layers to tiers.",
                    "Restricts the communication between components because, for instance, a group of components should be located in the same hardware.",
                    "Is an extension of the Client-Server architectural style.",
                    "Defines tiers as components."
                ]
            },
            {
                "questionId": "DVDTopDecomposition",
                "content": "\n\tConsider the following decomposition view of the Catalog of DVD case study.\n\t\n\t\\centering\n\t\\includegraphics[width=100mm]{dvd-top-decomposition}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-top-decomposition.png",
                        "width": 100
                    }
                ],
                "options": [
                    "The decomposition was driven by a defer binding tactic.",
                    "The decomposition was driven by a quality that is supported by a restrict dependencies tactic.",
                    "The decomposition was driven by a split module tactic.",
                    "The decomposition was driven by a quality that is supported by an encapsulate tactic."
                ]
            },
            {
                "questionId": "OrderPadPortability",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. The decision whether use a Native application or HTML5 for the implementation of the client in the Pad was taken because\n\t\n    ",
                "image": [],
                "options": [
                    "HTML5 provides better portability qualities.",
                    "Native applications provide better modifiability qualities.",
                    "HTML5 provides better usability qualities.",
                    "Native applications provide better support for working offline."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-42A.tex",
        "quizTitle": "..-data-2017-test-4-test-42A",
        "questions": [
            {
                "questionId": "CommunicatingProcesses",
                "content": "\n\tIn the web page of the NGINX HTTP server can be read\n\t\n\t\\begin{quote}\n\t\tNGINX is a free, open-source, high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server. (...)\n\t\tUnlike traditional servers, NGINX doesn't rely on threads to handle requests. Instead it uses a much more scalable event-driven (asynchronous) architecture. This architecture uses small, but more importantly, predictable amounts of memory under load.\n\t\\end{quote}\n\t\n\tAccording to the above description the most adequate architectural style to represent the performance qualities of NGINX is\n\t\n    ",
                "image": [],
                "options": [
                    "Dynamic Reconfiguration.",
                    "Tiers.",
                    "Communicating Processes.",
                    "Install."
                ]
            },
            {
                "questionId": "DVDAutocomplete",
                "content": "\n\tConsider the following decomposition views of the Catalog of DVD case study were the \\emph{Autocomplete} module is implemented in javascript and executes in a browser.\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{dvd-autocomplete}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-autocomplete.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The view illustrates the achievement of a security scenario.",
                    "The view illustrates the achievement of a performance scenario.",
                    "The view results from the implementation of a support user initiative tactic.",
                    "The view results from the implementation of a support system initiative tactic."
                ]
            },
            {
                "questionId": "GraphiteAvailabilityScenario",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following view that represents the internal behavior of the \\emph{Carbon} component, where the components \\texttt{r1,... , rn, w} are threads and \\texttt{q1, ..., qn} are buffers. The port \\emph{read}, which provides an interface to read the data points stored in the queue, can be used, in an enrichment of the view, to illustrate\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-carbon}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-carbon.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A modifiability scenario the \\emph{Graphite} system.",
                    "A usability scenario of the \\emph{Graphite} system.",
                    "A performance scenario of the \\emph{Graphite} system.",
                    "An availability scenario of the \\emph{Graphite} system."
                ]
            },
            {
                "questionId": "Silk",
                "content": "\n\tIn the Amazon Silk browser  \n\t\n    ",
                "image": [],
                "options": [
                    "A request for a web page corresponds to a peer-to-peer interaction between all the web components containing the resources.",
                    "Web pages are explicitly cached on the browser to optimize accesses.",
                    "A request for a web page corresponds to requesting a service from the amazon cloud.",
                    "It is possible to customize the number of threads that run in the mobile device."
                ]
            },
            {
                "questionId": "MicroservicesTwo",
                "content": "\n\tSuppose that an architect needs to decide whether to follow a modular monolith architecture or a microservices architecture for a new large system. The system to be developed has a complex logic and high volume of requests. \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "She should decide to use a microservices architecture to improve the scalability of the system.",
                    "She should decide to use a modular monolith architecture to reduce the cost of development, because developers will not need to define intermediate states for the transactional execution of the business logic.",
                    "She should try to split the system in parts in order to isolate the complex business logic and use the two architectural approaches accordingly.",
                    "She should give up because it is not possible to have the two approaches in a singe architecture."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-42B.tex",
        "quizTitle": "..-data-2017-test-4-test-42B",
        "questions": [
            {
                "questionId": "GraphiteAvailabilityScenario",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following view that represents the internal behavior of the \\emph{Carbon} component, where the components \\texttt{r1,... , rn, w} are threads and \\texttt{q1, ..., qn} are buffers. The port \\emph{read}, which provides an interface to read the data points stored in the queue, can be used, in an enrichment of the view, to illustrate\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-carbon}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-carbon.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A modifiability scenario the \\emph{Graphite} system.",
                    "A usability scenario of the \\emph{Graphite} system.",
                    "A performance scenario of the \\emph{Graphite} system.",
                    "An availability scenario of the \\emph{Graphite} system."
                ]
            },
            {
                "questionId": "Silk",
                "content": "\n\tIn the Amazon Silk browser  \n\t\n    ",
                "image": [],
                "options": [
                    "A request for a web page corresponds to a peer-to-peer interaction between all the web components containing the resources.",
                    "Web pages are explicitly cached on the browser to optimize accesses.",
                    "A request for a web page corresponds to requesting a service from the amazon cloud.",
                    "It is possible to customize the number of threads that run in the mobile device."
                ]
            },
            {
                "questionId": "MicroservicesTwo",
                "content": "\n\tSuppose that an architect needs to decide whether to follow a modular monolith architecture or a microservices architecture for a new large system. The system to be developed has a complex logic and high volume of requests. \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "She should decide to use a microservices architecture to improve the scalability of the system.",
                    "She should decide to use a modular monolith architecture to reduce the cost of development, because developers will not need to define intermediate states for the transactional execution of the business logic.",
                    "She should try to split the system in parts in order to isolate the complex business logic and use the two architectural approaches accordingly.",
                    "She should give up because it is not possible to have the two approaches in a singe architecture."
                ]
            },
            {
                "questionId": "CommunicatingProcesses",
                "content": "\n\tIn the web page of the NGINX HTTP server can be read\n\t\n\t\\begin{quote}\n\t\tNGINX is a free, open-source, high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server. (...)\n\t\tUnlike traditional servers, NGINX doesn't rely on threads to handle requests. Instead it uses a much more scalable event-driven (asynchronous) architecture. This architecture uses small, but more importantly, predictable amounts of memory under load.\n\t\\end{quote}\n\t\n\tAccording to the above description the most adequate architectural style to represent the performance qualities of NGINX is\n\t\n    ",
                "image": [],
                "options": [
                    "Dynamic Reconfiguration.",
                    "Tiers.",
                    "Communicating Processes.",
                    "Install."
                ]
            },
            {
                "questionId": "DVDAutocomplete",
                "content": "\n\tConsider the following decomposition views of the Catalog of DVD case study were the \\emph{Autocomplete} module is implemented in javascript and executes in a browser.\n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{dvd-autocomplete}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-autocomplete.png",
                        "width": 120
                    }
                ],
                "options": [
                    "The view illustrates the achievement of a security scenario.",
                    "The view illustrates the achievement of a performance scenario.",
                    "The view results from the implementation of a support user initiative tactic.",
                    "The view results from the implementation of a support system initiative tactic."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-43A.tex",
        "quizTitle": "..-data-2017-test-4-test-43A",
        "questions": [
            {
                "questionId": "AllocationStylesCost",
                "content": "\n\tConsider a stakeholder that is particularly concerned about the total cost of the project. When it comes to describing the system using allocation viewtypes is interested in\n\n    ",
                "image": [],
                "options": [
                    "A deployment view.",
                    "A work assignment view.",
                    "A deployment and a work assignment view.",
                    "A install view."
                ]
            },
            {
                "questionId": "DVDGeneralization",
                "content": "\n\tConsider the following generalization view of the Catalog of DVD case study.\n\t\n\t\\centering\n\t\\includegraphics[width=60mm]{dvd-generalization}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-generalization.png",
                        "width": 60
                    }
                ],
                "options": [
                    "This generalization was driven by a split module tactic.",
                    "This view fulfills an availability scenario, which defines the expected behavior whenever an external source is not available.",
                    "This view fulfills a modifiability scenario, which states about the cost of adding a new source of information to the system.",
                    "This view fulfills a modifiability scenario, which states that it should be easy to support the system in new software platforms, e.g. \\emph{Windows} or \\emph{OS X} ."
                ]
            },
            {
                "questionId": "GraphiteWebapp",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following application-specific types that are used in a view to represent the internal behavior of the \\emph{Webapp} component. \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-webapp}\n\t\n\tThis view can show that the architecture fulfills  \n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-webapp.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A modifiability scenario the \\emph{Graphite} system.",
                    "A usability scenario of the \\emph{Graphite} system.",
                    "A single performance scenario of the \\emph{Graphite} system.",
                    "At least two performance scenarios of the \\emph{Graphite} system."
                ]
            },
            {
                "questionId": "OrderPadIterative",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. In the description of the system can be read:\n\t\n\t\\begin{quote}\n\t\tThe pilot version included some architectural short-cuts that would not work with the full complement of stores. One of these was using a file-transfer to send data to the mainframe rather than MQ, which wouldn't perform well once many stores were active.\n\t\\end{quote}\n\t\n\tThis approach means that\n\t\n    ",
                "image": [],
                "options": [
                    "Performance was traded for easy of development to reduce the overall development costs.",
                    "An iterative development was followed, which allowed more time to develop a connector with good performance in the latter stages of the project.",
                    "Performance was traded for the availability quality.",
                    "An incremental development was followed, which allowed to have the system in production without being necessary to export all the information to the mainframe."
                ]
            },
            {
                "questionId": "MicroservicesThree",
                "content": "\n\tConsider the architectural solutions for microservices architectures that use the Command Query Responsibility Segregation (CQRS) technique in the context of Event Sourcing. This technique has the following disadvantage \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Does not allow optimizations according to the type of query.",
                    "Does not support independent scalability according to the type of operation.",
                    "Reads may not be consistent with the most recent write.",
                    "Querying the event sourcing becomes more complex."
                ]
            }
        ]
    },
    {
        "quizFile": "/home/pedro/as-tutor/data-extraction/../data/2017/test-4/test-43B.tex",
        "quizTitle": "..-data-2017-test-4-test-43B",
        "questions": [
            {
                "questionId": "OrderPadIterative",
                "content": "\n\tConsider the architecture of the Morrison's OrderPad. In the description of the system can be read:\n\t\n\t\\begin{quote}\n\t\tThe pilot version included some architectural short-cuts that would not work with the full complement of stores. One of these was using a file-transfer to send data to the mainframe rather than MQ, which wouldn't perform well once many stores were active.\n\t\\end{quote}\n\t\n\tThis approach means that\n\t\n    ",
                "image": [],
                "options": [
                    "Performance was traded for easy of development to reduce the overall development costs.",
                    "An iterative development was followed, which allowed more time to develop a connector with good performance in the latter stages of the project.",
                    "Performance was traded for the availability quality.",
                    "An incremental development was followed, which allowed to have the system in production without being necessary to export all the information to the mainframe."
                ]
            },
            {
                "questionId": "AllocationStylesCost",
                "content": "\n\tConsider a stakeholder that is particularly concerned about the total cost of the project. When it comes to describing the system using allocation viewtypes is interested in\n\n    ",
                "image": [],
                "options": [
                    "A deployment view.",
                    "A work assignment view.",
                    "A deployment and a work assignment view.",
                    "A install view."
                ]
            },
            {
                "questionId": "DVDGeneralization",
                "content": "\n\tConsider the following generalization view of the Catalog of DVD case study.\n\t\n\t\\centering\n\t\\includegraphics[width=60mm]{dvd-generalization}\n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/dvd-generalization.png",
                        "width": 60
                    }
                ],
                "options": [
                    "This generalization was driven by a split module tactic.",
                    "This view fulfills an availability scenario, which defines the expected behavior whenever an external source is not available.",
                    "This view fulfills a modifiability scenario, which states about the cost of adding a new source of information to the system.",
                    "This view fulfills a modifiability scenario, which states that it should be easy to support the system in new software platforms, e.g. \\emph{Windows} or \\emph{OS X} ."
                ]
            },
            {
                "questionId": "GraphiteWebapp",
                "content": "\n\tIn the context of the \\emph{Graphite} case study, consider the following application-specific types that are used in a view to represent the internal behavior of the \\emph{Webapp} component. \n\t\n\t\\centering\n\t\\includegraphics[width=120mm]{graphite-webapp}\n\t\n\tThis view can show that the architecture fulfills  \n\n    ",
                "image": [
                    {
                        "image": "/home/pedro/as-tutor/data/2017/test-4/graphite-webapp.png",
                        "width": 120
                    }
                ],
                "options": [
                    "A modifiability scenario the \\emph{Graphite} system.",
                    "A usability scenario of the \\emph{Graphite} system.",
                    "A single performance scenario of the \\emph{Graphite} system.",
                    "At least two performance scenarios of the \\emph{Graphite} system."
                ]
            },
            {
                "questionId": "MicroservicesThree",
                "content": "\n\tConsider the architectural solutions for microservices architectures that use the Command Query Responsibility Segregation (CQRS) technique in the context of Event Sourcing. This technique has the following disadvantage \n\t\t\t\n    ",
                "image": [],
                "options": [
                    "Does not allow optimizations according to the type of query.",
                    "Does not support independent scalability according to the type of operation.",
                    "Reads may not be consistent with the most recent write.",
                    "Querying the event sourcing becomes more complex."
                ]
            }
        ]
    }
]
## Profile specific properties
spring.profiles.active=@activatedProperties@

## maven directory
maven.basedir=@project.basedir@

## Datasource
spring.datasource.driver-class-name=org.postgresql.Driver

# A list of all Hikari parameters with a good explanation is available on https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
# This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool. Default: same as maximumPoolSize
#spring.datasource.hikari.minimumIdle=4
# This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections. Basically this value will determine the maximum number of actual connections to the database backend.
# Default: 10
spring.datasource.hikari.maximumPoolSize=30
#This property controls the maximum number of milliseconds that a client (that's you) will wait for a connection from the pool. If this time is exceeded without a connection becoming available, a SQLException will be thrown.
#Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
spring.datasource.hikari.connectionTimeout=300000
# This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when minimumIdle is defined to be less than maximumPoolSize
# Default: 600000 (10 minutes)
spring.datasource.hikari.idleTimeout=600000
# This property controls the maximum lifetime of a connection in the pool. An in-use connection will never be retired, only when it is closed will it then be removed.
# Default: 1800000 (30 minutes)
spring.datasource.hikari.maxLifetime=1800000

## Jpa
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = false
spring.jpa.open-in-view=false
# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## Resources
spring.web.resources.add-mappings=false

# Allow OPTION requests for authentication
spring.mvc.dispatch-options-request=true

# groovy
spring.groovy.template.check-template-location=false

# Default port
server.port = 8084

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

spring.devtools.livereload.port=35730
# Debug mode
#logging.level.io.eventuate=DEBUG
#logging.level.net.chrisrichardson.ftgo=DEBUG
#logging.level.io.eventuate.tram=DEBUG

spring.application.name=tutor-service

## Apache Kafka
eventuatelocal.zookeeper.connection.string=${DOCKER_HOST_IP:localhost}:2181
eventuatelocal.kafka.bootstrap.servers=${DOCKER_HOST_IP:localhost}:9092

## Eventuate database schema
# https://github.com/eventuate-tram/eventuate-tram-core/issues/104
eventuate.database.schema=none